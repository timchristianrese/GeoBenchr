- name: countActiveCrossingsNearIsland
  type: spatial
  sql: |
    SELECT COUNT(*) FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE i.name = 'Phlevopoula';
  params:
  - Phlevopoula
- name: crossingsStartedAtSpecificTimeOnDay
  type: temporal
  sql: |
    SELECT * FROM crossings c WHERE EXTRACT(HOUR FROM lower(c.traj)) = 13 AND EXTRACT(DAY FROM lower(c.traj)) = '2019-02-01';
  params:
  - '2019-02-01'
  - 13
- name: crossingsStartedAtSpecificTimeOnDay
  type: temporal
  sql: |
    SELECT * FROM crossings c WHERE EXTRACT(HOUR FROM lower(c.traj)) = 2 AND EXTRACT(DAY FROM lower(c.traj)) = '2019-10-16';
  params:
  - '2019-10-16'
  - 2
- name: countActiveCrossingsNearIsland
  type: spatial
  sql: |
    SELECT COUNT(*) FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE i.name = 'Nisis Ipsili';
  params:
  - Nisis Ipsili
- name: crossingsStartedAtSpecificTimeOnDay
  type: temporal
  sql: |
    SELECT * FROM crossings c WHERE EXTRACT(HOUR FROM lower(c.traj)) = 12 AND EXTRACT(DAY FROM lower(c.traj)) = '2019-09-29';
  params:
  - '2019-09-29'
  - 12
- name: averageDurationCrossingNearToIslandInPeriod
  type: spatiotemporal
  sql: |
    SELECT AVG(duration(c.traj)) as avg_duration FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE c.traj && tstzspan '[2019-04-30 04:34:03, 2019-05-03 20:23:29]' AND i.name = 'Nisis Islet';
  params:
  - Nisis Islet
  - - '2019-04-30 04:34:03'
    - '2019-05-03 20:23:29'
- name: mostFrequentHarboursInPeriod
  type: spatiotemporal
  sql: |
    SELECT h.name, COUNT(*) as crossing_count FROM harbours h JOIN crossings c ON ST_DWithin(endValue(c.traj), h.geom, 500) WHERE c.traj && tstzspan '[2019-12-16 07:07:40, 2019-12-20 08:29:58]' AND h.name = 'AGIOI THEODORI' GROUP BY h.name ORDER BY crossing_count DESC;
  params:
  - AGIOI THEODORI
  - - '2019-12-16 07:07:40'
    - '2019-12-20 08:29:58'
- name: countActiveCrossingsNearIsland
  type: spatial
  sql: |
    SELECT COUNT(*) FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE i.name = 'Nisis Metopi';
  params:
  - Nisis Metopi
- name: countActiveCrossingsNearIsland
  type: spatial
  sql: |
    SELECT COUNT(*) FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE i.name = 'Kasidis';
  params:
  - Kasidis
- name: countActiveCrossingsNearIsland
  type: spatial
  sql: |
    SELECT COUNT(*) FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE i.name = 'Anagnostis';
  params:
  - Anagnostis
- name: mostFrequentHarboursInPeriod
  type: spatiotemporal
  sql: |
    SELECT h.name, COUNT(*) as crossing_count FROM harbours h JOIN crossings c ON ST_DWithin(endValue(c.traj), h.geom, 500) WHERE c.traj && tstzspan '[2019-04-23 04:47:15, 2019-05-04 12:59:49]' AND h.name = 'ERMIONI' GROUP BY h.name ORDER BY crossing_count DESC;
  params:
  - ERMIONI
  - - '2019-04-23 04:47:15'
    - '2019-05-04 12:59:49'
- name: countActiveCrossingsNearIsland
  type: spatial
  sql: |
    SELECT COUNT(*) FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE i.name = 'Kourmouloudes';
  params:
  - Kourmouloudes
- name: countActiveCrossingsInPeriod
  type: temporal
  sql: |
    SELECT COUNT(*), tstzspan '[2019-11-10 07:57:42, 2019-11-21 05:56:14]' FROM crossings c WHERE c.traj && tstzspan '[2019-11-10 07:57:42, 2019-11-21 05:56:14]';
  params:
  - - '2019-11-10 07:57:42'
    - '2019-11-21 05:56:14'
- name: averageDurationCrossingNearToIslandInPeriod
  type: spatiotemporal
  sql: |
    SELECT AVG(duration(c.traj)) as avg_duration FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE c.traj && tstzspan '[2019-09-06 10:29:25, 2019-09-15 10:09:27]' AND i.name = 'Aponissos';
  params:
  - Aponissos
  - - '2019-09-06 10:29:25'
    - '2019-09-15 10:09:27'
- name: mostFrequentHarboursInPeriod
  type: spatiotemporal
  sql: |
    SELECT h.name, COUNT(*) as crossing_count FROM harbours h JOIN crossings c ON ST_DWithin(endValue(c.traj), h.geom, 500) WHERE c.traj && tstzspan '[2019-02-21 06:37:15, 2019-03-03 06:41:50]' AND h.name = 'AGIOI THEODORI' GROUP BY h.name ORDER BY crossing_count DESC;
  params:
  - AGIOI THEODORI
  - - '2019-02-21 06:37:15'
    - '2019-03-03 06:41:50'
- name: crossingsStartedAtSpecificTimeOnDay
  type: temporal
  sql: |
    SELECT * FROM crossings c WHERE EXTRACT(HOUR FROM lower(c.traj)) = 9 AND EXTRACT(DAY FROM lower(c.traj)) = '2019-06-23';
  params:
  - '2019-06-23'
  - 9
- name: countActiveCrossingsInPeriod
  type: temporal
  sql: |
    SELECT COUNT(*), tstzspan '[2019-04-28 03:35:08, 2019-05-01 12:29:28]' FROM crossings c WHERE c.traj && tstzspan '[2019-04-28 03:35:08, 2019-05-01 12:29:28]';
  params:
  - - '2019-04-28 03:35:08'
    - '2019-05-01 12:29:28'
- name: mostFrequentHarboursInPeriod
  type: spatiotemporal
  sql: |
    SELECT h.name, COUNT(*) as crossing_count FROM harbours h JOIN crossings c ON ST_DWithin(endValue(c.traj), h.geom, 500) WHERE c.traj && tstzspan '[2019-01-26 07:23:10, 2019-02-09 15:11:39]' AND h.name = 'GLYFADA' GROUP BY h.name ORDER BY crossing_count DESC;
  params:
  - GLYFADA
  - - '2019-01-26 07:23:10'
    - '2019-02-09 15:11:39'
- name: averageDurationCrossingNearToIslandInPeriod
  type: spatiotemporal
  sql: |
    SELECT AVG(duration(c.traj)) as avg_duration FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE c.traj && tstzspan '[2019-08-17 23:55:01, 2019-08-20 23:41:05]' AND i.name = 'Nisis Metopi';
  params:
  - Nisis Metopi
  - - '2019-08-17 23:55:01'
    - '2019-08-20 23:41:05'
- name: mostFrequentHarboursInPeriod
  type: spatiotemporal
  sql: |
    SELECT h.name, COUNT(*) as crossing_count FROM harbours h JOIN crossings c ON ST_DWithin(endValue(c.traj), h.geom, 500) WHERE c.traj && tstzspan '[2019-01-08 09:46:04, 2019-01-17 05:51:30]' AND h.name = 'AGISTRI' GROUP BY h.name ORDER BY crossing_count DESC;
  params:
  - AGISTRI
  - - '2019-01-08 09:46:04'
    - '2019-01-17 05:51:30'
- name: crossingsConnectTwoGivenHarbours
  type: spatial
  sql: |
    SELECT c.* FROM crossings c JOIN harbours h1 ON ST_DWithin(startValue(c.traj), h1.geom, 500) JOIN harbours h2 ON ST_DWithin(endValue(c.traj), h2.geom, 500) WHERE h1.name = 'FLISVOS' AND h2.name = 'FLISVOS'2;
  params:
  - FLISVOS
  - ERMIONI
- name: crossingsConnectTwoGivenHarbours
  type: spatial
  sql: |
    SELECT c.* FROM crossings c JOIN harbours h1 ON ST_DWithin(startValue(c.traj), h1.geom, 500) JOIN harbours h2 ON ST_DWithin(endValue(c.traj), h2.geom, 500) WHERE h1.name = 'AEGINA' AND h2.name = 'AEGINA'2;
  params:
  - AEGINA
  - AGIOS KOSMAS
- name: mostFrequentHarboursInPeriod
  type: spatiotemporal
  sql: |
    SELECT h.name, COUNT(*) as crossing_count FROM harbours h JOIN crossings c ON ST_DWithin(endValue(c.traj), h.geom, 500) WHERE c.traj && tstzspan '[2019-06-20 11:48:48, 2019-06-27 21:15:05]' AND h.name = 'AGIOI THEODORI' GROUP BY h.name ORDER BY crossing_count DESC;
  params:
  - AGIOI THEODORI
  - - '2019-06-20 11:48:48'
    - '2019-06-27 21:15:05'
- name: countActiveCrossingsInPeriod
  type: temporal
  sql: |
    SELECT COUNT(*), tstzspan '[2019-05-24 02:52:20, 2019-05-29 13:02:57]' FROM crossings c WHERE c.traj && tstzspan '[2019-05-24 02:52:20, 2019-05-29 13:02:57]';
  params:
  - - '2019-05-24 02:52:20'
    - '2019-05-29 13:02:57'
- name: crossingsConnectTwoGivenHarbours
  type: spatial
  sql: |
    SELECT c.* FROM crossings c JOIN harbours h1 ON ST_DWithin(startValue(c.traj), h1.geom, 500) JOIN harbours h2 ON ST_DWithin(endValue(c.traj), h2.geom, 500) WHERE h1.name = 'FALIRO' AND h2.name = 'FALIRO'2;
  params:
  - FALIRO
  - CORINTH CANAL
- name: countActiveCrossingsInPeriod
  type: temporal
  sql: |
    SELECT COUNT(*), tstzspan '[2019-04-06 21:50:50, 2019-04-19 21:11:35]' FROM crossings c WHERE c.traj && tstzspan '[2019-04-06 21:50:50, 2019-04-19 21:11:35]';
  params:
  - - '2019-04-06 21:50:50'
    - '2019-04-19 21:11:35'
- name: crossingsStartedAtSpecificTimeOnDay
  type: temporal
  sql: |
    SELECT * FROM crossings c WHERE EXTRACT(HOUR FROM lower(c.traj)) = 7 AND EXTRACT(DAY FROM lower(c.traj)) = '2019-01-09';
  params:
  - '2019-01-09'
  - 7
- name: crossingsStartedAtSpecificTimeOnDay
  type: temporal
  sql: |
    SELECT * FROM crossings c WHERE EXTRACT(HOUR FROM lower(c.traj)) = 21 AND EXTRACT(DAY FROM lower(c.traj)) = '2019-02-17';
  params:
  - '2019-02-17'
  - 21
- name: countActiveCrossingsInPeriod
  type: temporal
  sql: |
    SELECT COUNT(*), tstzspan '[2019-05-23 17:42:03, 2019-06-02 09:46:26]' FROM crossings c WHERE c.traj && tstzspan '[2019-05-23 17:42:03, 2019-06-02 09:46:26]';
  params:
  - - '2019-05-23 17:42:03'
    - '2019-06-02 09:46:26'
- name: countActiveCrossingsNearIsland
  type: spatial
  sql: |
    SELECT COUNT(*) FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE i.name = 'Nisis Metopi';
  params:
  - Nisis Metopi
- name: countActiveCrossingsInPeriod
  type: temporal
  sql: |
    SELECT COUNT(*), tstzspan '[2019-04-18 14:23:50, 2019-04-20 23:39:18]' FROM crossings c WHERE c.traj && tstzspan '[2019-04-18 14:23:50, 2019-04-20 23:39:18]';
  params:
  - - '2019-04-18 14:23:50'
    - '2019-04-20 23:39:18'
- name: crossingsConnectTwoGivenHarbours
  type: spatial
  sql: |
    SELECT c.* FROM crossings c JOIN harbours h1 ON ST_DWithin(startValue(c.traj), h1.geom, 500) JOIN harbours h2 ON ST_DWithin(endValue(c.traj), h2.geom, 500) WHERE h1.name = 'RAFINA' AND h2.name = 'RAFINA'2;
  params:
  - RAFINA
  - ASPROPYRGOS
- name: countActiveCrossingsNearIsland
  type: spatial
  sql: |
    SELECT COUNT(*) FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE i.name = 'Spalaphtronisi Islet';
  params:
  - Spalaphtronisi Islet
- name: crossingsStartedAtSpecificTimeOnDay
  type: temporal
  sql: |
    SELECT * FROM crossings c WHERE EXTRACT(HOUR FROM lower(c.traj)) = 4 AND EXTRACT(DAY FROM lower(c.traj)) = '2019-05-28';
  params:
  - '2019-05-28'
  - 4
- name: countActiveCrossingsInPeriod
  type: temporal
  sql: |
    SELECT COUNT(*), tstzspan '[2019-10-24 14:14:57, 2019-10-30 04:43:15]' FROM crossings c WHERE c.traj && tstzspan '[2019-10-24 14:14:57, 2019-10-30 04:43:15]';
  params:
  - - '2019-10-24 14:14:57'
    - '2019-10-30 04:43:15'
- name: averageDurationCrossingNearToIslandInPeriod
  type: spatiotemporal
  sql: |
    SELECT AVG(duration(c.traj)) as avg_duration FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE c.traj && tstzspan '[2019-03-13 08:18:11, 2019-03-27 07:15:54]' AND i.name = 'Nisis Islet';
  params:
  - Nisis Islet
  - - '2019-03-13 08:18:11'
    - '2019-03-27 07:15:54'
- name: mostFrequentHarboursInPeriod
  type: spatiotemporal
  sql: |
    SELECT h.name, COUNT(*) as crossing_count FROM harbours h JOIN crossings c ON ST_DWithin(endValue(c.traj), h.geom, 500) WHERE c.traj && tstzspan '[2019-11-12 17:49:41, 2019-11-22 14:24:36]' AND h.name = 'AGISTRI' GROUP BY h.name ORDER BY crossing_count DESC;
  params:
  - AGISTRI
  - - '2019-11-12 17:49:41'
    - '2019-11-22 14:24:36'
- name: countActiveCrossingsNearIsland
  type: spatial
  sql: |
    SELECT COUNT(*) FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE i.name = 'Revithousa';
  params:
  - Revithousa
- name: mostFrequentHarboursInPeriod
  type: spatiotemporal
  sql: |
    SELECT h.name, COUNT(*) as crossing_count FROM harbours h JOIN crossings c ON ST_DWithin(endValue(c.traj), h.geom, 500) WHERE c.traj && tstzspan '[2019-05-09 04:49:52, 2019-05-16 13:07:32]' AND h.name = 'PIRAEUS' GROUP BY h.name ORDER BY crossing_count DESC;
  params:
  - PIRAEUS
  - - '2019-05-09 04:49:52'
    - '2019-05-16 13:07:32'
- name: averageDurationCrossingNearToIslandInPeriod
  type: spatiotemporal
  sql: |
    SELECT AVG(duration(c.traj)) as avg_duration FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE c.traj && tstzspan '[2019-07-11 03:41:51, 2019-07-19 09:28:16]' AND i.name = 'Psittalia';
  params:
  - Psittalia
  - - '2019-07-11 03:41:51'
    - '2019-07-19 09:28:16'
- name: averageDurationCrossingNearToIslandInPeriod
  type: spatiotemporal
  sql: |
    SELECT AVG(duration(c.traj)) as avg_duration FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE c.traj && tstzspan '[2019-10-09 04:19:46, 2019-10-21 01:30:48]' AND i.name = 'Kasidis';
  params:
  - Kasidis
  - - '2019-10-09 04:19:46'
    - '2019-10-21 01:30:48'
- name: crossingsConnectTwoGivenHarbours
  type: spatial
  sql: |
    SELECT c.* FROM crossings c JOIN harbours h1 ON ST_DWithin(startValue(c.traj), h1.geom, 500) JOIN harbours h2 ON ST_DWithin(endValue(c.traj), h2.geom, 500) WHERE h1.name = 'ZEA' AND h2.name = 'ZEA'2;
  params:
  - ZEA
  - CORINTH CANAL
- name: averageDurationCrossingNearToIslandInPeriod
  type: spatiotemporal
  sql: |
    SELECT AVG(duration(c.traj)) as avg_duration FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE c.traj && tstzspan '[2019-11-23 03:58:53, 2019-11-30 07:46:56]' AND i.name = 'Makronisos';
  params:
  - Makronisos
  - - '2019-11-23 03:58:53'
    - '2019-11-30 07:46:56'
- name: crossingsStartedAtSpecificTimeOnDay
  type: temporal
  sql: |
    SELECT * FROM crossings c WHERE EXTRACT(HOUR FROM lower(c.traj)) = 11 AND EXTRACT(DAY FROM lower(c.traj)) = '2019-07-06';
  params:
  - '2019-07-06'
  - 11
- name: countActiveCrossingsNearIsland
  type: spatial
  sql: |
    SELECT COUNT(*) FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE i.name = 'Kasidis';
  params:
  - Kasidis
- name: crossingsConnectTwoGivenHarbours
  type: spatial
  sql: |
    SELECT c.* FROM crossings c JOIN harbours h1 ON ST_DWithin(startValue(c.traj), h1.geom, 500) JOIN harbours h2 ON ST_DWithin(endValue(c.traj), h2.geom, 500) WHERE h1.name = 'GLYFADA' AND h2.name = 'GLYFADA'2;
  params:
  - GLYFADA
  - ZEA
- name: crossingsStartedAtSpecificTimeOnDay
  type: temporal
  sql: |
    SELECT * FROM crossings c WHERE EXTRACT(HOUR FROM lower(c.traj)) = 10 AND EXTRACT(DAY FROM lower(c.traj)) = '2019-09-05';
  params:
  - '2019-09-05'
  - 10
- name: countActiveCrossingsInPeriod
  type: temporal
  sql: |
    SELECT COUNT(*), tstzspan '[2019-06-23 10:41:03, 2019-07-03 04:35:50]' FROM crossings c WHERE c.traj && tstzspan '[2019-06-23 10:41:03, 2019-07-03 04:35:50]';
  params:
  - - '2019-06-23 10:41:03'
    - '2019-07-03 04:35:50'
- name: crossingsStartedAtSpecificTimeOnDay
  type: temporal
  sql: |
    SELECT * FROM crossings c WHERE EXTRACT(HOUR FROM lower(c.traj)) = 0 AND EXTRACT(DAY FROM lower(c.traj)) = '2019-03-27';
  params:
  - '2019-03-27'
  - 0
- name: averageDurationCrossingNearToIslandInPeriod
  type: spatiotemporal
  sql: |
    SELECT AVG(duration(c.traj)) as avg_duration FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE c.traj && tstzspan '[2019-10-13 07:35:31, 2019-10-27 15:20:35]' AND i.name = 'Kourmouloudes';
  params:
  - Kourmouloudes
  - - '2019-10-13 07:35:31'
    - '2019-10-27 15:20:35'
- name: countActiveCrossingsInPeriod
  type: temporal
  sql: |
    SELECT COUNT(*), tstzspan '[2019-10-24 05:01:02, 2019-11-07 03:35:22]' FROM crossings c WHERE c.traj && tstzspan '[2019-10-24 05:01:02, 2019-11-07 03:35:22]';
  params:
  - - '2019-10-24 05:01:02'
    - '2019-11-07 03:35:22'
- name: averageDurationCrossingNearToIslandInPeriod
  type: spatiotemporal
  sql: |
    SELECT AVG(duration(c.traj)) as avg_duration FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE c.traj && tstzspan '[2019-02-27 07:42:05, 2019-03-01 12:19:51]' AND i.name = 'Psittalia';
  params:
  - Psittalia
  - - '2019-02-27 07:42:05'
    - '2019-03-01 12:19:51'
- name: crossingsConnectTwoGivenHarbours
  type: spatial
  sql: |
    SELECT c.* FROM crossings c JOIN harbours h1 ON ST_DWithin(startValue(c.traj), h1.geom, 500) JOIN harbours h2 ON ST_DWithin(endValue(c.traj), h2.geom, 500) WHERE h1.name = 'PIRAEUS' AND h2.name = 'PIRAEUS'2;
  params:
  - PIRAEUS
  - SIRI
- name: crossingsConnectTwoGivenHarbours
  type: spatial
  sql: |
    SELECT c.* FROM crossings c JOIN harbours h1 ON ST_DWithin(startValue(c.traj), h1.geom, 500) JOIN harbours h2 ON ST_DWithin(endValue(c.traj), h2.geom, 500) WHERE h1.name = 'CORINTH CANAL' AND h2.name = 'CORINTH CANAL'2;
  params:
  - CORINTH CANAL
  - ERMIONI
- name: countActiveCrossingsInPeriod
  type: temporal
  sql: |
    SELECT COUNT(*), tstzspan '[2019-05-08 11:44:34, 2019-05-12 13:50:33]' FROM crossings c WHERE c.traj && tstzspan '[2019-05-08 11:44:34, 2019-05-12 13:50:33]';
  params:
  - - '2019-05-08 11:44:34'
    - '2019-05-12 13:50:33'
- name: crossingsConnectTwoGivenHarbours
  type: spatial
  sql: |
    SELECT c.* FROM crossings c JOIN harbours h1 ON ST_DWithin(startValue(c.traj), h1.geom, 500) JOIN harbours h2 ON ST_DWithin(endValue(c.traj), h2.geom, 500) WHERE h1.name = 'AEGINA' AND h2.name = 'AEGINA'2;
  params:
  - AEGINA
  - FLISVOS
- name: crossingsConnectTwoGivenHarbours
  type: spatial
  sql: |
    SELECT c.* FROM crossings c JOIN harbours h1 ON ST_DWithin(startValue(c.traj), h1.geom, 500) JOIN harbours h2 ON ST_DWithin(endValue(c.traj), h2.geom, 500) WHERE h1.name = 'PERAMA' AND h2.name = 'PERAMA'2;
  params:
  - PERAMA
  - AGIOS KOSMAS
- name: averageDurationCrossingNearToIslandInPeriod
  type: spatiotemporal
  sql: |
    SELECT AVG(duration(c.traj)) as avg_duration FROM crossings c JOIN islands i ON ST_DWithin(trajectory(c.traj), i.geom, 2500) WHERE c.traj && tstzspan '[2019-06-09 20:22:40, 2019-06-16 16:38:15]' AND i.name = 'Nisis Metopi';
  params:
  - Nisis Metopi
  - - '2019-06-09 20:22:40'
    - '2019-06-16 16:38:15'
- name: mostFrequentHarboursInPeriod
  type: spatiotemporal
  sql: |
    SELECT h.name, COUNT(*) as crossing_count FROM harbours h JOIN crossings c ON ST_DWithin(endValue(c.traj), h.geom, 500) WHERE c.traj && tstzspan '[2019-10-07 21:34:29, 2019-10-20 05:59:54]' AND h.name = 'LAVRIO' GROUP BY h.name ORDER BY crossing_count DESC;
  params:
  - LAVRIO
  - - '2019-10-07 21:34:29'
    - '2019-10-20 05:59:54'
- name: mostFrequentHarboursInPeriod
  type: spatiotemporal
  sql: |
    SELECT h.name, COUNT(*) as crossing_count FROM harbours h JOIN crossings c ON ST_DWithin(endValue(c.traj), h.geom, 500) WHERE c.traj && tstzspan '[2019-06-25 07:23:56, 2019-07-02 05:52:25]' AND h.name = 'RAFINA' GROUP BY h.name ORDER BY crossing_count DESC;
  params:
  - RAFINA
  - - '2019-06-25 07:23:56'
    - '2019-07-02 05:52:25'
