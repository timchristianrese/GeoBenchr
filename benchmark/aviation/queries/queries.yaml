- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: 'WITH hours AS ( SELECT generate_series( DATE 2023-07-09::timestamp, DATE 2023-07-09
    + INTERVAL ''1 day'' - INTERVAL ''1 second'', INTERVAL ''1 hour'') AS start_time)
    SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities
    g ON g.name = Gem Lotte LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time,
    h.start_time + INTERVAL ''1 hour'' - INTERVAL ''1 second'')), g.geom) WHERE f.trip
    && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL ''1 hour'' - INTERVAL
    ''1 second'')) GROUP BY h.start_time ORDER BY h.start_time;

    '
  params:
  - '2023-07-09'
  - Gem Lotte
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: 'WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities
    c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport,
    a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city
    FROM flights f JOIN counties k ON k.name = Krs Hoexter LEFT JOIN airports a1 ON
    f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin
    IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM
    relevant_airports)) AND f.trip && stbox(k.geom, [''2023-06-27 12:52:03'', ''2023-06-28
    23:51:26'']) AND eintersects(attime(f.trip, [''2023-06-27 12:52:03'', ''2023-06-28
    23:51:26'']), k.geom);

    '
  params:
  - - '2023-06-27 12:52:03'
    - '2023-06-28 23:51:26'
  - Krs Hoexter
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: 'SELECT g.name, f.flightid, f.track, f.origin, f.destination, f.airplanetype,
    duration(whenTrue(attime(f.altitude, [''2023-08-17 23:55:01'', ''2023-08-20 23:41:05''])
    #< 600 & tintersects(attime(tgeompoint(f.trip), [''2023-08-17 23:55:01'', ''2023-08-20
    23:41:05'']), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities
    g JOIN flights f ON f.trip && stbox(g.geom, [''2023-08-17 23:55:01'', ''2023-08-20
    23:41:05'']) WHERE g.name = Gem Marienheide AND duration(whenTrue(attime(f.altitude,
    [''2023-08-17 23:55:01'', ''2023-08-20 23:41:05'']) #< 600 & tintersects(attime(tgeompoint(f.trip),
    [''2023-08-17 23:55:01'', ''2023-08-20 23:41:05'']), geometry(g.geom)))) IS NOT
    NULL;

    '
  params:
  - - '2023-08-17 23:55:01'
    - '2023-08-20 23:41:05'
  - Gem Marienheide
  - 600
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: 'WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities
    c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport,
    a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city
    FROM flights f JOIN counties k ON k.name = Krs Staedteregion Aachen LEFT JOIN
    airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao
    WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT
    icao FROM relevant_airports)) AND f.trip && stbox(k.geom, [''2023-03-21 22:26:47'',
    ''2023-03-22 15:06:16'']) AND eintersects(attime(f.trip, [''2023-03-21 22:26:47'',
    ''2023-03-22 15:06:16'']), k.geom);

    '
  params:
  - - '2023-03-21 22:26:47'
    - '2023-03-22 15:06:16'
  - Krs Staedteregion Aachen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: 'WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities
    c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport,
    a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city
    FROM flights f JOIN counties k ON k.name = Krs Hoexter LEFT JOIN airports a1 ON
    f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin
    IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM
    relevant_airports)) AND f.trip && stbox(k.geom, [''2023-03-07 16:34:54'', ''2023-03-08
    07:52:44'']) AND eintersects(attime(f.trip, [''2023-03-07 16:34:54'', ''2023-03-08
    07:52:44'']), k.geom);

    '
  params:
  - - '2023-03-07 16:34:54'
    - '2023-03-08 07:52:44'
  - Krs Hoexter
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: 'WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities
    c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport,
    a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city
    FROM flights f JOIN counties k ON k.name = Krs Solingen LEFT JOIN airports a1
    ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin
    IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM
    relevant_airports)) AND f.trip && stbox(k.geom, [''2023-05-05 00:11:40'', ''2023-05-06
    12:51:29'']) AND eintersects(attime(f.trip, [''2023-05-05 00:11:40'', ''2023-05-06
    12:51:29'']), k.geom);

    '
  params:
  - - '2023-05-05 00:11:40'
    - '2023-05-06 12:51:29'
  - Krs Solingen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightid, f.track FROM flights f, counties k WHERE k.name = Krs Euskirchen
    AND f.trip && stbox(k.geom, [''2023-08-01 11:34:30'', ''2023-08-10 19:08:39''])
    AND eintersects(attime(f.trip, [''2023-08-01 11:34:30'', ''2023-08-10 19:08:39'']),
    k.geom);

    '
  params:
  - - '2023-08-01 11:34:30'
    - '2023-08-10 19:08:39'
  - Krs Euskirchen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightid, f.track FROM flights f, counties k WHERE k.name = Krs Mettmann
    AND f.trip && stbox(k.geom, [''2023-12-16 10:15:37'', ''2023-12-22 19:31:42''])
    AND eintersects(attime(f.trip, [''2023-12-16 10:15:37'', ''2023-12-22 19:31:42'']),
    k.geom);

    '
  params:
  - - '2023-12-16 10:15:37'
    - '2023-12-22 19:31:42'
  - Krs Mettmann
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: 'WITH hours AS ( SELECT generate_series( DATE 2023-08-28::timestamp, DATE 2023-08-28
    + INTERVAL ''1 day'' - INTERVAL ''1 second'', INTERVAL ''1 hour'') AS start_time)
    SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities
    g ON g.name = Gem Iserlohn LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time,
    h.start_time + INTERVAL ''1 hour'' - INTERVAL ''1 second'')), g.geom) WHERE f.trip
    && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL ''1 hour'' - INTERVAL
    ''1 second'')) GROUP BY h.start_time ORDER BY h.start_time;

    '
  params:
  - '2023-08-28'
  - Gem Iserlohn
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightId, f.track, f.airplanetype, f.origin, f.destination FROM cities
    AS c JOIN flights AS f ON eDwithin(attime(f.trip, [''2023-10-29 14:33:58'', ''2023-11-10
    01:22:46'']), c.geom, 3.993258449458221e-06) WHERE c.name = 115.18 AND f.trip
    && [''2023-10-29 14:33:58'', ''2023-11-10 01:22:46''];

    '
  params:
  - - '2023-10-29 14:33:58'
    - '2023-11-10 01:22:46'
  - '115.18'
  - 3.993258449458221e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: 'SELECT g.name, f.flightid, f.track, f.origin, f.destination, f.airplanetype,
    duration(whenTrue(attime(f.altitude, [''2023-06-09 20:22:40'', ''2023-06-16 16:38:15''])
    #< 770 & tintersects(attime(tgeompoint(f.trip), [''2023-06-09 20:22:40'', ''2023-06-16
    16:38:15'']), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities
    g JOIN flights f ON f.trip && stbox(g.geom, [''2023-06-09 20:22:40'', ''2023-06-16
    16:38:15'']) WHERE g.name = Gem Westerkappeln AND duration(whenTrue(attime(f.altitude,
    [''2023-06-09 20:22:40'', ''2023-06-16 16:38:15'']) #< 770 & tintersects(attime(tgeompoint(f.trip),
    [''2023-06-09 20:22:40'', ''2023-06-16 16:38:15'']), geometry(g.geom)))) IS NOT
    NULL;

    '
  params:
  - - '2023-06-09 20:22:40'
    - '2023-06-16 16:38:15'
  - Gem Westerkappeln
  - 770
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: 'WITH hours AS ( SELECT generate_series( DATE 2023-06-28::timestamp, DATE 2023-06-28
    + INTERVAL ''1 day'' - INTERVAL ''1 second'', INTERVAL ''1 hour'') AS start_time)
    SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities
    g ON g.name = Gem Wenden LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time,
    h.start_time + INTERVAL ''1 hour'' - INTERVAL ''1 second'')), g.geom) WHERE f.trip
    && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL ''1 hour'' - INTERVAL
    ''1 second'')) GROUP BY h.start_time ORDER BY h.start_time;

    '
  params:
  - '2023-06-28'
  - Gem Wenden
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: 'SELECT g.name, f.flightid, f.track, f.origin, f.destination, f.airplanetype,
    duration(whenTrue(attime(f.altitude, [''2023-11-26 12:52:19'', ''2023-12-07 16:52:34''])
    #< 660 & tintersects(attime(tgeompoint(f.trip), [''2023-11-26 12:52:19'', ''2023-12-07
    16:52:34'']), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities
    g JOIN flights f ON f.trip && stbox(g.geom, [''2023-11-26 12:52:19'', ''2023-12-07
    16:52:34'']) WHERE g.name = Gem Bocholt AND duration(whenTrue(attime(f.altitude,
    [''2023-11-26 12:52:19'', ''2023-12-07 16:52:34'']) #< 660 & tintersects(attime(tgeompoint(f.trip),
    [''2023-11-26 12:52:19'', ''2023-12-07 16:52:34'']), geometry(g.geom)))) IS NOT
    NULL;

    '
  params:
  - - '2023-11-26 12:52:19'
    - '2023-12-07 16:52:34'
  - Gem Bocholt
  - 660
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: 'SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom,
    2023-09-18 01:48:51) AND eintersects(attime(f.trip, 2023-09-18 01:48:51), b.geom)
    GROUP BY b.name;

    '
  params:
  - '2023-09-18 01:48:51'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: 'SELECT g.name, f.flightid, f.track, f.origin, f.destination, f.airplanetype,
    duration(whenTrue(attime(f.altitude, [''2023-10-13 12:36:41'', ''2023-10-16 23:36:51''])
    #< 760 & tintersects(attime(tgeompoint(f.trip), [''2023-10-13 12:36:41'', ''2023-10-16
    23:36:51'']), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities
    g JOIN flights f ON f.trip && stbox(g.geom, [''2023-10-13 12:36:41'', ''2023-10-16
    23:36:51'']) WHERE g.name = Gem Rheine AND duration(whenTrue(attime(f.altitude,
    [''2023-10-13 12:36:41'', ''2023-10-16 23:36:51'']) #< 760 & tintersects(attime(tgeompoint(f.trip),
    [''2023-10-13 12:36:41'', ''2023-10-16 23:36:51'']), geometry(g.geom)))) IS NOT
    NULL;

    '
  params:
  - - '2023-10-13 12:36:41'
    - '2023-10-16 23:36:51'
  - Gem Rheine
  - 760
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightId, f.track, f.airplanetype, f.origin, f.destination FROM cities
    AS c JOIN flights AS f ON eDwithin(attime(f.trip, [''2023-08-17 21:48:08'', ''2023-08-26
    12:11:01'']), c.geom, 9.823883140963034e-06) WHERE c.name = 77.37 AND f.trip &&
    [''2023-08-17 21:48:08'', ''2023-08-26 12:11:01''];

    '
  params:
  - - '2023-08-17 21:48:08'
    - '2023-08-26 12:11:01'
  - '77.37'
  - 9.823883140963034e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightid, f.track FROM flights f, counties k WHERE k.name = Krs Coesfeld
    AND f.trip && stbox(k.geom, [''2023-04-03 23:25:49'', ''2023-04-11 23:17:44''])
    AND eintersects(attime(f.trip, [''2023-04-03 23:25:49'', ''2023-04-11 23:17:44'']),
    k.geom);

    '
  params:
  - - '2023-04-03 23:25:49'
    - '2023-04-11 23:17:44'
  - Krs Coesfeld
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: 'SELECT g.name, f.flightid, f.track, f.origin, f.destination, f.airplanetype,
    duration(whenTrue(attime(f.altitude, [''2023-10-06 16:15:47'', ''2023-10-13 21:14:03''])
    #< 1010 & tintersects(attime(tgeompoint(f.trip), [''2023-10-06 16:15:47'', ''2023-10-13
    21:14:03'']), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities
    g JOIN flights f ON f.trip && stbox(g.geom, [''2023-10-06 16:15:47'', ''2023-10-13
    21:14:03'']) WHERE g.name = Gem Nachrodt-Wiblingwerde AND duration(whenTrue(attime(f.altitude,
    [''2023-10-06 16:15:47'', ''2023-10-13 21:14:03'']) #< 1010 & tintersects(attime(tgeompoint(f.trip),
    [''2023-10-06 16:15:47'', ''2023-10-13 21:14:03'']), geometry(g.geom)))) IS NOT
    NULL;

    '
  params:
  - - '2023-10-06 16:15:47'
    - '2023-10-13 21:14:03'
  - Gem Nachrodt-Wiblingwerde
  - 1010
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightid, f.track FROM flights f, counties k WHERE k.name = Krs Maerkischer
    Kreis AND f.trip && stbox(k.geom, [''2023-05-24 02:52:20'', ''2023-05-29 13:02:57''])
    AND eintersects(attime(f.trip, [''2023-05-24 02:52:20'', ''2023-05-29 13:02:57'']),
    k.geom);

    '
  params:
  - - '2023-05-24 02:52:20'
    - '2023-05-29 13:02:57'
  - Krs Maerkischer Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: 'WITH hours AS ( SELECT generate_series( DATE 2023-01-13::timestamp, DATE 2023-01-13
    + INTERVAL ''1 day'' - INTERVAL ''1 second'', INTERVAL ''1 hour'') AS start_time)
    SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities
    g ON g.name = Gem Borchen LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time,
    h.start_time + INTERVAL ''1 hour'' - INTERVAL ''1 second'')), g.geom) WHERE f.trip
    && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL ''1 hour'' - INTERVAL
    ''1 second'')) GROUP BY h.start_time ORDER BY h.start_time;

    '
  params:
  - '2023-01-13'
  - Gem Borchen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: 'WITH hours AS ( SELECT generate_series( DATE 2023-07-17::timestamp, DATE 2023-07-17
    + INTERVAL ''1 day'' - INTERVAL ''1 second'', INTERVAL ''1 hour'') AS start_time)
    SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities
    g ON g.name = Gem Bad Laasphe LEFT JOIN flights f ON eintersects(attime(f.trip,
    span(h.start_time, h.start_time + INTERVAL ''1 hour'' - INTERVAL ''1 second'')),
    g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL
    ''1 hour'' - INTERVAL ''1 second'')) GROUP BY h.start_time ORDER BY h.start_time;

    '
  params:
  - '2023-07-17'
  - Gem Bad Laasphe
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightid, f.track FROM flights f, counties k WHERE k.name = Krs Dortmund
    AND f.trip && stbox(k.geom, [''2023-01-24 12:06:45'', ''2023-02-03 09:35:47''])
    AND eintersects(attime(f.trip, [''2023-01-24 12:06:45'', ''2023-02-03 09:35:47'']),
    k.geom);

    '
  params:
  - - '2023-01-24 12:06:45'
    - '2023-02-03 09:35:47'
  - Krs Dortmund
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: 'SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom,
    2023-05-07 09:39:46) AND eintersects(attime(f.trip, 2023-05-07 09:39:46), b.geom)
    GROUP BY b.name;

    '
  params:
  - '2023-05-07 09:39:46'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightId, f.track, f.airplanetype, f.origin, f.destination FROM cities
    AS c JOIN flights AS f ON eDwithin(attime(f.trip, [''2023-05-30 07:40:27'', ''2023-06-01
    11:40:34'']), c.geom, 1.2661569883837113e-05) WHERE c.name = 232.82 AND f.trip
    && [''2023-05-30 07:40:27'', ''2023-06-01 11:40:34''];

    '
  params:
  - - '2023-05-30 07:40:27'
    - '2023-06-01 11:40:34'
  - '232.82'
  - 1.2661569883837113e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: 'WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities
    c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport,
    a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city
    FROM flights f JOIN counties k ON k.name = Krs Soest LEFT JOIN airports a1 ON
    f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin
    IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM
    relevant_airports)) AND f.trip && stbox(k.geom, [''2023-12-18 05:32:49'', ''2023-12-19
    21:46:02'']) AND eintersects(attime(f.trip, [''2023-12-18 05:32:49'', ''2023-12-19
    21:46:02'']), k.geom);

    '
  params:
  - - '2023-12-18 05:32:49'
    - '2023-12-19 21:46:02'
  - Krs Soest
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightId, f.track, f.airplanetype, f.origin, f.destination FROM cities
    AS c JOIN flights AS f ON eDwithin(attime(f.trip, [''2023-08-25 10:22:29'', ''2023-09-09
    09:40:59'']), c.geom, 1.4835780902185693e-05) WHERE c.name = 31.47 AND f.trip
    && [''2023-08-25 10:22:29'', ''2023-09-09 09:40:59''];

    '
  params:
  - - '2023-08-25 10:22:29'
    - '2023-09-09 09:40:59'
  - '31.47'
  - 1.4835780902185693e-05
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightid, f.track FROM flights f, counties k WHERE k.name = Krs Soest
    AND f.trip && stbox(k.geom, [''2023-04-28 03:35:08'', ''2023-05-01 12:29:28''])
    AND eintersects(attime(f.trip, [''2023-04-28 03:35:08'', ''2023-05-01 12:29:28'']),
    k.geom);

    '
  params:
  - - '2023-04-28 03:35:08'
    - '2023-05-01 12:29:28'
  - Krs Soest
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: 'WITH hours AS ( SELECT generate_series( DATE 2023-03-10::timestamp, DATE 2023-03-10
    + INTERVAL ''1 day'' - INTERVAL ''1 second'', INTERVAL ''1 hour'') AS start_time)
    SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities
    g ON g.name = Gem Nettersheim LEFT JOIN flights f ON eintersects(attime(f.trip,
    span(h.start_time, h.start_time + INTERVAL ''1 hour'' - INTERVAL ''1 second'')),
    g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL
    ''1 hour'' - INTERVAL ''1 second'')) GROUP BY h.start_time ORDER BY h.start_time;

    '
  params:
  - '2023-03-10'
  - Gem Nettersheim
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightId, f.track, f.airplanetype, f.origin, f.destination FROM cities
    AS c JOIN flights AS f ON eDwithin(attime(f.trip, [''2023-01-28 07:56:51'', ''2023-02-08
    15:02:04'']), c.geom, 1.3174139881129118e-05) WHERE c.name = 170.97 AND f.trip
    && [''2023-01-28 07:56:51'', ''2023-02-08 15:02:04''];

    '
  params:
  - - '2023-01-28 07:56:51'
    - '2023-02-08 15:02:04'
  - '170.97'
  - 1.3174139881129118e-05
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightid, f.track FROM flights f, counties k WHERE k.name = Krs Rhein-Erft-Kreis
    AND f.trip && stbox(k.geom, [''2023-05-03 17:10:09'', ''2023-05-11 02:56:03''])
    AND eintersects(attime(f.trip, [''2023-05-03 17:10:09'', ''2023-05-11 02:56:03'']),
    k.geom);

    '
  params:
  - - '2023-05-03 17:10:09'
    - '2023-05-11 02:56:03'
  - Krs Rhein-Erft-Kreis
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: 'SELECT g.name, f.flightid, f.track, f.origin, f.destination, f.airplanetype,
    duration(whenTrue(attime(f.altitude, [''2023-07-17 04:55:48'', ''2023-07-20 12:58:16''])
    #< 920 & tintersects(attime(tgeompoint(f.trip), [''2023-07-17 04:55:48'', ''2023-07-20
    12:58:16'']), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities
    g JOIN flights f ON f.trip && stbox(g.geom, [''2023-07-17 04:55:48'', ''2023-07-20
    12:58:16'']) WHERE g.name = Gem Coesfeld AND duration(whenTrue(attime(f.altitude,
    [''2023-07-17 04:55:48'', ''2023-07-20 12:58:16'']) #< 920 & tintersects(attime(tgeompoint(f.trip),
    [''2023-07-17 04:55:48'', ''2023-07-20 12:58:16'']), geometry(g.geom)))) IS NOT
    NULL;

    '
  params:
  - - '2023-07-17 04:55:48'
    - '2023-07-20 12:58:16'
  - Gem Coesfeld
  - 920
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: 'SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom,
    2023-02-05 18:56:30) AND eintersects(attime(f.trip, 2023-02-05 18:56:30), b.geom)
    GROUP BY b.name;

    '
  params:
  - '2023-02-05 18:56:30'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: 'SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom,
    2023-10-29 00:32:01) AND eintersects(attime(f.trip, 2023-10-29 00:32:01), b.geom)
    GROUP BY b.name;

    '
  params:
  - '2023-10-29 00:32:01'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: 'SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom,
    2023-04-22 04:27:42) AND eintersects(attime(f.trip, 2023-04-22 04:27:42), b.geom)
    GROUP BY b.name;

    '
  params:
  - '2023-04-22 04:27:42'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightId, f.track, f.airplanetype, f.origin, f.destination FROM cities
    AS c JOIN flights AS f ON eDwithin(attime(f.trip, [''2023-09-12 06:46:10'', ''2023-09-19
    13:21:34'']), c.geom, 6.438395040401906e-06) WHERE c.name = 91.26 AND f.trip &&
    [''2023-09-12 06:46:10'', ''2023-09-19 13:21:34''];

    '
  params:
  - - '2023-09-12 06:46:10'
    - '2023-09-19 13:21:34'
  - '91.26'
  - 6.438395040401906e-06
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: 'WITH hours AS ( SELECT generate_series( DATE 2023-06-15::timestamp, DATE 2023-06-15
    + INTERVAL ''1 day'' - INTERVAL ''1 second'', INTERVAL ''1 hour'') AS start_time)
    SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities
    g ON g.name = Gem Wipperfuerth LEFT JOIN flights f ON eintersects(attime(f.trip,
    span(h.start_time, h.start_time + INTERVAL ''1 hour'' - INTERVAL ''1 second'')),
    g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL
    ''1 hour'' - INTERVAL ''1 second'')) GROUP BY h.start_time ORDER BY h.start_time;

    '
  params:
  - '2023-06-15'
  - Gem Wipperfuerth
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightid, f.track FROM flights f, counties k WHERE k.name = Krs Paderborn
    AND f.trip && stbox(k.geom, [''2023-05-01 00:10:38'', ''2023-05-04 22:36:44''])
    AND eintersects(attime(f.trip, [''2023-05-01 00:10:38'', ''2023-05-04 22:36:44'']),
    k.geom);

    '
  params:
  - - '2023-05-01 00:10:38'
    - '2023-05-04 22:36:44'
  - Krs Paderborn
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: 'SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom,
    2023-05-12 20:13:49) AND eintersects(attime(f.trip, 2023-05-12 20:13:49), b.geom)
    GROUP BY b.name;

    '
  params:
  - '2023-05-12 20:13:49'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: 'WITH hours AS ( SELECT generate_series( DATE 2023-08-07::timestamp, DATE 2023-08-07
    + INTERVAL ''1 day'' - INTERVAL ''1 second'', INTERVAL ''1 hour'') AS start_time)
    SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities
    g ON g.name = Gem Hagen LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time,
    h.start_time + INTERVAL ''1 hour'' - INTERVAL ''1 second'')), g.geom) WHERE f.trip
    && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL ''1 hour'' - INTERVAL
    ''1 second'')) GROUP BY h.start_time ORDER BY h.start_time;

    '
  params:
  - '2023-08-07'
  - Gem Hagen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: 'WITH hours AS ( SELECT generate_series( DATE 2023-11-24::timestamp, DATE 2023-11-24
    + INTERVAL ''1 day'' - INTERVAL ''1 second'', INTERVAL ''1 hour'') AS start_time)
    SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities
    g ON g.name = Gem Kamp-Lintfort LEFT JOIN flights f ON eintersects(attime(f.trip,
    span(h.start_time, h.start_time + INTERVAL ''1 hour'' - INTERVAL ''1 second'')),
    g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL
    ''1 hour'' - INTERVAL ''1 second'')) GROUP BY h.start_time ORDER BY h.start_time;

    '
  params:
  - '2023-11-24'
  - Gem Kamp-Lintfort
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: 'SELECT g.name, f.flightid, f.track, f.origin, f.destination, f.airplanetype,
    duration(whenTrue(attime(f.altitude, [''2023-08-06 19:31:59'', ''2023-08-20 18:15:50''])
    #< 930 & tintersects(attime(tgeompoint(f.trip), [''2023-08-06 19:31:59'', ''2023-08-20
    18:15:50'']), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities
    g JOIN flights f ON f.trip && stbox(g.geom, [''2023-08-06 19:31:59'', ''2023-08-20
    18:15:50'']) WHERE g.name = Gem Muenster AND duration(whenTrue(attime(f.altitude,
    [''2023-08-06 19:31:59'', ''2023-08-20 18:15:50'']) #< 930 & tintersects(attime(tgeompoint(f.trip),
    [''2023-08-06 19:31:59'', ''2023-08-20 18:15:50'']), geometry(g.geom)))) IS NOT
    NULL;

    '
  params:
  - - '2023-08-06 19:31:59'
    - '2023-08-20 18:15:50'
  - Gem Muenster
  - 930
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: 'SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom,
    2023-07-08 01:26:54) AND eintersects(attime(f.trip, 2023-07-08 01:26:54), b.geom)
    GROUP BY b.name;

    '
  params:
  - '2023-07-08 01:26:54'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: 'SELECT g.name, f.flightid, f.track, f.origin, f.destination, f.airplanetype,
    duration(whenTrue(attime(f.altitude, [''2023-07-30 20:22:52'', ''2023-08-07 19:37:47''])
    #< 920 & tintersects(attime(tgeompoint(f.trip), [''2023-07-30 20:22:52'', ''2023-08-07
    19:37:47'']), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities
    g JOIN flights f ON f.trip && stbox(g.geom, [''2023-07-30 20:22:52'', ''2023-08-07
    19:37:47'']) WHERE g.name = Gem Lienen AND duration(whenTrue(attime(f.altitude,
    [''2023-07-30 20:22:52'', ''2023-08-07 19:37:47'']) #< 920 & tintersects(attime(tgeompoint(f.trip),
    [''2023-07-30 20:22:52'', ''2023-08-07 19:37:47'']), geometry(g.geom)))) IS NOT
    NULL;

    '
  params:
  - - '2023-07-30 20:22:52'
    - '2023-08-07 19:37:47'
  - Gem Lienen
  - 920
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: 'WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities
    c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport,
    a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city
    FROM flights f JOIN counties k ON k.name = Krs Rheinisch-Bergischer Kreis LEFT
    JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination
    = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination
    IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, [''2023-02-03
    02:57:39'', ''2023-02-05 02:14:44'']) AND eintersects(attime(f.trip, [''2023-02-03
    02:57:39'', ''2023-02-05 02:14:44'']), k.geom);

    '
  params:
  - - '2023-02-03 02:57:39'
    - '2023-02-05 02:14:44'
  - Krs Rheinisch-Bergischer Kreis
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: 'SELECT g.name, f.flightid, f.track, f.origin, f.destination, f.airplanetype,
    duration(whenTrue(attime(f.altitude, [''2023-07-18 08:48:59'', ''2023-07-20 19:55:36''])
    #< 1280 & tintersects(attime(tgeompoint(f.trip), [''2023-07-18 08:48:59'', ''2023-07-20
    19:55:36'']), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities
    g JOIN flights f ON f.trip && stbox(g.geom, [''2023-07-18 08:48:59'', ''2023-07-20
    19:55:36'']) WHERE g.name = Gem Schlangen AND duration(whenTrue(attime(f.altitude,
    [''2023-07-18 08:48:59'', ''2023-07-20 19:55:36'']) #< 1280 & tintersects(attime(tgeompoint(f.trip),
    [''2023-07-18 08:48:59'', ''2023-07-20 19:55:36'']), geometry(g.geom)))) IS NOT
    NULL;

    '
  params:
  - - '2023-07-18 08:48:59'
    - '2023-07-20 19:55:36'
  - Gem Schlangen
  - 1280
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: 'SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom,
    2023-06-04 22:23:59) AND eintersects(attime(f.trip, 2023-06-04 22:23:59), b.geom)
    GROUP BY b.name;

    '
  params:
  - '2023-06-04 22:23:59'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: 'WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities
    c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport,
    a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city
    FROM flights f JOIN counties k ON k.name = Krs Muelheim a.d. Ruhr LEFT JOIN airports
    a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE
    (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT
    icao FROM relevant_airports)) AND f.trip && stbox(k.geom, [''2023-01-09 17:41:03'',
    ''2023-01-11 04:46:30'']) AND eintersects(attime(f.trip, [''2023-01-09 17:41:03'',
    ''2023-01-11 04:46:30'']), k.geom);

    '
  params:
  - - '2023-01-09 17:41:03'
    - '2023-01-11 04:46:30'
  - Krs Muelheim a.d. Ruhr
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightid, f.track FROM flights f, counties k WHERE k.name = Krs Hagen
    AND f.trip && stbox(k.geom, [''2023-11-07 11:07:35'', ''2023-11-09 20:52:51''])
    AND eintersects(attime(f.trip, [''2023-11-07 11:07:35'', ''2023-11-09 20:52:51'']),
    k.geom);

    '
  params:
  - - '2023-11-07 11:07:35'
    - '2023-11-09 20:52:51'
  - Krs Hagen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightId, f.track, f.airplanetype, f.origin, f.destination FROM cities
    AS c JOIN flights AS f ON eDwithin(attime(f.trip, [''2023-01-01 00:00:01'', ''2023-01-04
    02:04:24'']), c.geom, 9.314557515502791e-06) WHERE c.name = 90.15 AND f.trip &&
    [''2023-01-01 00:00:01'', ''2023-01-04 02:04:24''];

    '
  params:
  - - '2023-01-01 00:00:01'
    - '2023-01-04 02:04:24'
  - '90.15'
  - 9.314557515502791e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: 'SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom,
    2023-07-25 22:00:08) AND eintersects(attime(f.trip, 2023-07-25 22:00:08), b.geom)
    GROUP BY b.name;

    '
  params:
  - '2023-07-25 22:00:08'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: 'SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom,
    2023-01-09 23:04:12) AND eintersects(attime(f.trip, 2023-01-09 23:04:12), b.geom)
    GROUP BY b.name;

    '
  params:
  - '2023-01-09 23:04:12'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: 'WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities
    c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport,
    a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city
    FROM flights f JOIN counties k ON k.name = Krs Duesseldorf LEFT JOIN airports
    a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE
    (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT
    icao FROM relevant_airports)) AND f.trip && stbox(k.geom, [''2023-01-31 17:20:50'',
    ''2023-02-01 12:49:19'']) AND eintersects(attime(f.trip, [''2023-01-31 17:20:50'',
    ''2023-02-01 12:49:19'']), k.geom);

    '
  params:
  - - '2023-01-31 17:20:50'
    - '2023-02-01 12:49:19'
  - Krs Duesseldorf
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightId, f.track, f.airplanetype, f.origin, f.destination FROM cities
    AS c JOIN flights AS f ON eDwithin(attime(f.trip, [''2023-06-13 09:49:05'', ''2023-06-20
    20:01:50'']), c.geom, 1.0668664820522012e-05) WHERE c.name = 76.19 AND f.trip
    && [''2023-06-13 09:49:05'', ''2023-06-20 20:01:50''];

    '
  params:
  - - '2023-06-13 09:49:05'
    - '2023-06-20 20:01:50'
  - '76.19'
  - 1.0668664820522012e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: 'WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities
    c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport,
    a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city
    FROM flights f JOIN counties k ON k.name = Krs Staedteregion Aachen LEFT JOIN
    airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao
    WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT
    icao FROM relevant_airports)) AND f.trip && stbox(k.geom, [''2023-04-26 06:14:30'',
    ''2023-04-26 10:32:37'']) AND eintersects(attime(f.trip, [''2023-04-26 06:14:30'',
    ''2023-04-26 10:32:37'']), k.geom);

    '
  params:
  - - '2023-04-26 06:14:30'
    - '2023-04-26 10:32:37'
  - Krs Staedteregion Aachen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightId, f.track, f.airplanetype, f.origin, f.destination FROM cities
    AS c JOIN flights AS f ON eDwithin(attime(f.trip, [''2023-09-13 21:58:43'', ''2023-09-21
    19:18:03'']), c.geom, 1.1046507913741316e-05) WHERE c.name = 76.04 AND f.trip
    && [''2023-09-13 21:58:43'', ''2023-09-21 19:18:03''];

    '
  params:
  - - '2023-09-13 21:58:43'
    - '2023-09-21 19:18:03'
  - '76.04'
  - 1.1046507913741316e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: 'WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities
    c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport,
    a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city
    FROM flights f JOIN counties k ON k.name = Krs Kleve LEFT JOIN airports a1 ON
    f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin
    IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM
    relevant_airports)) AND f.trip && stbox(k.geom, [''2023-05-08 06:20:44'', ''2023-05-09
    15:26:44'']) AND eintersects(attime(f.trip, [''2023-05-08 06:20:44'', ''2023-05-09
    15:26:44'']), k.geom);

    '
  params:
  - - '2023-05-08 06:20:44'
    - '2023-05-09 15:26:44'
  - Krs Kleve
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: 'WITH hours AS ( SELECT generate_series( DATE 2023-03-21::timestamp, DATE 2023-03-21
    + INTERVAL ''1 day'' - INTERVAL ''1 second'', INTERVAL ''1 hour'') AS start_time)
    SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities
    g ON g.name = Gem Toenisvorst LEFT JOIN flights f ON eintersects(attime(f.trip,
    span(h.start_time, h.start_time + INTERVAL ''1 hour'' - INTERVAL ''1 second'')),
    g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL
    ''1 hour'' - INTERVAL ''1 second'')) GROUP BY h.start_time ORDER BY h.start_time;

    '
  params:
  - '2023-03-21'
  - Gem Toenisvorst
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: 'SELECT g.name, f.flightid, f.track, f.origin, f.destination, f.airplanetype,
    duration(whenTrue(attime(f.altitude, [''2023-07-30 18:37:23'', ''2023-08-03 19:09:48''])
    #< 1440 & tintersects(attime(tgeompoint(f.trip), [''2023-07-30 18:37:23'', ''2023-08-03
    19:09:48'']), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities
    g JOIN flights f ON f.trip && stbox(g.geom, [''2023-07-30 18:37:23'', ''2023-08-03
    19:09:48'']) WHERE g.name = Gem Breckerfeld AND duration(whenTrue(attime(f.altitude,
    [''2023-07-30 18:37:23'', ''2023-08-03 19:09:48'']) #< 1440 & tintersects(attime(tgeompoint(f.trip),
    [''2023-07-30 18:37:23'', ''2023-08-03 19:09:48'']), geometry(g.geom)))) IS NOT
    NULL;

    '
  params:
  - - '2023-07-30 18:37:23'
    - '2023-08-03 19:09:48'
  - Gem Breckerfeld
  - 1440
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightId, f.track, f.airplanetype, f.origin, f.destination FROM cities
    AS c JOIN flights AS f ON eDwithin(attime(f.trip, [''2023-04-22 13:21:13'', ''2023-04-27
    17:11:21'']), c.geom, 8.30506413407159e-06) WHERE c.name = 141.06 AND f.trip &&
    [''2023-04-22 13:21:13'', ''2023-04-27 17:11:21''];

    '
  params:
  - - '2023-04-22 13:21:13'
    - '2023-04-27 17:11:21'
  - '141.06'
  - 8.30506413407159e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: 'SELECT f.flightid, f.track FROM flights f, counties k WHERE k.name = Krs Dueren
    AND f.trip && stbox(k.geom, [''2023-01-03 07:33:26'', ''2023-01-07 04:07:36''])
    AND eintersects(attime(f.trip, [''2023-01-03 07:33:26'', ''2023-01-07 04:07:36'']),
    k.geom);

    '
  params:
  - - '2023-01-03 07:33:26'
    - '2023-01-07 04:07:36'
  - Krs Dueren
