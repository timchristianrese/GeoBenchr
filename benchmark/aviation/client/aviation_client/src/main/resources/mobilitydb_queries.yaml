- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-30 08:31:35, 2023-11-09 07:00:22]') #< 1190 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-30 08:31:35, 2023-11-09 07:00:22]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-10-30 08:31:35, 2023-11-09 07:00:22]') WHERE g.name = 'Gem Niederzier' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-30 08:31:35, 2023-11-09 07:00:22]') #< 1190 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-30 08:31:35, 2023-11-09 07:00:22]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-10-30 08:31:35'
    - '2023-11-09 07:00:22'
  - Gem Niederzier
  - 1190
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Leverkusen' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-06-23 23:53:35, 2023-06-25 20:52:38]') AND eintersects(attime(f.trip, tstzspan '[2023-06-23 23:53:35, 2023-06-25 20:52:38]'), k.geom);
  params:
  - - '2023-06-23 23:53:35'
    - '2023-06-25 20:52:38'
  - Krs Leverkusen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-10'::timestamp, DATE '2023-08-10' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Windeck' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-08-10'
  - Gem Windeck
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Moenchengladbach' AND f.trip && stbox(k.geom, tstzspan '[2023-05-28 23:14:26, 2023-06-08 14:16:46]') AND eintersects(attime(f.trip, tstzspan '[2023-05-28 23:14:26, 2023-06-08 14:16:46]'), k.geom);
  params:
  - - '2023-05-28 23:14:26'
    - '2023-06-08 14:16:46'
  - Krs Moenchengladbach
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-09-23 05:58:16]') AND eintersects(attime(f.trip, timestamptz '[2023-09-23 05:58:16]'), b.geom) GROUP BY b.name;
  params:
  - '2023-09-23 05:58:16'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Rhein-Sieg-Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-02-17 01:31:11, 2023-02-17 23:30:32]') AND eintersects(attime(f.trip, tstzspan '[2023-02-17 01:31:11, 2023-02-17 23:30:32]'), k.geom);
  params:
  - - '2023-02-17 01:31:11'
    - '2023-02-17 23:30:32'
  - Krs Rhein-Sieg-Kreis
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-06-18 01:21:43]') AND eintersects(attime(f.trip, timestamptz '[2023-06-18 01:21:43]'), b.geom) GROUP BY b.name;
  params:
  - '2023-06-18 01:21:43'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-14 14:11:39, 2023-03-16 16:02:43]'), c.geom, 1.5177467519901415e-05) WHERE c.name = 'Neukirchen-Vluyn' AND f.trip && tstzspan '[2023-03-14 14:11:39, 2023-03-16 16:02:43]';
  params:
  - - '2023-03-14 14:11:39'
    - '2023-03-16 16:02:43'
  - Neukirchen-Vluyn
  - 1.5177467519901415e-05
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Mettmann' AND f.trip && stbox(k.geom, tstzspan '[2023-03-30 06:34:25, 2023-04-13 15:58:03]') AND eintersects(attime(f.trip, tstzspan '[2023-03-30 06:34:25, 2023-04-13 15:58:03]'), k.geom);
  params:
  - - '2023-03-30 06:34:25'
    - '2023-04-13 15:58:03'
  - Krs Mettmann
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Hoexter' AND f.trip && stbox(k.geom, tstzspan '[2023-10-05 21:09:16, 2023-10-16 21:32:42]') AND eintersects(attime(f.trip, tstzspan '[2023-10-05 21:09:16, 2023-10-16 21:32:42]'), k.geom);
  params:
  - - '2023-10-05 21:09:16'
    - '2023-10-16 21:32:42'
  - Krs Hoexter
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Viersen' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-12-02 13:41:48, 2023-12-04 12:26:39]') AND eintersects(attime(f.trip, tstzspan '[2023-12-02 13:41:48, 2023-12-04 12:26:39]'), k.geom);
  params:
  - - '2023-12-02 13:41:48'
    - '2023-12-04 12:26:39'
  - Krs Viersen
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-05-09 14:34:21]') AND eintersects(attime(f.trip, timestamptz '[2023-05-09 14:34:21]'), b.geom) GROUP BY b.name;
  params:
  - '2023-05-09 14:34:21'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-12-08 11:20:47]') AND eintersects(attime(f.trip, timestamptz '[2023-12-08 11:20:47]'), b.geom) GROUP BY b.name;
  params:
  - '2023-12-08 11:20:47'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-02 07:40:25, 2023-08-08 11:20:29]') #< 960 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-02 07:40:25, 2023-08-08 11:20:29]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-08-02 07:40:25, 2023-08-08 11:20:29]') WHERE g.name = 'Gem Raesfeld' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-02 07:40:25, 2023-08-08 11:20:29]') #< 960 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-02 07:40:25, 2023-08-08 11:20:29]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-08-02 07:40:25'
    - '2023-08-08 11:20:29'
  - Gem Raesfeld
  - 960
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-08-03 04:15:00]') AND eintersects(attime(f.trip, timestamptz '[2023-08-03 04:15:00]'), b.geom) GROUP BY b.name;
  params:
  - '2023-08-03 04:15:00'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Warendorf' AND f.trip && stbox(k.geom, tstzspan '[2023-09-07 20:33:38, 2023-09-14 08:58:56]') AND eintersects(attime(f.trip, tstzspan '[2023-09-07 20:33:38, 2023-09-14 08:58:56]'), k.geom);
  params:
  - - '2023-09-07 20:33:38'
    - '2023-09-14 08:58:56'
  - Krs Warendorf
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-05-05 22:19:38]') AND eintersects(attime(f.trip, timestamptz '[2023-05-05 22:19:38]'), b.geom) GROUP BY b.name;
  params:
  - '2023-05-05 22:19:38'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Maerkischer Kreis' AND f.trip && stbox(k.geom, tstzspan '[2023-05-24 02:52:20, 2023-05-29 13:02:57]') AND eintersects(attime(f.trip, tstzspan '[2023-05-24 02:52:20, 2023-05-29 13:02:57]'), k.geom);
  params:
  - - '2023-05-24 02:52:20'
    - '2023-05-29 13:02:57'
  - Krs Maerkischer Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-02'::timestamp, DATE '2023-03-02' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Siegen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-03-02'
  - Gem Siegen
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-07-24 09:05:13]') AND eintersects(attime(f.trip, timestamptz '[2023-07-24 09:05:13]'), b.geom) GROUP BY b.name;
  params:
  - '2023-07-24 09:05:13'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-09-12 19:42:55]') AND eintersects(attime(f.trip, timestamptz '[2023-09-12 19:42:55]'), b.geom) GROUP BY b.name;
  params:
  - '2023-09-12 19:42:55'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-08-31 23:41:09]') AND eintersects(attime(f.trip, timestamptz '[2023-08-31 23:41:09]'), b.geom) GROUP BY b.name;
  params:
  - '2023-08-31 23:41:09'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-01-24 17:07:28]') AND eintersects(attime(f.trip, timestamptz '[2023-01-24 17:07:28]'), b.geom) GROUP BY b.name;
  params:
  - '2023-01-24 17:07:28'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-12-21 08:07:30, 2023-12-30 21:12:31]'), c.geom, 1.2730288374432752e-05) WHERE c.name = 'Neuenrade' AND f.trip && tstzspan '[2023-12-21 08:07:30, 2023-12-30 21:12:31]';
  params:
  - - '2023-12-21 08:07:30'
    - '2023-12-30 21:12:31'
  - Neuenrade
  - 1.2730288374432752e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-21 00:34:20, 2023-05-27 15:43:05]') #< 1350 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-21 00:34:20, 2023-05-27 15:43:05]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-05-21 00:34:20, 2023-05-27 15:43:05]') WHERE g.name = 'Gem Kreuztal' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-21 00:34:20, 2023-05-27 15:43:05]') #< 1350 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-21 00:34:20, 2023-05-27 15:43:05]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-05-21 00:34:20'
    - '2023-05-27 15:43:05'
  - Gem Kreuztal
  - 1350
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-20 15:29:03, 2023-07-23 07:09:46]') #< 960 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-20 15:29:03, 2023-07-23 07:09:46]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-07-20 15:29:03, 2023-07-23 07:09:46]') WHERE g.name = 'Gem Selm' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-20 15:29:03, 2023-07-23 07:09:46]') #< 960 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-20 15:29:03, 2023-07-23 07:09:46]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-07-20 15:29:03'
    - '2023-07-23 07:09:46'
  - Gem Selm
  - 960
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Bottrop' AND f.trip && stbox(k.geom, tstzspan '[2023-12-17 05:40:24, 2023-12-26 18:54:39]') AND eintersects(attime(f.trip, tstzspan '[2023-12-17 05:40:24, 2023-12-26 18:54:39]'), k.geom);
  params:
  - - '2023-12-17 05:40:24'
    - '2023-12-26 18:54:39'
  - Krs Bottrop
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Euskirchen' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-07-01 10:20:47, 2023-07-02 13:36:33]') AND eintersects(attime(f.trip, tstzspan '[2023-07-01 10:20:47, 2023-07-02 13:36:33]'), k.geom);
  params:
  - - '2023-07-01 10:20:47'
    - '2023-07-02 13:36:33'
  - Krs Euskirchen
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-06-03 17:56:41]') AND eintersects(attime(f.trip, timestamptz '[2023-06-03 17:56:41]'), b.geom) GROUP BY b.name;
  params:
  - '2023-06-03 17:56:41'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Borken' AND f.trip && stbox(k.geom, tstzspan '[2023-04-28 17:49:15, 2023-05-04 01:02:15]') AND eintersects(attime(f.trip, tstzspan '[2023-04-28 17:49:15, 2023-05-04 01:02:15]'), k.geom);
  params:
  - - '2023-04-28 17:49:15'
    - '2023-05-04 01:02:15'
  - Krs Borken
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-02-10 11:34:08]') AND eintersects(attime(f.trip, timestamptz '[2023-02-10 11:34:08]'), b.geom) GROUP BY b.name;
  params:
  - '2023-02-10 11:34:08'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Hochsauerlandkreis' AND f.trip && stbox(k.geom, tstzspan '[2023-01-16 19:25:20, 2023-01-25 18:32:57]') AND eintersects(attime(f.trip, tstzspan '[2023-01-16 19:25:20, 2023-01-25 18:32:57]'), k.geom);
  params:
  - - '2023-01-16 19:25:20'
    - '2023-01-25 18:32:57'
  - Krs Hochsauerlandkreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-01-29 06:05:03, 2023-02-12 21:54:04]'), c.geom, 1.056845621890015e-05) WHERE c.name = 'Wiehl' AND f.trip && tstzspan '[2023-01-29 06:05:03, 2023-02-12 21:54:04]';
  params:
  - - '2023-01-29 06:05:03'
    - '2023-02-12 21:54:04'
  - Wiehl
  - 1.056845621890015e-05
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-12-14 18:04:12]') AND eintersects(attime(f.trip, timestamptz '[2023-12-14 18:04:12]'), b.geom) GROUP BY b.name;
  params:
  - '2023-12-14 18:04:12'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-04'::timestamp, DATE '2023-09-04' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Schalksmuehle' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-09-04'
  - Gem Schalksmuehle
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-07-29'::timestamp, DATE '2023-07-29' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Leverkusen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-07-29'
  - Gem Leverkusen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-25 17:55:26, 2023-10-28 06:19:45]') #< 950 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-25 17:55:26, 2023-10-28 06:19:45]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-10-25 17:55:26, 2023-10-28 06:19:45]') WHERE g.name = 'Gem Wipperfuerth' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-25 17:55:26, 2023-10-28 06:19:45]') #< 950 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-25 17:55:26, 2023-10-28 06:19:45]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-10-25 17:55:26'
    - '2023-10-28 06:19:45'
  - Gem Wipperfuerth
  - 950
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-17 22:16:37, 2023-07-28 00:03:49]') #< 600 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-17 22:16:37, 2023-07-28 00:03:49]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-07-17 22:16:37, 2023-07-28 00:03:49]') WHERE g.name = 'Gem Stolberg (Rhld.)' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-17 22:16:37, 2023-07-28 00:03:49]') #< 600 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-17 22:16:37, 2023-07-28 00:03:49]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-07-17 22:16:37'
    - '2023-07-28 00:03:49'
  - Gem Stolberg (Rhld.)
  - 600
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-08-01 12:57:08, 2023-08-06 15:31:27]'), c.geom, 3.78686158218906e-06) WHERE c.name = 'Bad Honnef' AND f.trip && tstzspan '[2023-08-01 12:57:08, 2023-08-06 15:31:27]';
  params:
  - - '2023-08-01 12:57:08'
    - '2023-08-06 15:31:27'
  - Bad Honnef
  - 3.78686158218906e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-09 05:20:09, 2023-07-20 18:41:38]') #< 1470 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-09 05:20:09, 2023-07-20 18:41:38]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-07-09 05:20:09, 2023-07-20 18:41:38]') WHERE g.name = 'Gem Gronau (Westf.)' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-09 05:20:09, 2023-07-20 18:41:38]') #< 1470 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-09 05:20:09, 2023-07-20 18:41:38]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-07-09 05:20:09'
    - '2023-07-20 18:41:38'
  - Gem Gronau (Westf.)
  - 1470
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-03-24 12:34:34]') AND eintersects(attime(f.trip, timestamptz '[2023-03-24 12:34:34]'), b.geom) GROUP BY b.name;
  params:
  - '2023-03-24 12:34:34'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-07 04:34:38, 2023-05-15 05:58:12]') #< 880 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-07 04:34:38, 2023-05-15 05:58:12]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-05-07 04:34:38, 2023-05-15 05:58:12]') WHERE g.name = 'Gem Lippetal' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-07 04:34:38, 2023-05-15 05:58:12]') #< 880 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-07 04:34:38, 2023-05-15 05:58:12]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-05-07 04:34:38'
    - '2023-05-15 05:58:12'
  - Gem Lippetal
  - 880
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-12-13 13:04:46, 2023-12-24 01:36:37]') #< 950 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-12-13 13:04:46, 2023-12-24 01:36:37]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-12-13 13:04:46, 2023-12-24 01:36:37]') WHERE g.name = 'Gem Hellenthal' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-12-13 13:04:46, 2023-12-24 01:36:37]') #< 950 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-12-13 13:04:46, 2023-12-24 01:36:37]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-12-13 13:04:46'
    - '2023-12-24 01:36:37'
  - Gem Hellenthal
  - 950
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-05-13 09:21:14]') AND eintersects(attime(f.trip, timestamptz '[2023-05-13 09:21:14]'), b.geom) GROUP BY b.name;
  params:
  - '2023-05-13 09:21:14'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-04 09:39:10, 2023-05-10 13:06:28]') #< 1110 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-04 09:39:10, 2023-05-10 13:06:28]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-05-04 09:39:10, 2023-05-10 13:06:28]') WHERE g.name = 'Gem Ruethen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-04 09:39:10, 2023-05-10 13:06:28]') #< 1110 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-04 09:39:10, 2023-05-10 13:06:28]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-05-04 09:39:10'
    - '2023-05-10 13:06:28'
  - Gem Ruethen
  - 1110
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-11'::timestamp, DATE '2023-08-11' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Bad Driburg' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-08-11'
  - Gem Bad Driburg
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Wuppertal' AND f.trip && stbox(k.geom, tstzspan '[2023-04-09 13:08:48, 2023-04-13 06:08:36]') AND eintersects(attime(f.trip, tstzspan '[2023-04-09 13:08:48, 2023-04-13 06:08:36]'), k.geom);
  params:
  - - '2023-04-09 13:08:48'
    - '2023-04-13 06:08:36'
  - Krs Wuppertal
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Dueren' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-09-22 18:25:47, 2023-09-23 03:20:22]') AND eintersects(attime(f.trip, tstzspan '[2023-09-22 18:25:47, 2023-09-23 03:20:22]'), k.geom);
  params:
  - - '2023-09-22 18:25:47'
    - '2023-09-23 03:20:22'
  - Krs Dueren
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Rhein-Kreis Neuss' AND f.trip && stbox(k.geom, tstzspan '[2023-08-17 23:55:01, 2023-08-20 23:41:05]') AND eintersects(attime(f.trip, tstzspan '[2023-08-17 23:55:01, 2023-08-20 23:41:05]'), k.geom);
  params:
  - - '2023-08-17 23:55:01'
    - '2023-08-20 23:41:05'
  - Krs Rhein-Kreis Neuss
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-05 01:05:19, 2023-08-18 11:12:54]') #< 920 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-05 01:05:19, 2023-08-18 11:12:54]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-08-05 01:05:19, 2023-08-18 11:12:54]') WHERE g.name = 'Gem Solingen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-05 01:05:19, 2023-08-18 11:12:54]') #< 920 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-05 01:05:19, 2023-08-18 11:12:54]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-08-05 01:05:19'
    - '2023-08-18 11:12:54'
  - Gem Solingen
  - 920
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Staedteregion Aachen' AND f.trip && stbox(k.geom, tstzspan '[2023-04-26 06:14:30, 2023-04-29 16:39:26]') AND eintersects(attime(f.trip, tstzspan '[2023-04-26 06:14:30, 2023-04-29 16:39:26]'), k.geom);
  params:
  - - '2023-04-26 06:14:30'
    - '2023-04-29 16:39:26'
  - Krs Staedteregion Aachen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-04-29 23:28:10, 2023-05-05 21:52:16]') #< 610 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-04-29 23:28:10, 2023-05-05 21:52:16]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-04-29 23:28:10, 2023-05-05 21:52:16]') WHERE g.name = 'Gem Arnsberg' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-04-29 23:28:10, 2023-05-05 21:52:16]') #< 610 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-04-29 23:28:10, 2023-05-05 21:52:16]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-04-29 23:28:10'
    - '2023-05-05 21:52:16'
  - Gem Arnsberg
  - 610
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Soest' AND f.trip && stbox(k.geom, tstzspan '[2023-02-23 00:33:15, 2023-03-05 09:46:12]') AND eintersects(attime(f.trip, tstzspan '[2023-02-23 00:33:15, 2023-03-05 09:46:12]'), k.geom);
  params:
  - - '2023-02-23 00:33:15'
    - '2023-03-05 09:46:12'
  - Krs Soest
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-30'::timestamp, DATE '2023-06-30' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Bad Laasphe' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-06-30'
  - Gem Bad Laasphe
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-05 07:13:03, 2023-08-15 19:52:07]') #< 950 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-05 07:13:03, 2023-08-15 19:52:07]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-08-05 07:13:03, 2023-08-15 19:52:07]') WHERE g.name = 'Gem Lippetal' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-05 07:13:03, 2023-08-15 19:52:07]') #< 950 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-05 07:13:03, 2023-08-15 19:52:07]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-08-05 07:13:03'
    - '2023-08-15 19:52:07'
  - Gem Lippetal
  - 950
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-11-14 14:51:32, 2023-11-19 23:35:02]'), c.geom, 1.3798954889255241e-05) WHERE c.name = 'Rahden' AND f.trip && tstzspan '[2023-11-14 14:51:32, 2023-11-19 23:35:02]';
  params:
  - - '2023-11-14 14:51:32'
    - '2023-11-19 23:35:02'
  - Rahden
  - 1.3798954889255241e-05
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-06-06 16:30:44, 2023-06-11 11:19:51]'), c.geom, 1.1780682471705128e-05) WHERE c.name = 'Meschede' AND f.trip && tstzspan '[2023-06-06 16:30:44, 2023-06-11 11:19:51]';
  params:
  - - '2023-06-06 16:30:44'
    - '2023-06-11 11:19:51'
  - Meschede
  - 1.1780682471705128e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Hochsauerlandkreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-10-31 13:40:35, 2023-11-01 19:18:42]') AND eintersects(attime(f.trip, tstzspan '[2023-10-31 13:40:35, 2023-11-01 19:18:42]'), k.geom);
  params:
  - - '2023-10-31 13:40:35'
    - '2023-11-01 19:18:42'
  - Krs Hochsauerlandkreis
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-05-07 01:50:28]') AND eintersects(attime(f.trip, timestamptz '[2023-05-07 01:50:28]'), b.geom) GROUP BY b.name;
  params:
  - '2023-05-07 01:50:28'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-04-24 02:13:11, 2023-05-07 01:58:03]') #< 1080 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-04-24 02:13:11, 2023-05-07 01:58:03]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-04-24 02:13:11, 2023-05-07 01:58:03]') WHERE g.name = 'Gem Lengerich' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-04-24 02:13:11, 2023-05-07 01:58:03]') #< 1080 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-04-24 02:13:11, 2023-05-07 01:58:03]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-04-24 02:13:11'
    - '2023-05-07 01:58:03'
  - Gem Lengerich
  - 1080
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-07-23 01:05:33]') AND eintersects(attime(f.trip, timestamptz '[2023-07-23 01:05:33]'), b.geom) GROUP BY b.name;
  params:
  - '2023-07-23 01:05:33'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-05-23 15:23:11, 2023-05-26 10:22:07]'), c.geom, 6.187161548477455e-06) WHERE c.name = 'Sassenberg' AND f.trip && tstzspan '[2023-05-23 15:23:11, 2023-05-26 10:22:07]';
  params:
  - - '2023-05-23 15:23:11'
    - '2023-05-26 10:22:07'
  - Sassenberg
  - 6.187161548477455e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-04-21 11:04:08]') AND eintersects(attime(f.trip, timestamptz '[2023-04-21 11:04:08]'), b.geom) GROUP BY b.name;
  params:
  - '2023-04-21 11:04:08'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Minden-Luebbecke' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-05-10 19:58:20, 2023-05-12 19:00:12]') AND eintersects(attime(f.trip, tstzspan '[2023-05-10 19:58:20, 2023-05-12 19:00:12]'), k.geom);
  params:
  - - '2023-05-10 19:58:20'
    - '2023-05-12 19:00:12'
  - Krs Minden-Luebbecke
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-23 03:02:04, 2023-09-01 07:01:52]') #< 1460 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-23 03:02:04, 2023-09-01 07:01:52]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-08-23 03:02:04, 2023-09-01 07:01:52]') WHERE g.name = 'Gem Hamm' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-23 03:02:04, 2023-09-01 07:01:52]') #< 1460 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-23 03:02:04, 2023-09-01 07:01:52]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-08-23 03:02:04'
    - '2023-09-01 07:01:52'
  - Gem Hamm
  - 1460
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-01-26 08:46:51]') AND eintersects(attime(f.trip, timestamptz '[2023-01-26 08:46:51]'), b.geom) GROUP BY b.name;
  params:
  - '2023-01-26 08:46:51'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-12-23 01:54:54, 2023-12-30 09:18:13]'), c.geom, 1.2277645912030423e-05) WHERE c.name = 'Billerbeck' AND f.trip && tstzspan '[2023-12-23 01:54:54, 2023-12-30 09:18:13]';
  params:
  - - '2023-12-23 01:54:54'
    - '2023-12-30 09:18:13'
  - Billerbeck
  - 1.2277645912030423e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Maerkischer Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-12-28 01:09:01, 2023-12-29 09:58:30]') AND eintersects(attime(f.trip, tstzspan '[2023-12-28 01:09:01, 2023-12-29 09:58:30]'), k.geom);
  params:
  - - '2023-12-28 01:09:01'
    - '2023-12-29 09:58:30'
  - Krs Maerkischer Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-20'::timestamp, DATE '2023-08-20' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Beckum' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-08-20'
  - Gem Beckum
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-02-03 10:58:16, 2023-02-07 19:20:30]') #< 1080 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-02-03 10:58:16, 2023-02-07 19:20:30]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-02-03 10:58:16, 2023-02-07 19:20:30]') WHERE g.name = 'Gem Legden' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-02-03 10:58:16, 2023-02-07 19:20:30]') #< 1080 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-02-03 10:58:16, 2023-02-07 19:20:30]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-02-03 10:58:16'
    - '2023-02-07 19:20:30'
  - Gem Legden
  - 1080
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-11-17 15:50:10, 2023-11-26 08:16:21]'), c.geom, 4.19383880060809e-06) WHERE c.name = 'Emmerich' AND f.trip && tstzspan '[2023-11-17 15:50:10, 2023-11-26 08:16:21]';
  params:
  - - '2023-11-17 15:50:10'
    - '2023-11-26 08:16:21'
  - Emmerich
  - 4.19383880060809e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Hochsauerlandkreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-05-27 03:42:10, 2023-05-28 13:33:14]') AND eintersects(attime(f.trip, tstzspan '[2023-05-27 03:42:10, 2023-05-28 13:33:14]'), k.geom);
  params:
  - - '2023-05-27 03:42:10'
    - '2023-05-28 13:33:14'
  - Krs Hochsauerlandkreis
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-12-29 00:48:10]') AND eintersects(attime(f.trip, timestamptz '[2023-12-29 00:48:10]'), b.geom) GROUP BY b.name;
  params:
  - '2023-12-29 00:48:10'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Coesfeld' AND f.trip && stbox(k.geom, tstzspan '[2023-04-03 23:25:49, 2023-04-11 23:17:44]') AND eintersects(attime(f.trip, tstzspan '[2023-04-03 23:25:49, 2023-04-11 23:17:44]'), k.geom);
  params:
  - - '2023-04-03 23:25:49'
    - '2023-04-11 23:17:44'
  - Krs Coesfeld
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-30 09:50:47, 2023-04-06 20:53:12]'), c.geom, 7.872200734659667e-06) WHERE c.name = 'Geldern' AND f.trip && tstzspan '[2023-03-30 09:50:47, 2023-04-06 20:53:12]';
  params:
  - - '2023-03-30 09:50:47'
    - '2023-04-06 20:53:12'
  - Geldern
  - 7.872200734659667e-06
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-07'::timestamp, DATE '2023-03-07' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Hoerstel' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-03-07'
  - Gem Hoerstel
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Guetersloh' AND f.trip && stbox(k.geom, tstzspan '[2023-05-11 12:46:48, 2023-05-22 11:54:18]') AND eintersects(attime(f.trip, tstzspan '[2023-05-11 12:46:48, 2023-05-22 11:54:18]'), k.geom);
  params:
  - - '2023-05-11 12:46:48'
    - '2023-05-22 11:54:18'
  - Krs Guetersloh
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Lippe' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-09-27 20:26:55, 2023-09-29 01:01:38]') AND eintersects(attime(f.trip, tstzspan '[2023-09-27 20:26:55, 2023-09-29 01:01:38]'), k.geom);
  params:
  - - '2023-09-27 20:26:55'
    - '2023-09-29 01:01:38'
  - Krs Lippe
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-12-18 03:12:57, 2023-12-31 10:02:06]'), c.geom, 7.626965819707464e-06) WHERE c.name = 'Drolshagen' AND f.trip && tstzspan '[2023-12-18 03:12:57, 2023-12-31 10:02:06]';
  params:
  - - '2023-12-18 03:12:57'
    - '2023-12-31 10:02:06'
  - Drolshagen
  - 7.626965819707464e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Unna' AND f.trip && stbox(k.geom, tstzspan '[2023-05-08 12:10:49, 2023-05-23 01:38:08]') AND eintersects(attime(f.trip, tstzspan '[2023-05-08 12:10:49, 2023-05-23 01:38:08]'), k.geom);
  params:
  - - '2023-05-08 12:10:49'
    - '2023-05-23 01:38:08'
  - Krs Unna
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Lippe' AND f.trip && stbox(k.geom, tstzspan '[2023-11-20 15:04:26, 2023-11-25 03:33:26]') AND eintersects(attime(f.trip, tstzspan '[2023-11-20 15:04:26, 2023-11-25 03:33:26]'), k.geom);
  params:
  - - '2023-11-20 15:04:26'
    - '2023-11-25 03:33:26'
  - Krs Lippe
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-04-05 17:11:53, 2023-04-19 18:22:30]'), c.geom, 4.2409321499605455e-06) WHERE c.name = 'Muelheim an der Ruhr' AND f.trip && tstzspan '[2023-04-05 17:11:53, 2023-04-19 18:22:30]';
  params:
  - - '2023-04-05 17:11:53'
    - '2023-04-19 18:22:30'
  - Muelheim an der Ruhr
  - 4.2409321499605455e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Oberhausen' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-10-01 12:48:59, 2023-10-03 03:43:36]') AND eintersects(attime(f.trip, tstzspan '[2023-10-01 12:48:59, 2023-10-03 03:43:36]'), k.geom);
  params:
  - - '2023-10-01 12:48:59'
    - '2023-10-03 03:43:36'
  - Krs Oberhausen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-01-08 12:46:33, 2023-01-15 10:40:29]'), c.geom, 9.151624874693724e-06) WHERE c.name = 'Rheinbach' AND f.trip && tstzspan '[2023-01-08 12:46:33, 2023-01-15 10:40:29]';
  params:
  - - '2023-01-08 12:46:33'
    - '2023-01-15 10:40:29'
  - Rheinbach
  - 9.151624874693724e-06
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-05'::timestamp, DATE '2023-03-05' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Halver' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-03-05'
  - Gem Halver
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-08-16 19:03:31]') AND eintersects(attime(f.trip, timestamptz '[2023-08-16 19:03:31]'), b.geom) GROUP BY b.name;
  params:
  - '2023-08-16 19:03:31'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Herne' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-06-22 12:51:42, 2023-06-23 14:54:31]') AND eintersects(attime(f.trip, tstzspan '[2023-06-22 12:51:42, 2023-06-23 14:54:31]'), k.geom);
  params:
  - - '2023-06-22 12:51:42'
    - '2023-06-23 14:54:31'
  - Krs Herne
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-05 00:49:43, 2023-07-09 22:37:52]') #< 1350 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-05 00:49:43, 2023-07-09 22:37:52]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-07-05 00:49:43, 2023-07-09 22:37:52]') WHERE g.name = 'Gem Recklinghausen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-05 00:49:43, 2023-07-09 22:37:52]') #< 1350 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-05 00:49:43, 2023-07-09 22:37:52]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-07-05 00:49:43'
    - '2023-07-09 22:37:52'
  - Gem Recklinghausen
  - 1350
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Heinsberg' AND f.trip && stbox(k.geom, tstzspan '[2023-06-27 09:20:57, 2023-07-07 09:46:40]') AND eintersects(attime(f.trip, tstzspan '[2023-06-27 09:20:57, 2023-07-07 09:46:40]'), k.geom);
  params:
  - - '2023-06-27 09:20:57'
    - '2023-07-07 09:46:40'
  - Krs Heinsberg
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Lippe' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-02-10 17:54:09, 2023-02-11 05:16:31]') AND eintersects(attime(f.trip, tstzspan '[2023-02-10 17:54:09, 2023-02-11 05:16:31]'), k.geom);
  params:
  - - '2023-02-10 17:54:09'
    - '2023-02-11 05:16:31'
  - Krs Lippe
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-05-14 12:25:28]') AND eintersects(attime(f.trip, timestamptz '[2023-05-14 12:25:28]'), b.geom) GROUP BY b.name;
  params:
  - '2023-05-14 12:25:28'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Maerkischer Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-08-28 08:42:02, 2023-08-30 02:16:56]') AND eintersects(attime(f.trip, tstzspan '[2023-08-28 08:42:02, 2023-08-30 02:16:56]'), k.geom);
  params:
  - - '2023-08-28 08:42:02'
    - '2023-08-30 02:16:56'
  - Krs Maerkischer Kreis
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-12 17:13:16, 2023-08-26 09:09:07]') #< 610 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-12 17:13:16, 2023-08-26 09:09:07]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-08-12 17:13:16, 2023-08-26 09:09:07]') WHERE g.name = 'Gem Borken' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-12 17:13:16, 2023-08-26 09:09:07]') #< 610 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-12 17:13:16, 2023-08-26 09:09:07]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-08-12 17:13:16'
    - '2023-08-26 09:09:07'
  - Gem Borken
  - 610
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Olpe' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-06-08 01:09:47, 2023-06-10 00:22:01]') AND eintersects(attime(f.trip, tstzspan '[2023-06-08 01:09:47, 2023-06-10 00:22:01]'), k.geom);
  params:
  - - '2023-06-08 01:09:47'
    - '2023-06-10 00:22:01'
  - Krs Olpe
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-12-03 05:37:44, 2023-12-08 12:09:20]') #< 1220 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-12-03 05:37:44, 2023-12-08 12:09:20]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-12-03 05:37:44, 2023-12-08 12:09:20]') WHERE g.name = 'Gem Neuss' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-12-03 05:37:44, 2023-12-08 12:09:20]') #< 1220 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-12-03 05:37:44, 2023-12-08 12:09:20]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-12-03 05:37:44'
    - '2023-12-08 12:09:20'
  - Gem Neuss
  - 1220
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-09 03:54:27, 2023-03-12 21:00:35]') #< 960 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-09 03:54:27, 2023-03-12 21:00:35]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-03-09 03:54:27, 2023-03-12 21:00:35]') WHERE g.name = 'Gem Altenberge' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-09 03:54:27, 2023-03-12 21:00:35]') #< 960 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-09 03:54:27, 2023-03-12 21:00:35]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-03-09 03:54:27'
    - '2023-03-12 21:00:35'
  - Gem Altenberge
  - 960
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Paderborn' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-08-15 08:28:37, 2023-08-15 10:29:45]') AND eintersects(attime(f.trip, tstzspan '[2023-08-15 08:28:37, 2023-08-15 10:29:45]'), k.geom);
  params:
  - - '2023-08-15 08:28:37'
    - '2023-08-15 10:29:45'
  - Krs Paderborn
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Maerkischer Kreis' AND f.trip && stbox(k.geom, tstzspan '[2023-11-03 20:22:06, 2023-11-12 11:21:46]') AND eintersects(attime(f.trip, tstzspan '[2023-11-03 20:22:06, 2023-11-12 11:21:46]'), k.geom);
  params:
  - - '2023-11-03 20:22:06'
    - '2023-11-12 11:21:46'
  - Krs Maerkischer Kreis
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Koeln' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-09-18 03:45:07, 2023-09-19 00:24:12]') AND eintersects(attime(f.trip, tstzspan '[2023-09-18 03:45:07, 2023-09-19 00:24:12]'), k.geom);
  params:
  - - '2023-09-18 03:45:07'
    - '2023-09-19 00:24:12'
  - Krs Koeln
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-03'::timestamp, DATE '2023-06-03' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Werne' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-06-03'
  - Gem Werne
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-07-16 09:08:09]') AND eintersects(attime(f.trip, timestamptz '[2023-07-16 09:08:09]'), b.geom) GROUP BY b.name;
  params:
  - '2023-07-16 09:08:09'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-07-19 11:33:26]') AND eintersects(attime(f.trip, timestamptz '[2023-07-19 11:33:26]'), b.geom) GROUP BY b.name;
  params:
  - '2023-07-19 11:33:26'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-02-08 00:16:12, 2023-02-22 00:32:59]'), c.geom, 9.571828221153142e-06) WHERE c.name = 'Mettmann' AND f.trip && tstzspan '[2023-02-08 00:16:12, 2023-02-22 00:32:59]';
  params:
  - - '2023-02-08 00:16:12'
    - '2023-02-22 00:32:59'
  - Mettmann
  - 9.571828221153142e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Steinfurt' AND f.trip && stbox(k.geom, tstzspan '[2023-06-09 20:22:40, 2023-06-16 16:38:15]') AND eintersects(attime(f.trip, tstzspan '[2023-06-09 20:22:40, 2023-06-16 16:38:15]'), k.geom);
  params:
  - - '2023-06-09 20:22:40'
    - '2023-06-16 16:38:15'
  - Krs Steinfurt
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-13'::timestamp, DATE '2023-06-13' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Leverkusen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-06-13'
  - Gem Leverkusen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-30 05:21:54, 2023-10-05 02:12:21]') #< 860 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-30 05:21:54, 2023-10-05 02:12:21]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-09-30 05:21:54, 2023-10-05 02:12:21]') WHERE g.name = 'Gem Lohmar' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-30 05:21:54, 2023-10-05 02:12:21]') #< 860 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-30 05:21:54, 2023-10-05 02:12:21]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-09-30 05:21:54'
    - '2023-10-05 02:12:21'
  - Gem Lohmar
  - 860
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Siegen-Wittgenstein' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-02-26 21:44:56, 2023-02-28 18:25:05]') AND eintersects(attime(f.trip, tstzspan '[2023-02-26 21:44:56, 2023-02-28 18:25:05]'), k.geom);
  params:
  - - '2023-02-26 21:44:56'
    - '2023-02-28 18:25:05'
  - Krs Siegen-Wittgenstein
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-19 12:13:52, 2023-11-01 07:17:13]'), c.geom, 8.643208713676293e-06) WHERE c.name = 'Baesweiler' AND f.trip && tstzspan '[2023-10-19 12:13:52, 2023-11-01 07:17:13]';
  params:
  - - '2023-10-19 12:13:52'
    - '2023-11-01 07:17:13'
  - Baesweiler
  - 8.643208713676293e-06
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-31'::timestamp, DATE '2023-05-31' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Essen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-05-31'
  - Gem Essen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Maerkischer Kreis' AND f.trip && stbox(k.geom, tstzspan '[2023-06-27 15:24:34, 2023-07-03 17:25:27]') AND eintersects(attime(f.trip, tstzspan '[2023-06-27 15:24:34, 2023-07-03 17:25:27]'), k.geom);
  params:
  - - '2023-06-27 15:24:34'
    - '2023-07-03 17:25:27'
  - Krs Maerkischer Kreis
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-01 22:16:06, 2023-08-09 05:46:35]') #< 960 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-01 22:16:06, 2023-08-09 05:46:35]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-08-01 22:16:06, 2023-08-09 05:46:35]') WHERE g.name = 'Gem Bedburg' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-01 22:16:06, 2023-08-09 05:46:35]') #< 960 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-01 22:16:06, 2023-08-09 05:46:35]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-08-01 22:16:06'
    - '2023-08-09 05:46:35'
  - Gem Bedburg
  - 960
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-11 09:11:09, 2023-10-23 04:09:19]') #< 1060 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-11 09:11:09, 2023-10-23 04:09:19]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-10-11 09:11:09, 2023-10-23 04:09:19]') WHERE g.name = 'Gem Solingen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-11 09:11:09, 2023-10-23 04:09:19]') #< 1060 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-11 09:11:09, 2023-10-23 04:09:19]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-10-11 09:11:09'
    - '2023-10-23 04:09:19'
  - Gem Solingen
  - 1060
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Bottrop' AND f.trip && stbox(k.geom, tstzspan '[2023-06-15 17:07:40, 2023-06-27 08:24:19]') AND eintersects(attime(f.trip, tstzspan '[2023-06-15 17:07:40, 2023-06-27 08:24:19]'), k.geom);
  params:
  - - '2023-06-15 17:07:40'
    - '2023-06-27 08:24:19'
  - Krs Bottrop
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-02-23'::timestamp, DATE '2023-02-23' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Geilenkirchen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-02-23'
  - Gem Geilenkirchen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Siegen-Wittgenstein' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-05-08 18:02:30, 2023-05-10 10:50:22]') AND eintersects(attime(f.trip, tstzspan '[2023-05-08 18:02:30, 2023-05-10 10:50:22]'), k.geom);
  params:
  - - '2023-05-08 18:02:30'
    - '2023-05-10 10:50:22'
  - Krs Siegen-Wittgenstein
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Staedteregion Aachen' AND f.trip && stbox(k.geom, tstzspan '[2023-06-09 23:36:21, 2023-06-22 23:17:01]') AND eintersects(attime(f.trip, tstzspan '[2023-06-09 23:36:21, 2023-06-22 23:17:01]'), k.geom);
  params:
  - - '2023-06-09 23:36:21'
    - '2023-06-22 23:17:01'
  - Krs Staedteregion Aachen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-28'::timestamp, DATE '2023-05-28' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Anroechte' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-05-28'
  - Gem Anroechte
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-12-02 10:45:48, 2023-12-04 19:29:52]'), c.geom, 6.661526887123284e-06) WHERE c.name = 'Minden' AND f.trip && tstzspan '[2023-12-02 10:45:48, 2023-12-04 19:29:52]';
  params:
  - - '2023-12-02 10:45:48'
    - '2023-12-04 19:29:52'
  - Minden
  - 6.661526887123284e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Borken' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-12-22 21:35:53, 2023-12-23 11:06:31]') AND eintersects(attime(f.trip, tstzspan '[2023-12-22 21:35:53, 2023-12-23 11:06:31]'), k.geom);
  params:
  - - '2023-12-22 21:35:53'
    - '2023-12-23 11:06:31'
  - Krs Borken
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-14 19:32:09, 2023-05-27 22:16:01]') #< 630 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-14 19:32:09, 2023-05-27 22:16:01]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-05-14 19:32:09, 2023-05-27 22:16:01]') WHERE g.name = 'Gem Ruethen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-14 19:32:09, 2023-05-27 22:16:01]') #< 630 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-14 19:32:09, 2023-05-27 22:16:01]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-05-14 19:32:09'
    - '2023-05-27 22:16:01'
  - Gem Ruethen
  - 630
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-12-20 23:08:38, 2023-12-30 18:35:10]') #< 1000 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-12-20 23:08:38, 2023-12-30 18:35:10]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-12-20 23:08:38, 2023-12-30 18:35:10]') WHERE g.name = 'Gem Balve' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-12-20 23:08:38, 2023-12-30 18:35:10]') #< 1000 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-12-20 23:08:38, 2023-12-30 18:35:10]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-12-20 23:08:38'
    - '2023-12-30 18:35:10'
  - Gem Balve
  - 1000
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Warendorf' AND f.trip && stbox(k.geom, tstzspan '[2023-04-05 14:54:09, 2023-04-10 09:24:08]') AND eintersects(attime(f.trip, tstzspan '[2023-04-05 14:54:09, 2023-04-10 09:24:08]'), k.geom);
  params:
  - - '2023-04-05 14:54:09'
    - '2023-04-10 09:24:08'
  - Krs Warendorf
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-04-16 13:54:43]') AND eintersects(attime(f.trip, timestamptz '[2023-04-16 13:54:43]'), b.geom) GROUP BY b.name;
  params:
  - '2023-04-16 13:54:43'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-28'::timestamp, DATE '2023-04-28' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Datteln' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-04-28'
  - Gem Datteln
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Steinfurt' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-10-07 11:02:36, 2023-10-07 17:25:46]') AND eintersects(attime(f.trip, tstzspan '[2023-10-07 11:02:36, 2023-10-07 17:25:46]'), k.geom);
  params:
  - - '2023-10-07 11:02:36'
    - '2023-10-07 17:25:46'
  - Krs Steinfurt
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-10-27 13:17:47]') AND eintersects(attime(f.trip, timestamptz '[2023-10-27 13:17:47]'), b.geom) GROUP BY b.name;
  params:
  - '2023-10-27 13:17:47'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-02-07 18:24:14, 2023-02-20 06:25:22]'), c.geom, 8.811236437282061e-06) WHERE c.name = 'Halle' AND f.trip && tstzspan '[2023-02-07 18:24:14, 2023-02-20 06:25:22]';
  params:
  - - '2023-02-07 18:24:14'
    - '2023-02-20 06:25:22'
  - Halle
  - 8.811236437282061e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-18 22:51:14, 2023-01-25 05:00:37]') #< 1080 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-18 22:51:14, 2023-01-25 05:00:37]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-01-18 22:51:14, 2023-01-25 05:00:37]') WHERE g.name = 'Gem Sprockhoevel' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-18 22:51:14, 2023-01-25 05:00:37]') #< 1080 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-18 22:51:14, 2023-01-25 05:00:37]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-01-18 22:51:14'
    - '2023-01-25 05:00:37'
  - Gem Sprockhoevel
  - 1080
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Lippe' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-03-27 00:49:22, 2023-03-27 08:52:58]') AND eintersects(attime(f.trip, tstzspan '[2023-03-27 00:49:22, 2023-03-27 08:52:58]'), k.geom);
  params:
  - - '2023-03-27 00:49:22'
    - '2023-03-27 08:52:58'
  - Krs Lippe
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Minden-Luebbecke' AND f.trip && stbox(k.geom, tstzspan '[2023-06-01 09:58:17, 2023-06-10 15:00:20]') AND eintersects(attime(f.trip, tstzspan '[2023-06-01 09:58:17, 2023-06-10 15:00:20]'), k.geom);
  params:
  - - '2023-06-01 09:58:17'
    - '2023-06-10 15:00:20'
  - Krs Minden-Luebbecke
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-03'::timestamp, DATE '2023-03-03' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Grevenbroich' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-03-03'
  - Gem Grevenbroich
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-01-02 22:43:55]') AND eintersects(attime(f.trip, timestamptz '[2023-01-02 22:43:55]'), b.geom) GROUP BY b.name;
  params:
  - '2023-01-02 22:43:55'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-05 15:39:16, 2023-10-16 07:27:39]'), c.geom, 5.452940807507658e-06) WHERE c.name = 'Bielefeld' AND f.trip && tstzspan '[2023-10-05 15:39:16, 2023-10-16 07:27:39]';
  params:
  - - '2023-10-05 15:39:16'
    - '2023-10-16 07:27:39'
  - Bielefeld
  - 5.452940807507658e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Hochsauerlandkreis' AND f.trip && stbox(k.geom, tstzspan '[2023-04-22 18:40:41, 2023-05-01 06:00:12]') AND eintersects(attime(f.trip, tstzspan '[2023-04-22 18:40:41, 2023-05-01 06:00:12]'), k.geom);
  params:
  - - '2023-04-22 18:40:41'
    - '2023-05-01 06:00:12'
  - Krs Hochsauerlandkreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Viersen' AND f.trip && stbox(k.geom, tstzspan '[2023-10-09 22:20:45, 2023-10-22 22:31:40]') AND eintersects(attime(f.trip, tstzspan '[2023-10-09 22:20:45, 2023-10-22 22:31:40]'), k.geom);
  params:
  - - '2023-10-09 22:20:45'
    - '2023-10-22 22:31:40'
  - Krs Viersen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-18'::timestamp, DATE '2023-10-18' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Issum' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-10-18'
  - Gem Issum
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-30 14:54:20, 2023-06-10 20:31:18]') #< 1320 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-30 14:54:20, 2023-06-10 20:31:18]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-05-30 14:54:20, 2023-06-10 20:31:18]') WHERE g.name = 'Gem Niederkruechten' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-30 14:54:20, 2023-06-10 20:31:18]') #< 1320 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-30 14:54:20, 2023-06-10 20:31:18]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-05-30 14:54:20'
    - '2023-06-10 20:31:18'
  - Gem Niederkruechten
  - 1320
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Rhein-Sieg-Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-03-07 10:59:19, 2023-03-09 02:57:58]') AND eintersects(attime(f.trip, tstzspan '[2023-03-07 10:59:19, 2023-03-09 02:57:58]'), k.geom);
  params:
  - - '2023-03-07 10:59:19'
    - '2023-03-09 02:57:58'
  - Krs Rhein-Sieg-Kreis
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Rhein-Sieg-Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-06-19 08:58:34, 2023-06-20 16:59:50]') AND eintersects(attime(f.trip, tstzspan '[2023-06-19 08:58:34, 2023-06-20 16:59:50]'), k.geom);
  params:
  - - '2023-06-19 08:58:34'
    - '2023-06-20 16:59:50'
  - Krs Rhein-Sieg-Kreis
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Mettmann' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-05-22 16:38:32, 2023-05-23 03:08:35]') AND eintersects(attime(f.trip, tstzspan '[2023-05-22 16:38:32, 2023-05-23 03:08:35]'), k.geom);
  params:
  - - '2023-05-22 16:38:32'
    - '2023-05-23 03:08:35'
  - Krs Mettmann
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-06-20 10:37:51, 2023-07-03 15:13:42]') #< 1290 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-06-20 10:37:51, 2023-07-03 15:13:42]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-06-20 10:37:51, 2023-07-03 15:13:42]') WHERE g.name = 'Gem Ahaus' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-06-20 10:37:51, 2023-07-03 15:13:42]') #< 1290 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-06-20 10:37:51, 2023-07-03 15:13:42]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-06-20 10:37:51'
    - '2023-07-03 15:13:42'
  - Gem Ahaus
  - 1290
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Euskirchen' AND f.trip && stbox(k.geom, tstzspan '[2023-08-01 11:34:30, 2023-08-10 19:08:39]') AND eintersects(attime(f.trip, tstzspan '[2023-08-01 11:34:30, 2023-08-10 19:08:39]'), k.geom);
  params:
  - - '2023-08-01 11:34:30'
    - '2023-08-10 19:08:39'
  - Krs Euskirchen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-25'::timestamp, DATE '2023-08-25' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Hamm' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-08-25'
  - Gem Hamm
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-03 22:34:58, 2023-07-14 18:59:05]') #< 530 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-03 22:34:58, 2023-07-14 18:59:05]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-07-03 22:34:58, 2023-07-14 18:59:05]') WHERE g.name = 'Gem Hamminkeln' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-03 22:34:58, 2023-07-14 18:59:05]') #< 530 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-03 22:34:58, 2023-07-14 18:59:05]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-07-03 22:34:58'
    - '2023-07-14 18:59:05'
  - Gem Hamminkeln
  - 530
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-20 10:16:17, 2023-10-03 15:32:00]') #< 590 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-20 10:16:17, 2023-10-03 15:32:00]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-09-20 10:16:17, 2023-10-03 15:32:00]') WHERE g.name = 'Gem Hagen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-20 10:16:17, 2023-10-03 15:32:00]') #< 590 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-20 10:16:17, 2023-10-03 15:32:00]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-09-20 10:16:17'
    - '2023-10-03 15:32:00'
  - Gem Hagen
  - 590
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Coesfeld' AND f.trip && stbox(k.geom, tstzspan '[2023-02-20 21:23:57, 2023-03-06 05:28:28]') AND eintersects(attime(f.trip, tstzspan '[2023-02-20 21:23:57, 2023-03-06 05:28:28]'), k.geom);
  params:
  - - '2023-02-20 21:23:57'
    - '2023-03-06 05:28:28'
  - Krs Coesfeld
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-28'::timestamp, DATE '2023-05-28' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Kaarst' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-05-28'
  - Gem Kaarst
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-21 03:35:35, 2023-10-30 18:31:36]') #< 540 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-21 03:35:35, 2023-10-30 18:31:36]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-10-21 03:35:35, 2023-10-30 18:31:36]') WHERE g.name = 'Gem Meschede' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-21 03:35:35, 2023-10-30 18:31:36]') #< 540 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-21 03:35:35, 2023-10-30 18:31:36]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-10-21 03:35:35'
    - '2023-10-30 18:31:36'
  - Gem Meschede
  - 540
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Rheinisch-Bergischer Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-09-13 00:47:00, 2023-09-14 18:45:20]') AND eintersects(attime(f.trip, tstzspan '[2023-09-13 00:47:00, 2023-09-14 18:45:20]'), k.geom);
  params:
  - - '2023-09-13 00:47:00'
    - '2023-09-14 18:45:20'
  - Krs Rheinisch-Bergischer Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-21'::timestamp, DATE '2023-03-21' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Voerde (Niederrhein)' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-03-21'
  - Gem Voerde (Niederrhein)
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Staedteregion Aachen' AND f.trip && stbox(k.geom, tstzspan '[2023-03-15 01:50:19, 2023-03-22 15:06:16]') AND eintersects(attime(f.trip, tstzspan '[2023-03-15 01:50:19, 2023-03-22 15:06:16]'), k.geom);
  params:
  - - '2023-03-15 01:50:19'
    - '2023-03-22 15:06:16'
  - Krs Staedteregion Aachen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-05'::timestamp, DATE '2023-10-05' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Lennestadt' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-10-05'
  - Gem Lennestadt
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-14'::timestamp, DATE '2023-11-14' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Kirchlengern' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-11-14'
  - Gem Kirchlengern
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Rhein-Sieg-Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-03-30 09:28:47, 2023-03-30 19:14:36]') AND eintersects(attime(f.trip, tstzspan '[2023-03-30 09:28:47, 2023-03-30 19:14:36]'), k.geom);
  params:
  - - '2023-03-30 09:28:47'
    - '2023-03-30 19:14:36'
  - Krs Rhein-Sieg-Kreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Solingen' AND f.trip && stbox(k.geom, tstzspan '[2023-05-05 00:11:40, 2023-05-19 05:30:12]') AND eintersects(attime(f.trip, tstzspan '[2023-05-05 00:11:40, 2023-05-19 05:30:12]'), k.geom);
  params:
  - - '2023-05-05 00:11:40'
    - '2023-05-19 05:30:12'
  - Krs Solingen
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-09-06 22:22:50]') AND eintersects(attime(f.trip, timestamptz '[2023-09-06 22:22:50]'), b.geom) GROUP BY b.name;
  params:
  - '2023-09-06 22:22:50'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-10'::timestamp, DATE '2023-08-10' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Schalksmuehle' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-08-10'
  - Gem Schalksmuehle
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Lippe' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-05-19 13:00:52, 2023-05-20 17:32:12]') AND eintersects(attime(f.trip, tstzspan '[2023-05-19 13:00:52, 2023-05-20 17:32:12]'), k.geom);
  params:
  - - '2023-05-19 13:00:52'
    - '2023-05-20 17:32:12'
  - Krs Lippe
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-29'::timestamp, DATE '2023-04-29' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Juechen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-04-29'
  - Gem Juechen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-02-27 14:31:30, 2023-03-10 23:24:26]'), c.geom, 7.571836141061434e-06) WHERE c.name = 'Horstmar' AND f.trip && tstzspan '[2023-02-27 14:31:30, 2023-03-10 23:24:26]';
  params:
  - - '2023-02-27 14:31:30'
    - '2023-03-10 23:24:26'
  - Horstmar
  - 7.571836141061434e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-06-30 05:32:45, 2023-07-12 23:31:49]'), c.geom, 7.289638463021194e-06) WHERE c.name = 'Ennepetal' AND f.trip && tstzspan '[2023-06-30 05:32:45, 2023-07-12 23:31:49]';
  params:
  - - '2023-06-30 05:32:45'
    - '2023-07-12 23:31:49'
  - Ennepetal
  - 7.289638463021194e-06
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-18'::timestamp, DATE '2023-05-18' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Unna' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-05-18'
  - Gem Unna
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-11-16 10:44:04, 2023-11-22 09:49:50]') #< 1030 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-11-16 10:44:04, 2023-11-22 09:49:50]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-11-16 10:44:04, 2023-11-22 09:49:50]') WHERE g.name = 'Gem Leopoldshoehe' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-11-16 10:44:04, 2023-11-22 09:49:50]') #< 1030 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-11-16 10:44:04, 2023-11-22 09:49:50]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-11-16 10:44:04'
    - '2023-11-22 09:49:50'
  - Gem Leopoldshoehe
  - 1030
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-07-03'::timestamp, DATE '2023-07-03' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Bochum' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-07-03'
  - Gem Bochum
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Soest' AND f.trip && stbox(k.geom, tstzspan '[2023-09-12 06:46:10, 2023-09-19 13:21:34]') AND eintersects(attime(f.trip, tstzspan '[2023-09-12 06:46:10, 2023-09-19 13:21:34]'), k.geom);
  params:
  - - '2023-09-12 06:46:10'
    - '2023-09-19 13:21:34'
  - Krs Soest
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-21'::timestamp, DATE '2023-11-21' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Much' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-11-21'
  - Gem Much
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Lippe' AND f.trip && stbox(k.geom, tstzspan '[2023-06-27 14:38:17, 2023-07-09 05:42:58]') AND eintersects(attime(f.trip, tstzspan '[2023-06-27 14:38:17, 2023-07-09 05:42:58]'), k.geom);
  params:
  - - '2023-06-27 14:38:17'
    - '2023-07-09 05:42:58'
  - Krs Lippe
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-25'::timestamp, DATE '2023-08-25' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Ense' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-08-25'
  - Gem Ense
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-01'::timestamp, DATE '2023-10-01' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Wuppertal' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-10-01'
  - Gem Wuppertal
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-08'::timestamp, DATE '2023-10-08' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Schwelm' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-10-08'
  - Gem Schwelm
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-03-11 15:27:24]') AND eintersects(attime(f.trip, timestamptz '[2023-03-11 15:27:24]'), b.geom) GROUP BY b.name;
  params:
  - '2023-03-11 15:27:24'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-04-18 00:02:14, 2023-04-20 22:36:11]'), c.geom, 5.761249244797127e-06) WHERE c.name = 'Nideggen' AND f.trip && tstzspan '[2023-04-18 00:02:14, 2023-04-20 22:36:11]';
  params:
  - - '2023-04-18 00:02:14'
    - '2023-04-20 22:36:11'
  - Nideggen
  - 5.761249244797127e-06
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-08'::timestamp, DATE '2023-11-08' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Iserlohn' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-11-08'
  - Gem Iserlohn
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-13 18:35:49, 2023-03-20 00:00:58]'), c.geom, 1.4504378450434123e-05) WHERE c.name = 'Sendenhorst' AND f.trip && tstzspan '[2023-03-13 18:35:49, 2023-03-20 00:00:58]';
  params:
  - - '2023-03-13 18:35:49'
    - '2023-03-20 00:00:58'
  - Sendenhorst
  - 1.4504378450434123e-05
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Minden-Luebbecke' AND f.trip && stbox(k.geom, tstzspan '[2023-09-07 03:46:41, 2023-09-18 11:51:35]') AND eintersects(attime(f.trip, tstzspan '[2023-09-07 03:46:41, 2023-09-18 11:51:35]'), k.geom);
  params:
  - - '2023-09-07 03:46:41'
    - '2023-09-18 11:51:35'
  - Krs Minden-Luebbecke
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-21 15:02:53, 2023-10-24 07:03:25]'), c.geom, 4.590959961430919e-06) WHERE c.name = 'Nieheim' AND f.trip && tstzspan '[2023-10-21 15:02:53, 2023-10-24 07:03:25]';
  params:
  - - '2023-10-21 15:02:53'
    - '2023-10-24 07:03:25'
  - Nieheim
  - 4.590959961430919e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Duisburg' AND f.trip && stbox(k.geom, tstzspan '[2023-03-08 07:05:05, 2023-03-11 04:09:10]') AND eintersects(attime(f.trip, tstzspan '[2023-03-08 07:05:05, 2023-03-11 04:09:10]'), k.geom);
  params:
  - - '2023-03-08 07:05:05'
    - '2023-03-11 04:09:10'
  - Krs Duisburg
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Hochsauerlandkreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-09-24 13:39:57, 2023-09-26 09:22:08]') AND eintersects(attime(f.trip, tstzspan '[2023-09-24 13:39:57, 2023-09-26 09:22:08]'), k.geom);
  params:
  - - '2023-09-24 13:39:57'
    - '2023-09-26 09:22:08'
  - Krs Hochsauerlandkreis
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-01 00:00:01, 2023-01-15 00:51:06]') #< 1140 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-01 00:00:01, 2023-01-15 00:51:06]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-01-01 00:00:01, 2023-01-15 00:51:06]') WHERE g.name = 'Gem Nideggen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-01 00:00:01, 2023-01-15 00:51:06]') #< 1140 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-01 00:00:01, 2023-01-15 00:51:06]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-01-01 00:00:01'
    - '2023-01-15 00:51:06'
  - Gem Nideggen
  - 1140
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Mettmann' AND f.trip && stbox(k.geom, tstzspan '[2023-11-24 00:33:24, 2023-11-29 19:56:32]') AND eintersects(attime(f.trip, tstzspan '[2023-11-24 00:33:24, 2023-11-29 19:56:32]'), k.geom);
  params:
  - - '2023-11-24 00:33:24'
    - '2023-11-29 19:56:32'
  - Krs Mettmann
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-02-28 01:04:53]') AND eintersects(attime(f.trip, timestamptz '[2023-02-28 01:04:53]'), b.geom) GROUP BY b.name;
  params:
  - '2023-02-28 01:04:53'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Leverkusen' AND f.trip && stbox(k.geom, tstzspan '[2023-11-23 03:58:53, 2023-11-30 07:46:56]') AND eintersects(attime(f.trip, tstzspan '[2023-11-23 03:58:53, 2023-11-30 07:46:56]'), k.geom);
  params:
  - - '2023-11-23 03:58:53'
    - '2023-11-30 07:46:56'
  - Krs Leverkusen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-17'::timestamp, DATE '2023-03-17' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Solingen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-03-17'
  - Gem Solingen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-11-03 13:17:02, 2023-11-10 23:42:32]') #< 1480 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-11-03 13:17:02, 2023-11-10 23:42:32]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-11-03 13:17:02, 2023-11-10 23:42:32]') WHERE g.name = 'Gem Hagen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-11-03 13:17:02, 2023-11-10 23:42:32]') #< 1480 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-11-03 13:17:02, 2023-11-10 23:42:32]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-11-03 13:17:02'
    - '2023-11-10 23:42:32'
  - Gem Hagen
  - 1480
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Hochsauerlandkreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-12-13 11:44:31, 2023-12-14 22:27:39]') AND eintersects(attime(f.trip, tstzspan '[2023-12-13 11:44:31, 2023-12-14 22:27:39]'), k.geom);
  params:
  - - '2023-12-13 11:44:31'
    - '2023-12-14 22:27:39'
  - Krs Hochsauerlandkreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Mettmann' AND f.trip && stbox(k.geom, tstzspan '[2023-12-16 10:15:37, 2023-12-22 19:31:42]') AND eintersects(attime(f.trip, tstzspan '[2023-12-16 10:15:37, 2023-12-22 19:31:42]'), k.geom);
  params:
  - - '2023-12-16 10:15:37'
    - '2023-12-22 19:31:42'
  - Krs Mettmann
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Remscheid' AND f.trip && stbox(k.geom, tstzspan '[2023-08-01 21:41:55, 2023-08-06 23:33:23]') AND eintersects(attime(f.trip, tstzspan '[2023-08-01 21:41:55, 2023-08-06 23:33:23]'), k.geom);
  params:
  - - '2023-08-01 21:41:55'
    - '2023-08-06 23:33:23'
  - Krs Remscheid
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-08-06 11:43:23]') AND eintersects(attime(f.trip, timestamptz '[2023-08-06 11:43:23]'), b.geom) GROUP BY b.name;
  params:
  - '2023-08-06 11:43:23'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-20 08:18:17, 2023-04-01 13:13:52]'), c.geom, 9.416643840441103e-06) WHERE c.name = 'Grevenbroich' AND f.trip && tstzspan '[2023-03-20 08:18:17, 2023-04-01 13:13:52]';
  params:
  - - '2023-03-20 08:18:17'
    - '2023-04-01 13:13:52'
  - Grevenbroich
  - 9.416643840441103e-06
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-01-02'::timestamp, DATE '2023-01-02' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Hellenthal' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-01-02'
  - Gem Hellenthal
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Warendorf' AND f.trip && stbox(k.geom, tstzspan '[2023-08-30 06:44:04, 2023-09-10 22:22:10]') AND eintersects(attime(f.trip, tstzspan '[2023-08-30 06:44:04, 2023-09-10 22:22:10]'), k.geom);
  params:
  - - '2023-08-30 06:44:04'
    - '2023-09-10 22:22:10'
  - Krs Warendorf
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-18 07:27:10, 2023-03-21 18:13:05]'), c.geom, 1.2011270097172693e-05) WHERE c.name = 'Olpe' AND f.trip && tstzspan '[2023-03-18 07:27:10, 2023-03-21 18:13:05]';
  params:
  - - '2023-03-18 07:27:10'
    - '2023-03-21 18:13:05'
  - Olpe
  - 1.2011270097172693e-05
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Wesel' AND f.trip && stbox(k.geom, tstzspan '[2023-04-11 00:27:28, 2023-04-15 16:18:55]') AND eintersects(attime(f.trip, tstzspan '[2023-04-11 00:27:28, 2023-04-15 16:18:55]'), k.geom);
  params:
  - - '2023-04-11 00:27:28'
    - '2023-04-15 16:18:55'
  - Krs Wesel
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-06-03 06:07:54]') AND eintersects(attime(f.trip, timestamptz '[2023-06-03 06:07:54]'), b.geom) GROUP BY b.name;
  params:
  - '2023-06-03 06:07:54'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-06-07 11:13:33]') AND eintersects(attime(f.trip, timestamptz '[2023-06-07 11:13:33]'), b.geom) GROUP BY b.name;
  params:
  - '2023-06-07 11:13:33'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Unna' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-04-02 15:14:54, 2023-04-04 03:44:47]') AND eintersects(attime(f.trip, tstzspan '[2023-04-02 15:14:54, 2023-04-04 03:44:47]'), k.geom);
  params:
  - - '2023-04-02 15:14:54'
    - '2023-04-04 03:44:47'
  - Krs Unna
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-10-05 20:52:24]') AND eintersects(attime(f.trip, timestamptz '[2023-10-05 20:52:24]'), b.geom) GROUP BY b.name;
  params:
  - '2023-10-05 20:52:24'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Hagen' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-10-19 21:26:36, 2023-10-20 07:18:57]') AND eintersects(attime(f.trip, tstzspan '[2023-10-19 21:26:36, 2023-10-20 07:18:57]'), k.geom);
  params:
  - - '2023-10-19 21:26:36'
    - '2023-10-20 07:18:57'
  - Krs Hagen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-07-09'::timestamp, DATE '2023-07-09' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Velbert' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-07-09'
  - Gem Velbert
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Hochsauerlandkreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-12-23 21:17:03, 2023-12-25 19:12:22]') AND eintersects(attime(f.trip, tstzspan '[2023-12-23 21:17:03, 2023-12-25 19:12:22]'), k.geom);
  params:
  - - '2023-12-23 21:17:03'
    - '2023-12-25 19:12:22'
  - Krs Hochsauerlandkreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-07-19'::timestamp, DATE '2023-07-19' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Luedinghausen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-07-19'
  - Gem Luedinghausen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-01-15 00:35:12, 2023-01-29 06:17:42]'), c.geom, 1.3749270785516189e-05) WHERE c.name = 'Neuss' AND f.trip && tstzspan '[2023-01-15 00:35:12, 2023-01-29 06:17:42]';
  params:
  - - '2023-01-15 00:35:12'
    - '2023-01-29 06:17:42'
  - Neuss
  - 1.3749270785516189e-05
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-05'::timestamp, DATE '2023-10-05' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Dinslaken' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-10-05'
  - Gem Dinslaken
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Soest' AND f.trip && stbox(k.geom, tstzspan '[2023-04-28 03:35:08, 2023-05-01 12:29:28]') AND eintersects(attime(f.trip, tstzspan '[2023-04-28 03:35:08, 2023-05-01 12:29:28]'), k.geom);
  params:
  - - '2023-04-28 03:35:08'
    - '2023-05-01 12:29:28'
  - Krs Soest
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-13 16:58:48, 2023-01-26 15:57:38]') #< 670 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-13 16:58:48, 2023-01-26 15:57:38]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-01-13 16:58:48, 2023-01-26 15:57:38]') WHERE g.name = 'Gem Netphen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-13 16:58:48, 2023-01-26 15:57:38]') #< 670 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-13 16:58:48, 2023-01-26 15:57:38]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-01-13 16:58:48'
    - '2023-01-26 15:57:38'
  - Gem Netphen
  - 670
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-16'::timestamp, DATE '2023-08-16' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Siegen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-08-16'
  - Gem Siegen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Maerkischer Kreis' AND f.trip && stbox(k.geom, tstzspan '[2023-12-13 18:45:41, 2023-12-17 03:54:33]') AND eintersects(attime(f.trip, tstzspan '[2023-12-13 18:45:41, 2023-12-17 03:54:33]'), k.geom);
  params:
  - - '2023-12-13 18:45:41'
    - '2023-12-17 03:54:33'
  - Krs Maerkischer Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-24'::timestamp, DATE '2023-03-24' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Marsberg' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-03-24'
  - Gem Marsberg
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-18'::timestamp, DATE '2023-08-18' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Hoexter' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-08-18'
  - Gem Hoexter
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-07-20 08:30:57]') AND eintersects(attime(f.trip, timestamptz '[2023-07-20 08:30:57]'), b.geom) GROUP BY b.name;
  params:
  - '2023-07-20 08:30:57'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-01-05 01:46:49, 2023-01-10 23:41:36]'), c.geom, 3.7551696863551868e-06) WHERE c.name = 'Breckerfeld' AND f.trip && tstzspan '[2023-01-05 01:46:49, 2023-01-10 23:41:36]';
  params:
  - - '2023-01-05 01:46:49'
    - '2023-01-10 23:41:36'
  - Breckerfeld
  - 3.7551696863551868e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-10-29 06:50:24]') AND eintersects(attime(f.trip, timestamptz '[2023-10-29 06:50:24]'), b.geom) GROUP BY b.name;
  params:
  - '2023-10-29 06:50:24'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-02-13 14:05:50, 2023-02-25 00:07:25]'), c.geom, 7.509897468612252e-06) WHERE c.name = 'Bergneustadt' AND f.trip && tstzspan '[2023-02-13 14:05:50, 2023-02-25 00:07:25]';
  params:
  - - '2023-02-13 14:05:50'
    - '2023-02-25 00:07:25'
  - Bergneustadt
  - 7.509897468612252e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-25 20:15:53, 2023-06-07 18:49:14]') #< 1470 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-25 20:15:53, 2023-06-07 18:49:14]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-05-25 20:15:53, 2023-06-07 18:49:14]') WHERE g.name = 'Gem Hellenthal' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-25 20:15:53, 2023-06-07 18:49:14]') #< 1470 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-25 20:15:53, 2023-06-07 18:49:14]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-05-25 20:15:53'
    - '2023-06-07 18:49:14'
  - Gem Hellenthal
  - 1470
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-01 00:00:01, 2023-01-07 23:42:07]') #< 570 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-01 00:00:01, 2023-01-07 23:42:07]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-01-01 00:00:01, 2023-01-07 23:42:07]') WHERE g.name = 'Gem Telgte' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-01 00:00:01, 2023-01-07 23:42:07]') #< 570 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-01 00:00:01, 2023-01-07 23:42:07]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-01-01 00:00:01'
    - '2023-01-07 23:42:07'
  - Gem Telgte
  - 570
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-19'::timestamp, DATE '2023-10-19' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Wegberg' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-10-19'
  - Gem Wegberg
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Soest' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-12-02 22:34:18, 2023-12-03 07:21:25]') AND eintersects(attime(f.trip, tstzspan '[2023-12-02 22:34:18, 2023-12-03 07:21:25]'), k.geom);
  params:
  - - '2023-12-02 22:34:18'
    - '2023-12-03 07:21:25'
  - Krs Soest
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-26'::timestamp, DATE '2023-09-26' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Bielefeld' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-09-26'
  - Gem Bielefeld
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-12-17 17:21:54]') AND eintersects(attime(f.trip, timestamptz '[2023-12-17 17:21:54]'), b.geom) GROUP BY b.name;
  params:
  - '2023-12-17 17:21:54'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-12-20 16:04:03]') AND eintersects(attime(f.trip, timestamptz '[2023-12-20 16:04:03]'), b.geom) GROUP BY b.name;
  params:
  - '2023-12-20 16:04:03'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Olpe' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-12-03 22:57:33, 2023-12-04 12:08:29]') AND eintersects(attime(f.trip, tstzspan '[2023-12-03 22:57:33, 2023-12-04 12:08:29]'), k.geom);
  params:
  - - '2023-12-03 22:57:33'
    - '2023-12-04 12:08:29'
  - Krs Olpe
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-11-14 17:06:54, 2023-11-26 12:40:09]') #< 1160 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-11-14 17:06:54, 2023-11-26 12:40:09]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-11-14 17:06:54, 2023-11-26 12:40:09]') WHERE g.name = 'Gem Wermelskirchen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-11-14 17:06:54, 2023-11-26 12:40:09]') #< 1160 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-11-14 17:06:54, 2023-11-26 12:40:09]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-11-14 17:06:54'
    - '2023-11-26 12:40:09'
  - Gem Wermelskirchen
  - 1160
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-01-17 10:06:20]') AND eintersects(attime(f.trip, timestamptz '[2023-01-17 10:06:20]'), b.geom) GROUP BY b.name;
  params:
  - '2023-01-17 10:06:20'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-09-01 04:49:14, 2023-09-13 08:33:21]'), c.geom, 6.453435233640122e-06) WHERE c.name = 'Wipperfuerth' AND f.trip && tstzspan '[2023-09-01 04:49:14, 2023-09-13 08:33:21]';
  params:
  - - '2023-09-01 04:49:14'
    - '2023-09-13 08:33:21'
  - Wipperfuerth
  - 6.453435233640122e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Hochsauerlandkreis' AND f.trip && stbox(k.geom, tstzspan '[2023-06-05 13:37:52, 2023-06-13 09:42:14]') AND eintersects(attime(f.trip, tstzspan '[2023-06-05 13:37:52, 2023-06-13 09:42:14]'), k.geom);
  params:
  - - '2023-06-05 13:37:52'
    - '2023-06-13 09:42:14'
  - Krs Hochsauerlandkreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-07'::timestamp, DATE '2023-04-07' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Bad Lippspringe' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-04-07'
  - Gem Bad Lippspringe
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-16 19:06:37, 2023-10-23 00:58:04]'), c.geom, 1.3467939701958059e-05) WHERE c.name = 'Marsberg' AND f.trip && tstzspan '[2023-10-16 19:06:37, 2023-10-23 00:58:04]';
  params:
  - - '2023-10-16 19:06:37'
    - '2023-10-23 00:58:04'
  - Marsberg
  - 1.3467939701958059e-05
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-02-05'::timestamp, DATE '2023-02-05' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Blankenheim' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-02-05'
  - Gem Blankenheim
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Lippe' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-04-18 15:53:56, 2023-04-20 03:07:38]') AND eintersects(attime(f.trip, tstzspan '[2023-04-18 15:53:56, 2023-04-20 03:07:38]'), k.geom);
  params:
  - - '2023-04-18 15:53:56'
    - '2023-04-20 03:07:38'
  - Krs Lippe
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-11-12 05:43:10]') AND eintersects(attime(f.trip, timestamptz '[2023-11-12 05:43:10]'), b.geom) GROUP BY b.name;
  params:
  - '2023-11-12 05:43:10'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Unna' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-09-28 02:33:05, 2023-09-30 02:04:49]') AND eintersects(attime(f.trip, tstzspan '[2023-09-28 02:33:05, 2023-09-30 02:04:49]'), k.geom);
  params:
  - - '2023-09-28 02:33:05'
    - '2023-09-30 02:04:49'
  - Krs Unna
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-10'::timestamp, DATE '2023-05-10' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Bielefeld' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-05-10'
  - Gem Bielefeld
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Duesseldorf' AND f.trip && stbox(k.geom, tstzspan '[2023-11-13 20:49:09, 2023-11-22 08:37:08]') AND eintersects(attime(f.trip, tstzspan '[2023-11-13 20:49:09, 2023-11-22 08:37:08]'), k.geom);
  params:
  - - '2023-11-13 20:49:09'
    - '2023-11-22 08:37:08'
  - Krs Duesseldorf
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Rheinisch-Bergischer Kreis' AND f.trip && stbox(k.geom, tstzspan '[2023-03-12 04:49:59, 2023-03-16 09:28:24]') AND eintersects(attime(f.trip, tstzspan '[2023-03-12 04:49:59, 2023-03-16 09:28:24]'), k.geom);
  params:
  - - '2023-03-12 04:49:59'
    - '2023-03-16 09:28:24'
  - Krs Rheinisch-Bergischer Kreis
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-02-24 21:49:05, 2023-02-28 10:50:22]') #< 1020 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-02-24 21:49:05, 2023-02-28 10:50:22]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-02-24 21:49:05, 2023-02-28 10:50:22]') WHERE g.name = 'Gem Ruethen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-02-24 21:49:05, 2023-02-28 10:50:22]') #< 1020 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-02-24 21:49:05, 2023-02-28 10:50:22]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-02-24 21:49:05'
    - '2023-02-28 10:50:22'
  - Gem Ruethen
  - 1020
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-21'::timestamp, DATE '2023-10-21' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Euskirchen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-10-21'
  - Gem Euskirchen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-04'::timestamp, DATE '2023-09-04' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Swisttal' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-09-04'
  - Gem Swisttal
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-17 20:15:37, 2023-07-28 22:04:22]') #< 970 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-17 20:15:37, 2023-07-28 22:04:22]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-07-17 20:15:37, 2023-07-28 22:04:22]') WHERE g.name = 'Gem Ostbevern' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-17 20:15:37, 2023-07-28 22:04:22]') #< 970 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-17 20:15:37, 2023-07-28 22:04:22]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-07-17 20:15:37'
    - '2023-07-28 22:04:22'
  - Gem Ostbevern
  - 970
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Ennepe-Ruhr-Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-12-19 23:46:22, 2023-12-20 09:08:51]') AND eintersects(attime(f.trip, tstzspan '[2023-12-19 23:46:22, 2023-12-20 09:08:51]'), k.geom);
  params:
  - - '2023-12-19 23:46:22'
    - '2023-12-20 09:08:51'
  - Krs Ennepe-Ruhr-Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-16'::timestamp, DATE '2023-05-16' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Blankenheim' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-05-16'
  - Gem Blankenheim
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Mettmann' AND f.trip && stbox(k.geom, tstzspan '[2023-05-09 04:49:52, 2023-05-16 13:07:32]') AND eintersects(attime(f.trip, tstzspan '[2023-05-09 04:49:52, 2023-05-16 13:07:32]'), k.geom);
  params:
  - - '2023-05-09 04:49:52'
    - '2023-05-16 13:07:32'
  - Krs Mettmann
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-06-25 21:26:40]') AND eintersects(attime(f.trip, timestamptz '[2023-06-25 21:26:40]'), b.geom) GROUP BY b.name;
  params:
  - '2023-06-25 21:26:40'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-04-23 21:32:31]') AND eintersects(attime(f.trip, timestamptz '[2023-04-23 21:32:31]'), b.geom) GROUP BY b.name;
  params:
  - '2023-04-23 21:32:31'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-08-28 17:55:10, 2023-09-05 23:40:01]'), c.geom, 1.4125903878343345e-05) WHERE c.name = 'Drolshagen' AND f.trip && tstzspan '[2023-08-28 17:55:10, 2023-09-05 23:40:01]';
  params:
  - - '2023-08-28 17:55:10'
    - '2023-09-05 23:40:01'
  - Drolshagen
  - 1.4125903878343345e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-04-20 07:07:21, 2023-04-25 08:51:14]') #< 840 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-04-20 07:07:21, 2023-04-25 08:51:14]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-04-20 07:07:21, 2023-04-25 08:51:14]') WHERE g.name = 'Gem Brilon' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-04-20 07:07:21, 2023-04-25 08:51:14]') #< 840 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-04-20 07:07:21, 2023-04-25 08:51:14]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-04-20 07:07:21'
    - '2023-04-25 08:51:14'
  - Gem Brilon
  - 840
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-07-13'::timestamp, DATE '2023-07-13' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Wipperfuerth' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-07-13'
  - Gem Wipperfuerth
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Mettmann' AND f.trip && stbox(k.geom, tstzspan '[2023-10-31 00:05:23, 2023-11-05 04:03:54]') AND eintersects(attime(f.trip, tstzspan '[2023-10-31 00:05:23, 2023-11-05 04:03:54]'), k.geom);
  params:
  - - '2023-10-31 00:05:23'
    - '2023-11-05 04:03:54'
  - Krs Mettmann
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-02-08 21:34:46]') AND eintersects(attime(f.trip, timestamptz '[2023-02-08 21:34:46]'), b.geom) GROUP BY b.name;
  params:
  - '2023-02-08 21:34:46'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-05-11 17:50:30]') AND eintersects(attime(f.trip, timestamptz '[2023-05-11 17:50:30]'), b.geom) GROUP BY b.name;
  params:
  - '2023-05-11 17:50:30'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-13 03:21:11, 2023-10-15 11:22:33]'), c.geom, 1.4665135992928996e-05) WHERE c.name = 'Erftstadt' AND f.trip && tstzspan '[2023-10-13 03:21:11, 2023-10-15 11:22:33]';
  params:
  - - '2023-10-13 03:21:11'
    - '2023-10-15 11:22:33'
  - Erftstadt
  - 1.4665135992928996e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Recklinghausen' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-07-06 02:49:31, 2023-07-06 10:48:52]') AND eintersects(attime(f.trip, tstzspan '[2023-07-06 02:49:31, 2023-07-06 10:48:52]'), k.geom);
  params:
  - - '2023-07-06 02:49:31'
    - '2023-07-06 10:48:52'
  - Krs Recklinghausen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-04-26 09:59:04, 2023-04-28 23:07:27]') #< 690 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-04-26 09:59:04, 2023-04-28 23:07:27]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-04-26 09:59:04, 2023-04-28 23:07:27]') WHERE g.name = 'Gem Herzogenrath' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-04-26 09:59:04, 2023-04-28 23:07:27]') #< 690 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-04-26 09:59:04, 2023-04-28 23:07:27]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-04-26 09:59:04'
    - '2023-04-28 23:07:27'
  - Gem Herzogenrath
  - 690
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-02-16'::timestamp, DATE '2023-02-16' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Versmold' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-02-16'
  - Gem Versmold
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Rhein-Sieg-Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-11-16 14:14:57, 2023-11-17 06:02:06]') AND eintersects(attime(f.trip, tstzspan '[2023-11-16 14:14:57, 2023-11-17 06:02:06]'), k.geom);
  params:
  - - '2023-11-16 14:14:57'
    - '2023-11-17 06:02:06'
  - Krs Rhein-Sieg-Kreis
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-03 17:27:25, 2023-08-13 20:21:49]') #< 710 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-03 17:27:25, 2023-08-13 20:21:49]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-08-03 17:27:25, 2023-08-13 20:21:49]') WHERE g.name = 'Gem Bueren' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-03 17:27:25, 2023-08-13 20:21:49]') #< 710 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-03 17:27:25, 2023-08-13 20:21:49]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-08-03 17:27:25'
    - '2023-08-13 20:21:49'
  - Gem Bueren
  - 710
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Wesel' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-05-05 03:16:55, 2023-05-05 05:32:14]') AND eintersects(attime(f.trip, tstzspan '[2023-05-05 03:16:55, 2023-05-05 05:32:14]'), k.geom);
  params:
  - - '2023-05-05 03:16:55'
    - '2023-05-05 05:32:14'
  - Krs Wesel
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-09-10 14:14:27, 2023-09-17 14:22:29]'), c.geom, 1.1366007143910513e-05) WHERE c.name = 'Sassenberg' AND f.trip && tstzspan '[2023-09-10 14:14:27, 2023-09-17 14:22:29]';
  params:
  - - '2023-09-10 14:14:27'
    - '2023-09-17 14:22:29'
  - Sassenberg
  - 1.1366007143910513e-05
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-01-23 13:44:45]') AND eintersects(attime(f.trip, timestamptz '[2023-01-23 13:44:45]'), b.geom) GROUP BY b.name;
  params:
  - '2023-01-23 13:44:45'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Soest' AND f.trip && stbox(k.geom, tstzspan '[2023-08-25 08:24:03, 2023-09-08 01:27:54]') AND eintersects(attime(f.trip, tstzspan '[2023-08-25 08:24:03, 2023-09-08 01:27:54]'), k.geom);
  params:
  - - '2023-08-25 08:24:03'
    - '2023-09-08 01:27:54'
  - Krs Soest
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-01-18'::timestamp, DATE '2023-01-18' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Nideggen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-01-18'
  - Gem Nideggen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Siegen-Wittgenstein' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-07-02 12:10:57, 2023-07-04 09:45:00]') AND eintersects(attime(f.trip, tstzspan '[2023-07-02 12:10:57, 2023-07-04 09:45:00]'), k.geom);
  params:
  - - '2023-07-02 12:10:57'
    - '2023-07-04 09:45:00'
  - Krs Siegen-Wittgenstein
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-11 05:15:27, 2023-10-19 01:32:06]'), c.geom, 1.2966173285411694e-05) WHERE c.name = 'Brilon' AND f.trip && tstzspan '[2023-10-11 05:15:27, 2023-10-19 01:32:06]';
  params:
  - - '2023-10-11 05:15:27'
    - '2023-10-19 01:32:06'
  - Brilon
  - 1.2966173285411694e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Rhein-Sieg-Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-08-31 23:26:33, 2023-09-02 20:25:48]') AND eintersects(attime(f.trip, tstzspan '[2023-08-31 23:26:33, 2023-09-02 20:25:48]'), k.geom);
  params:
  - - '2023-08-31 23:26:33'
    - '2023-09-02 20:25:48'
  - Krs Rhein-Sieg-Kreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Duisburg' AND f.trip && stbox(k.geom, tstzspan '[2023-07-17 04:01:14, 2023-07-29 20:16:20]') AND eintersects(attime(f.trip, tstzspan '[2023-07-17 04:01:14, 2023-07-29 20:16:20]'), k.geom);
  params:
  - - '2023-07-17 04:01:14'
    - '2023-07-29 20:16:20'
  - Krs Duisburg
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-12-19'::timestamp, DATE '2023-12-19' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Saerbeck' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-12-19'
  - Gem Saerbeck
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Essen' AND f.trip && stbox(k.geom, tstzspan '[2023-01-07 08:17:57, 2023-01-12 12:28:18]') AND eintersects(attime(f.trip, tstzspan '[2023-01-07 08:17:57, 2023-01-12 12:28:18]'), k.geom);
  params:
  - - '2023-01-07 08:17:57'
    - '2023-01-12 12:28:18'
  - Krs Essen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-02-01'::timestamp, DATE '2023-02-01' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Willebadessen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-02-01'
  - Gem Willebadessen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-01-26 02:35:14, 2023-02-06 05:45:42]'), c.geom, 1.046267115492436e-05) WHERE c.name = 'Warendorf' AND f.trip && tstzspan '[2023-01-26 02:35:14, 2023-02-06 05:45:42]';
  params:
  - - '2023-01-26 02:35:14'
    - '2023-02-06 05:45:42'
  - Warendorf
  - 1.046267115492436e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Soest' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-05-22 09:03:34, 2023-05-23 05:34:32]') AND eintersects(attime(f.trip, tstzspan '[2023-05-22 09:03:34, 2023-05-23 05:34:32]'), k.geom);
  params:
  - - '2023-05-22 09:03:34'
    - '2023-05-23 05:34:32'
  - Krs Soest
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Wesel' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-12-28 09:48:36, 2023-12-28 16:41:44]') AND eintersects(attime(f.trip, tstzspan '[2023-12-28 09:48:36, 2023-12-28 16:41:44]'), k.geom);
  params:
  - - '2023-12-28 09:48:36'
    - '2023-12-28 16:41:44'
  - Krs Wesel
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Recklinghausen' AND f.trip && stbox(k.geom, tstzspan '[2023-08-14 01:55:42, 2023-08-25 12:44:30]') AND eintersects(attime(f.trip, tstzspan '[2023-08-14 01:55:42, 2023-08-25 12:44:30]'), k.geom);
  params:
  - - '2023-08-14 01:55:42'
    - '2023-08-25 12:44:30'
  - Krs Recklinghausen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-12-15 05:53:16, 2023-12-24 14:18:57]'), c.geom, 1.2084192846070269e-05) WHERE c.name = 'Emmerich' AND f.trip && tstzspan '[2023-12-15 05:53:16, 2023-12-24 14:18:57]';
  params:
  - - '2023-12-15 05:53:16'
    - '2023-12-24 14:18:57'
  - Emmerich
  - 1.2084192846070269e-05
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-01-06 07:15:40, 2023-01-10 21:51:31]'), c.geom, 9.03294335976185e-06) WHERE c.name = 'Castrop-Rauxel' AND f.trip && tstzspan '[2023-01-06 07:15:40, 2023-01-10 21:51:31]';
  params:
  - - '2023-01-06 07:15:40'
    - '2023-01-10 21:51:31'
  - Castrop-Rauxel
  - 9.03294335976185e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-07-01 13:20:22, 2023-07-15 18:40:40]'), c.geom, 8.173657239077352e-06) WHERE c.name = 'Wuerselen' AND f.trip && tstzspan '[2023-07-01 13:20:22, 2023-07-15 18:40:40]';
  params:
  - - '2023-07-01 13:20:22'
    - '2023-07-15 18:40:40'
  - Wuerselen
  - 8.173657239077352e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-03 15:26:58, 2023-09-18 09:42:17]') #< 570 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-03 15:26:58, 2023-09-18 09:42:17]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-09-03 15:26:58, 2023-09-18 09:42:17]') WHERE g.name = 'Gem Paderborn' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-03 15:26:58, 2023-09-18 09:42:17]') #< 570 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-03 15:26:58, 2023-09-18 09:42:17]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-09-03 15:26:58'
    - '2023-09-18 09:42:17'
  - Gem Paderborn
  - 570
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-21 14:40:24, 2023-06-01 11:59:48]') #< 1490 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-21 14:40:24, 2023-06-01 11:59:48]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-05-21 14:40:24, 2023-06-01 11:59:48]') WHERE g.name = 'Gem Kamp-Lintfort' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-21 14:40:24, 2023-06-01 11:59:48]') #< 1490 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-21 14:40:24, 2023-06-01 11:59:48]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-05-21 14:40:24'
    - '2023-06-01 11:59:48'
  - Gem Kamp-Lintfort
  - 1490
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-01'::timestamp, DATE '2023-10-01' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Hoevelhof' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-10-01'
  - Gem Hoevelhof
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Bochum' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-07-12 16:50:56, 2023-07-13 02:52:05]') AND eintersects(attime(f.trip, tstzspan '[2023-07-12 16:50:56, 2023-07-13 02:52:05]'), k.geom);
  params:
  - - '2023-07-12 16:50:56'
    - '2023-07-13 02:52:05'
  - Krs Bochum
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-12'::timestamp, DATE '2023-04-12' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Olpe' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-04-12'
  - Gem Olpe
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-30'::timestamp, DATE '2023-09-30' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Wadersloh' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-09-30'
  - Gem Wadersloh
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Coesfeld' AND f.trip && stbox(k.geom, tstzspan '[2023-06-20 11:48:48, 2023-06-27 21:15:05]') AND eintersects(attime(f.trip, tstzspan '[2023-06-20 11:48:48, 2023-06-27 21:15:05]'), k.geom);
  params:
  - - '2023-06-20 11:48:48'
    - '2023-06-27 21:15:05'
  - Krs Coesfeld
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Recklinghausen' AND f.trip && stbox(k.geom, tstzspan '[2023-08-19 00:03:33, 2023-08-23 02:19:20]') AND eintersects(attime(f.trip, tstzspan '[2023-08-19 00:03:33, 2023-08-23 02:19:20]'), k.geom);
  params:
  - - '2023-08-19 00:03:33'
    - '2023-08-23 02:19:20'
  - Krs Recklinghausen
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-07-17 03:08:36]') AND eintersects(attime(f.trip, timestamptz '[2023-07-17 03:08:36]'), b.geom) GROUP BY b.name;
  params:
  - '2023-07-17 03:08:36'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Paderborn' AND f.trip && stbox(k.geom, tstzspan '[2023-05-01 00:10:38, 2023-05-04 22:36:44]') AND eintersects(attime(f.trip, tstzspan '[2023-05-01 00:10:38, 2023-05-04 22:36:44]'), k.geom);
  params:
  - - '2023-05-01 00:10:38'
    - '2023-05-04 22:36:44'
  - Krs Paderborn
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Soest' AND f.trip && stbox(k.geom, tstzspan '[2023-04-15 22:08:29, 2023-04-24 08:53:24]') AND eintersects(attime(f.trip, tstzspan '[2023-04-15 22:08:29, 2023-04-24 08:53:24]'), k.geom);
  params:
  - - '2023-04-15 22:08:29'
    - '2023-04-24 08:53:24'
  - Krs Soest
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Wesel' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-12-23 01:58:20, 2023-12-24 14:36:49]') AND eintersects(attime(f.trip, tstzspan '[2023-12-23 01:58:20, 2023-12-24 14:36:49]'), k.geom);
  params:
  - - '2023-12-23 01:58:20'
    - '2023-12-24 14:36:49'
  - Krs Wesel
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Olpe' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-06-30 13:23:53, 2023-06-30 20:07:06]') AND eintersects(attime(f.trip, tstzspan '[2023-06-30 13:23:53, 2023-06-30 20:07:06]'), k.geom);
  params:
  - - '2023-06-30 13:23:53'
    - '2023-06-30 20:07:06'
  - Krs Olpe
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Hochsauerlandkreis' AND f.trip && stbox(k.geom, tstzspan '[2023-02-26 03:13:04, 2023-03-08 03:18:38]') AND eintersects(attime(f.trip, tstzspan '[2023-02-26 03:13:04, 2023-03-08 03:18:38]'), k.geom);
  params:
  - - '2023-02-26 03:13:04'
    - '2023-03-08 03:18:38'
  - Krs Hochsauerlandkreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-20'::timestamp, DATE '2023-06-20' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Olfen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-06-20'
  - Gem Olfen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Muenster' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-09-09 18:49:01, 2023-09-11 10:21:33]') AND eintersects(attime(f.trip, tstzspan '[2023-09-09 18:49:01, 2023-09-11 10:21:33]'), k.geom);
  params:
  - - '2023-09-09 18:49:01'
    - '2023-09-11 10:21:33'
  - Krs Muenster
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-11'::timestamp, DATE '2023-06-11' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Sprockhoevel' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-06-11'
  - Gem Sprockhoevel
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Oberbergischer Kreis' AND f.trip && stbox(k.geom, tstzspan '[2023-06-25 07:23:56, 2023-07-02 05:52:25]') AND eintersects(attime(f.trip, tstzspan '[2023-06-25 07:23:56, 2023-07-02 05:52:25]'), k.geom);
  params:
  - - '2023-06-25 07:23:56'
    - '2023-07-02 05:52:25'
  - Krs Oberbergischer Kreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Koeln' AND f.trip && stbox(k.geom, tstzspan '[2023-12-15 18:08:07, 2023-12-17 22:08:14]') AND eintersects(attime(f.trip, tstzspan '[2023-12-15 18:08:07, 2023-12-17 22:08:14]'), k.geom);
  params:
  - - '2023-12-15 18:08:07'
    - '2023-12-17 22:08:14'
  - Krs Koeln
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-02-05 18:44:03]') AND eintersects(attime(f.trip, timestamptz '[2023-02-05 18:44:03]'), b.geom) GROUP BY b.name;
  params:
  - '2023-02-05 18:44:03'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-12-17 12:45:34]') AND eintersects(attime(f.trip, timestamptz '[2023-12-17 12:45:34]'), b.geom) GROUP BY b.name;
  params:
  - '2023-12-17 12:45:34'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-29 10:49:57, 2023-11-02 04:27:21]') #< 780 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-29 10:49:57, 2023-11-02 04:27:21]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-10-29 10:49:57, 2023-11-02 04:27:21]') WHERE g.name = 'Gem Wipperfuerth' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-29 10:49:57, 2023-11-02 04:27:21]') #< 780 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-29 10:49:57, 2023-11-02 04:27:21]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-10-29 10:49:57'
    - '2023-11-02 04:27:21'
  - Gem Wipperfuerth
  - 780
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-25 17:36:49, 2023-11-01 13:06:47]'), c.geom, 5.831503059209651e-06) WHERE c.name = 'Kamen' AND f.trip && tstzspan '[2023-10-25 17:36:49, 2023-11-01 13:06:47]';
  params:
  - - '2023-10-25 17:36:49'
    - '2023-11-01 13:06:47'
  - Kamen
  - 5.831503059209651e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-02-10 04:47:48, 2023-02-18 04:42:15]'), c.geom, 8.444717901078181e-06) WHERE c.name = 'Gummersbach' AND f.trip && tstzspan '[2023-02-10 04:47:48, 2023-02-18 04:42:15]';
  params:
  - - '2023-02-10 04:47:48'
    - '2023-02-18 04:42:15'
  - Gummersbach
  - 8.444717901078181e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-11-07 23:32:06]') AND eintersects(attime(f.trip, timestamptz '[2023-11-07 23:32:06]'), b.geom) GROUP BY b.name;
  params:
  - '2023-11-07 23:32:06'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-05-29 21:31:04, 2023-06-06 14:42:08]'), c.geom, 1.4636458385519748e-05) WHERE c.name = 'Bueren' AND f.trip && tstzspan '[2023-05-29 21:31:04, 2023-06-06 14:42:08]';
  params:
  - - '2023-05-29 21:31:04'
    - '2023-06-06 14:42:08'
  - Bueren
  - 1.4636458385519748e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-09 11:33:06, 2023-08-13 09:53:11]') #< 1460 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-09 11:33:06, 2023-08-13 09:53:11]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-08-09 11:33:06, 2023-08-13 09:53:11]') WHERE g.name = 'Gem Wickede (Ruhr)' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-09 11:33:06, 2023-08-13 09:53:11]') #< 1460 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-09 11:33:06, 2023-08-13 09:53:11]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-08-09 11:33:06'
    - '2023-08-13 09:53:11'
  - Gem Wickede (Ruhr)
  - 1460
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-03'::timestamp, DATE '2023-04-03' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Minden' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-04-03'
  - Gem Minden
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Hamm' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-09-26 10:36:09, 2023-09-27 22:04:32]') AND eintersects(attime(f.trip, tstzspan '[2023-09-26 10:36:09, 2023-09-27 22:04:32]'), k.geom);
  params:
  - - '2023-09-26 10:36:09'
    - '2023-09-27 22:04:32'
  - Krs Hamm
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Dortmund' AND f.trip && stbox(k.geom, tstzspan '[2023-01-24 12:06:45, 2023-02-03 09:35:47]') AND eintersects(attime(f.trip, tstzspan '[2023-01-24 12:06:45, 2023-02-03 09:35:47]'), k.geom);
  params:
  - - '2023-01-24 12:06:45'
    - '2023-02-03 09:35:47'
  - Krs Dortmund
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-14'::timestamp, DATE '2023-10-14' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Pulheim' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-10-14'
  - Gem Pulheim
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-31 15:04:09, 2023-11-05 11:42:25]') #< 860 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-31 15:04:09, 2023-11-05 11:42:25]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-10-31 15:04:09, 2023-11-05 11:42:25]') WHERE g.name = 'Gem Nottuln' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-31 15:04:09, 2023-11-05 11:42:25]') #< 860 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-31 15:04:09, 2023-11-05 11:42:25]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-10-31 15:04:09'
    - '2023-11-05 11:42:25'
  - Gem Nottuln
  - 860
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-15'::timestamp, DATE '2023-06-15' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Selm' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-06-15'
  - Gem Selm
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-11-17 02:13:08, 2023-11-27 05:54:24]'), c.geom, 1.303896176334784e-05) WHERE c.name = 'Kaarst' AND f.trip && tstzspan '[2023-11-17 02:13:08, 2023-11-27 05:54:24]';
  params:
  - - '2023-11-17 02:13:08'
    - '2023-11-27 05:54:24'
  - Kaarst
  - 1.303896176334784e-05
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-08'::timestamp, DATE '2023-05-08' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Bad Oeynhausen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-05-08'
  - Gem Bad Oeynhausen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Rhein-Kreis Neuss' AND f.trip && stbox(k.geom, tstzspan '[2023-09-18 01:48:51, 2023-09-27 01:08:55]') AND eintersects(attime(f.trip, tstzspan '[2023-09-18 01:48:51, 2023-09-27 01:08:55]'), k.geom);
  params:
  - - '2023-09-18 01:48:51'
    - '2023-09-27 01:08:55'
  - Krs Rhein-Kreis Neuss
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Olpe' AND f.trip && stbox(k.geom, tstzspan '[2023-02-02 18:31:17, 2023-02-10 15:50:37]') AND eintersects(attime(f.trip, tstzspan '[2023-02-02 18:31:17, 2023-02-10 15:50:37]'), k.geom);
  params:
  - - '2023-02-02 18:31:17'
    - '2023-02-10 15:50:37'
  - Krs Olpe
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-04-15 19:28:46, 2023-04-21 17:19:27]'), c.geom, 6.769008767678631e-06) WHERE c.name = 'Delbrueck' AND f.trip && tstzspan '[2023-04-15 19:28:46, 2023-04-21 17:19:27]';
  params:
  - - '2023-04-15 19:28:46'
    - '2023-04-21 17:19:27'
  - Delbrueck
  - 6.769008767678631e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-12-26 16:28:20]') AND eintersects(attime(f.trip, timestamptz '[2023-12-26 16:28:20]'), b.geom) GROUP BY b.name;
  params:
  - '2023-12-26 16:28:20'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-02-15'::timestamp, DATE '2023-02-15' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Gummersbach' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-02-15'
  - Gem Gummersbach
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-10-24 13:53:43]') AND eintersects(attime(f.trip, timestamptz '[2023-10-24 13:53:43]'), b.geom) GROUP BY b.name;
  params:
  - '2023-10-24 13:53:43'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-17 19:23:14, 2023-03-20 20:46:53]'), c.geom, 8.35887991932033e-06) WHERE c.name = 'Luedenscheid' AND f.trip && tstzspan '[2023-03-17 19:23:14, 2023-03-20 20:46:53]';
  params:
  - - '2023-03-17 19:23:14'
    - '2023-03-20 20:46:53'
  - Luedenscheid
  - 8.35887991932033e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Hochsauerlandkreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-03-26 18:37:57, 2023-03-27 22:56:34]') AND eintersects(attime(f.trip, tstzspan '[2023-03-26 18:37:57, 2023-03-27 22:56:34]'), k.geom);
  params:
  - - '2023-03-26 18:37:57'
    - '2023-03-27 22:56:34'
  - Krs Hochsauerlandkreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Paderborn' AND f.trip && stbox(k.geom, tstzspan '[2023-01-01 09:56:19, 2023-01-09 18:44:15]') AND eintersects(attime(f.trip, tstzspan '[2023-01-01 09:56:19, 2023-01-09 18:44:15]'), k.geom);
  params:
  - - '2023-01-01 09:56:19'
    - '2023-01-09 18:44:15'
  - Krs Paderborn
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-11'::timestamp, DATE '2023-09-11' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Morsbach' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-09-11'
  - Gem Morsbach
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Rhein-Erft-Kreis' AND f.trip && stbox(k.geom, tstzspan '[2023-05-03 17:10:09, 2023-05-11 02:56:03]') AND eintersects(attime(f.trip, tstzspan '[2023-05-03 17:10:09, 2023-05-11 02:56:03]'), k.geom);
  params:
  - - '2023-05-03 17:10:09'
    - '2023-05-11 02:56:03'
  - Krs Rhein-Erft-Kreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-20 06:41:49, 2023-03-29 07:02:12]'), c.geom, 1.5238258480615645e-05) WHERE c.name = 'Paderborn' AND f.trip && tstzspan '[2023-03-20 06:41:49, 2023-03-29 07:02:12]';
  params:
  - - '2023-03-20 06:41:49'
    - '2023-03-29 07:02:12'
  - Paderborn
  - 1.5238258480615645e-05
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-10-06 04:48:09]') AND eintersects(attime(f.trip, timestamptz '[2023-10-06 04:48:09]'), b.geom) GROUP BY b.name;
  params:
  - '2023-10-06 04:48:09'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-11-06 04:27:44, 2023-11-18 19:53:21]') #< 1470 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-11-06 04:27:44, 2023-11-18 19:53:21]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-11-06 04:27:44, 2023-11-18 19:53:21]') WHERE g.name = 'Gem Oberhausen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-11-06 04:27:44, 2023-11-18 19:53:21]') #< 1470 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-11-06 04:27:44, 2023-11-18 19:53:21]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-11-06 04:27:44'
    - '2023-11-18 19:53:21'
  - Gem Oberhausen
  - 1470
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-30 02:03:38, 2023-09-10 01:05:01]') #< 1110 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-30 02:03:38, 2023-09-10 01:05:01]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-08-30 02:03:38, 2023-09-10 01:05:01]') WHERE g.name = 'Gem Welver' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-08-30 02:03:38, 2023-09-10 01:05:01]') #< 1110 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-08-30 02:03:38, 2023-09-10 01:05:01]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-08-30 02:03:38'
    - '2023-09-10 01:05:01'
  - Gem Welver
  - 1110
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-01-30 05:54:28, 2023-02-11 19:51:32]'), c.geom, 1.0596227258820684e-05) WHERE c.name = 'Meerbusch' AND f.trip && tstzspan '[2023-01-30 05:54:28, 2023-02-11 19:51:32]';
  params:
  - - '2023-01-30 05:54:28'
    - '2023-02-11 19:51:32'
  - Meerbusch
  - 1.0596227258820684e-05
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-02-20 19:50:38]') AND eintersects(attime(f.trip, timestamptz '[2023-02-20 19:50:38]'), b.geom) GROUP BY b.name;
  params:
  - '2023-02-20 19:50:38'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Herford' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-10-18 17:52:28, 2023-10-19 12:14:28]') AND eintersects(attime(f.trip, tstzspan '[2023-10-18 17:52:28, 2023-10-19 12:14:28]'), k.geom);
  params:
  - - '2023-10-18 17:52:28'
    - '2023-10-19 12:14:28'
  - Krs Herford
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Dueren' AND f.trip && stbox(k.geom, tstzspan '[2023-01-03 07:33:26, 2023-01-07 04:07:36]') AND eintersects(attime(f.trip, tstzspan '[2023-01-03 07:33:26, 2023-01-07 04:07:36]'), k.geom);
  params:
  - - '2023-01-03 07:33:26'
    - '2023-01-07 04:07:36'
  - Krs Dueren
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-01'::timestamp, DATE '2023-04-01' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Meschede' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-04-01'
  - Gem Meschede
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-12-07 14:50:00, 2023-12-10 18:04:31]') #< 550 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-12-07 14:50:00, 2023-12-10 18:04:31]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-12-07 14:50:00, 2023-12-10 18:04:31]') WHERE g.name = 'Gem Arnsberg' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-12-07 14:50:00, 2023-12-10 18:04:31]') #< 550 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-12-07 14:50:00, 2023-12-10 18:04:31]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-12-07 14:50:00'
    - '2023-12-10 18:04:31'
  - Gem Arnsberg
  - 550
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-11'::timestamp, DATE '2023-04-11' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Bad Wuennenberg' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-04-11'
  - Gem Bad Wuennenberg
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-10 13:29:55, 2023-03-22 13:31:01]'), c.geom, 4.859809335957206e-06) WHERE c.name = 'Krefeld' AND f.trip && tstzspan '[2023-03-10 13:29:55, 2023-03-22 13:31:01]';
  params:
  - - '2023-03-10 13:29:55'
    - '2023-03-22 13:31:01'
  - Krefeld
  - 4.859809335957206e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Hoexter' AND f.trip && stbox(k.geom, tstzspan '[2023-06-15 07:56:20, 2023-06-28 23:51:26]') AND eintersects(attime(f.trip, tstzspan '[2023-06-15 07:56:20, 2023-06-28 23:51:26]'), k.geom);
  params:
  - - '2023-06-15 07:56:20'
    - '2023-06-28 23:51:26'
  - Krs Hoexter
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-05-21 10:31:27]') AND eintersects(attime(f.trip, timestamptz '[2023-05-21 10:31:27]'), b.geom) GROUP BY b.name;
  params:
  - '2023-05-21 10:31:27'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-06-29 05:14:29, 2023-07-06 23:10:09]') #< 710 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-06-29 05:14:29, 2023-07-06 23:10:09]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-06-29 05:14:29, 2023-07-06 23:10:09]') WHERE g.name = 'Gem Eitorf' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-06-29 05:14:29, 2023-07-06 23:10:09]') #< 710 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-06-29 05:14:29, 2023-07-06 23:10:09]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-06-29 05:14:29'
    - '2023-07-06 23:10:09'
  - Gem Eitorf
  - 710
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-10-25 21:43:35]') AND eintersects(attime(f.trip, timestamptz '[2023-10-25 21:43:35]'), b.geom) GROUP BY b.name;
  params:
  - '2023-10-25 21:43:35'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Rheinisch-Bergischer Kreis' AND f.trip && stbox(k.geom, tstzspan '[2023-06-20 20:20:57, 2023-07-03 00:10:59]') AND eintersects(attime(f.trip, tstzspan '[2023-06-20 20:20:57, 2023-07-03 00:10:59]'), k.geom);
  params:
  - - '2023-06-20 20:20:57'
    - '2023-07-03 00:10:59'
  - Krs Rheinisch-Bergischer Kreis
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-07-24 06:42:26]') AND eintersects(attime(f.trip, timestamptz '[2023-07-24 06:42:26]'), b.geom) GROUP BY b.name;
  params:
  - '2023-07-24 06:42:26'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Lippe' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-09-06 12:11:36, 2023-09-07 19:46:58]') AND eintersects(attime(f.trip, tstzspan '[2023-09-06 12:11:36, 2023-09-07 19:46:58]'), k.geom);
  params:
  - - '2023-09-06 12:11:36'
    - '2023-09-07 19:46:58'
  - Krs Lippe
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-04-19 20:24:15, 2023-04-26 19:05:51]') #< 890 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-04-19 20:24:15, 2023-04-26 19:05:51]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-04-19 20:24:15, 2023-04-26 19:05:51]') WHERE g.name = 'Gem Werl' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-04-19 20:24:15, 2023-04-26 19:05:51]') #< 890 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-04-19 20:24:15, 2023-04-26 19:05:51]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-04-19 20:24:15'
    - '2023-04-26 19:05:51'
  - Gem Werl
  - 890
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-06-02 07:30:34, 2023-06-05 02:28:01]'), c.geom, 4.139608134686815e-06) WHERE c.name = 'Borgholzhausen' AND f.trip && tstzspan '[2023-06-02 07:30:34, 2023-06-05 02:28:01]';
  params:
  - - '2023-06-02 07:30:34'
    - '2023-06-05 02:28:01'
  - Borgholzhausen
  - 4.139608134686815e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Rheinisch-Bergischer Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-07-08 19:22:53, 2023-07-09 06:45:29]') AND eintersects(attime(f.trip, tstzspan '[2023-07-08 19:22:53, 2023-07-09 06:45:29]'), k.geom);
  params:
  - - '2023-07-08 19:22:53'
    - '2023-07-09 06:45:29'
  - Krs Rheinisch-Bergischer Kreis
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-04-15 03:36:37]') AND eintersects(attime(f.trip, timestamptz '[2023-04-15 03:36:37]'), b.geom) GROUP BY b.name;
  params:
  - '2023-04-15 03:36:37'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-02-01'::timestamp, DATE '2023-02-01' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Attendorn' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-02-01'
  - Gem Attendorn
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-11-27 03:32:18, 2023-11-29 11:16:40]'), c.geom, 3.6788571047115563e-06) WHERE c.name = 'Hamminkeln' AND f.trip && tstzspan '[2023-11-27 03:32:18, 2023-11-29 11:16:40]';
  params:
  - - '2023-11-27 03:32:18'
    - '2023-11-29 11:16:40'
  - Hamminkeln
  - 3.6788571047115563e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-09-07 23:34:04, 2023-09-11 07:26:30]'), c.geom, 7.607146666606265e-06) WHERE c.name = 'Bornheim' AND f.trip && tstzspan '[2023-09-07 23:34:04, 2023-09-11 07:26:30]';
  params:
  - - '2023-09-07 23:34:04'
    - '2023-09-11 07:26:30'
  - Bornheim
  - 7.607146666606265e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Recklinghausen' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-04-21 18:51:06, 2023-04-23 15:04:32]') AND eintersects(attime(f.trip, tstzspan '[2023-04-21 18:51:06, 2023-04-23 15:04:32]'), k.geom);
  params:
  - - '2023-04-21 18:51:06'
    - '2023-04-23 15:04:32'
  - Krs Recklinghausen
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-01-02 08:34:08]') AND eintersects(attime(f.trip, timestamptz '[2023-01-02 08:34:08]'), b.geom) GROUP BY b.name;
  params:
  - '2023-01-02 08:34:08'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-09-16 04:40:23, 2023-09-21 19:33:11]'), c.geom, 3.785747152882168e-06) WHERE c.name = 'Minden' AND f.trip && tstzspan '[2023-09-16 04:40:23, 2023-09-21 19:33:11]';
  params:
  - - '2023-09-16 04:40:23'
    - '2023-09-21 19:33:11'
  - Minden
  - 3.785747152882168e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Mettmann' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-09-05 17:57:17, 2023-09-07 00:07:23]') AND eintersects(attime(f.trip, tstzspan '[2023-09-05 17:57:17, 2023-09-07 00:07:23]'), k.geom);
  params:
  - - '2023-09-05 17:57:17'
    - '2023-09-07 00:07:23'
  - Krs Mettmann
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-24 01:05:22, 2023-01-31 09:20:01]') #< 1190 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-24 01:05:22, 2023-01-31 09:20:01]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-01-24 01:05:22, 2023-01-31 09:20:01]') WHERE g.name = 'Gem Wiehl' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-24 01:05:22, 2023-01-31 09:20:01]') #< 1190 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-24 01:05:22, 2023-01-31 09:20:01]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-01-24 01:05:22'
    - '2023-01-31 09:20:01'
  - Gem Wiehl
  - 1190
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Rhein-Erft-Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-12-11 18:28:00, 2023-12-12 16:18:26]') AND eintersects(attime(f.trip, tstzspan '[2023-12-11 18:28:00, 2023-12-12 16:18:26]'), k.geom);
  params:
  - - '2023-12-11 18:28:00'
    - '2023-12-12 16:18:26'
  - Krs Rhein-Erft-Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-18'::timestamp, DATE '2023-10-18' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Bergisch Gladbach' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-10-18'
  - Gem Bergisch Gladbach
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Ennepe-Ruhr-Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-06-09 19:00:26, 2023-06-11 03:55:18]') AND eintersects(attime(f.trip, tstzspan '[2023-06-09 19:00:26, 2023-06-11 03:55:18]'), k.geom);
  params:
  - - '2023-06-09 19:00:26'
    - '2023-06-11 03:55:18'
  - Krs Ennepe-Ruhr-Kreis
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Bielefeld' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-07-09 10:41:18, 2023-07-11 06:10:08]') AND eintersects(attime(f.trip, tstzspan '[2023-07-09 10:41:18, 2023-07-11 06:10:08]'), k.geom);
  params:
  - - '2023-07-09 10:41:18'
    - '2023-07-11 06:10:08'
  - Krs Bielefeld
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-16 09:41:29, 2023-09-23 08:04:13]') #< 770 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-16 09:41:29, 2023-09-23 08:04:13]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-09-16 09:41:29, 2023-09-23 08:04:13]') WHERE g.name = 'Gem Overath' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-16 09:41:29, 2023-09-23 08:04:13]') #< 770 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-16 09:41:29, 2023-09-23 08:04:13]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-09-16 09:41:29'
    - '2023-09-23 08:04:13'
  - Gem Overath
  - 770
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Minden-Luebbecke' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-11-16 10:48:22, 2023-11-18 04:03:57]') AND eintersects(attime(f.trip, tstzspan '[2023-11-16 10:48:22, 2023-11-18 04:03:57]'), k.geom);
  params:
  - - '2023-11-16 10:48:22'
    - '2023-11-18 04:03:57'
  - Krs Minden-Luebbecke
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-18 04:52:04, 2023-04-02 04:10:44]'), c.geom, 1.4207502365800909e-05) WHERE c.name = 'Menden' AND f.trip && tstzspan '[2023-03-18 04:52:04, 2023-04-02 04:10:44]';
  params:
  - - '2023-03-18 04:52:04'
    - '2023-04-02 04:10:44'
  - Menden
  - 1.4207502365800909e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Hamm' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-04-10 11:39:39, 2023-04-11 22:00:35]') AND eintersects(attime(f.trip, tstzspan '[2023-04-10 11:39:39, 2023-04-11 22:00:35]'), k.geom);
  params:
  - - '2023-04-10 11:39:39'
    - '2023-04-11 22:00:35'
  - Krs Hamm
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Hochsauerlandkreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-11-26 14:30:48, 2023-11-28 06:52:55]') AND eintersects(attime(f.trip, tstzspan '[2023-11-26 14:30:48, 2023-11-28 06:52:55]'), k.geom);
  params:
  - - '2023-11-26 14:30:48'
    - '2023-11-28 06:52:55'
  - Krs Hochsauerlandkreis
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-06 23:44:15, 2023-07-11 14:25:36]') #< 1410 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-06 23:44:15, 2023-07-11 14:25:36]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-07-06 23:44:15, 2023-07-11 14:25:36]') WHERE g.name = 'Gem Rees' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-06 23:44:15, 2023-07-11 14:25:36]') #< 1410 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-06 23:44:15, 2023-07-11 14:25:36]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-07-06 23:44:15'
    - '2023-07-11 14:25:36'
  - Gem Rees
  - 1410
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-03'::timestamp, DATE '2023-09-03' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Steinheim' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-09-03'
  - Gem Steinheim
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-01 00:00:01, 2023-01-04 05:08:02]') #< 960 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-01 00:00:01, 2023-01-04 05:08:02]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-01-01 00:00:01, 2023-01-04 05:08:02]') WHERE g.name = 'Gem Blankenheim' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-01 00:00:01, 2023-01-04 05:08:02]') #< 960 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-01 00:00:01, 2023-01-04 05:08:02]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-01-01 00:00:01'
    - '2023-01-04 05:08:02'
  - Gem Blankenheim
  - 960
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Steinfurt' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-08-02 07:37:11, 2023-08-03 19:28:20]') AND eintersects(attime(f.trip, tstzspan '[2023-08-02 07:37:11, 2023-08-03 19:28:20]'), k.geom);
  params:
  - - '2023-08-02 07:37:11'
    - '2023-08-03 19:28:20'
  - Krs Steinfurt
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-31'::timestamp, DATE '2023-03-31' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Schieder-Schwalenberg' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-03-31'
  - Gem Schieder-Schwalenberg
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Gelsenkirchen' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-09-03 14:24:30, 2023-09-03 15:40:35]') AND eintersects(attime(f.trip, tstzspan '[2023-09-03 14:24:30, 2023-09-03 15:40:35]'), k.geom);
  params:
  - - '2023-09-03 14:24:30'
    - '2023-09-03 15:40:35'
  - Krs Gelsenkirchen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-07-30'::timestamp, DATE '2023-07-30' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Altenbeken' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-07-30'
  - Gem Altenbeken
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-07-01 15:18:12, 2023-07-11 14:00:01]'), c.geom, 3.962909811714108e-06) WHERE c.name = 'Schwerte' AND f.trip && tstzspan '[2023-07-01 15:18:12, 2023-07-11 14:00:01]';
  params:
  - - '2023-07-01 15:18:12'
    - '2023-07-11 14:00:01'
  - Schwerte
  - 3.962909811714108e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Bielefeld' AND f.trip && stbox(k.geom, tstzspan '[2023-01-14 20:08:47, 2023-01-27 13:11:05]') AND eintersects(attime(f.trip, tstzspan '[2023-01-14 20:08:47, 2023-01-27 13:11:05]'), k.geom);
  params:
  - - '2023-01-14 20:08:47'
    - '2023-01-27 13:11:05'
  - Krs Bielefeld
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-21 18:57:38, 2023-03-29 16:15:13]') #< 970 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-21 18:57:38, 2023-03-29 16:15:13]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-03-21 18:57:38, 2023-03-29 16:15:13]') WHERE g.name = 'Gem Ascheberg' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-21 18:57:38, 2023-03-29 16:15:13]') #< 970 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-21 18:57:38, 2023-03-29 16:15:13]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-03-21 18:57:38'
    - '2023-03-29 16:15:13'
  - Gem Ascheberg
  - 970
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Hagen' AND f.trip && stbox(k.geom, tstzspan '[2023-11-07 11:07:35, 2023-11-09 20:52:51]') AND eintersects(attime(f.trip, tstzspan '[2023-11-07 11:07:35, 2023-11-09 20:52:51]'), k.geom);
  params:
  - - '2023-11-07 11:07:35'
    - '2023-11-09 20:52:51'
  - Krs Hagen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-07-20 12:35:03, 2023-08-01 01:46:28]'), c.geom, 1.4831590094130378e-05) WHERE c.name = 'Schloß Holte-Stukenbrock' AND f.trip && tstzspan '[2023-07-20 12:35:03, 2023-08-01 01:46:28]';
  params:
  - - '2023-07-20 12:35:03'
    - '2023-08-01 01:46:28'
  - Schloß Holte-Stukenbrock
  - 1.4831590094130378e-05
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-11-18 03:59:40, 2023-11-23 02:23:44]'), c.geom, 9.745867165105957e-06) WHERE c.name = 'Juelich' AND f.trip && tstzspan '[2023-11-18 03:59:40, 2023-11-23 02:23:44]';
  params:
  - - '2023-11-18 03:59:40'
    - '2023-11-23 02:23:44'
  - Juelich
  - 9.745867165105957e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-04 13:17:14, 2023-03-18 09:21:10]'), c.geom, 1.2376693378564153e-05) WHERE c.name = 'Bad Honnef' AND f.trip && tstzspan '[2023-03-04 13:17:14, 2023-03-18 09:21:10]';
  params:
  - - '2023-03-04 13:17:14'
    - '2023-03-18 09:21:10'
  - Bad Honnef
  - 1.2376693378564153e-05
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-05-19 12:22:20, 2023-05-26 11:02:46]'), c.geom, 1.2933666084738226e-05) WHERE c.name = 'Straelen' AND f.trip && tstzspan '[2023-05-19 12:22:20, 2023-05-26 11:02:46]';
  params:
  - - '2023-05-19 12:22:20'
    - '2023-05-26 11:02:46'
  - Straelen
  - 1.2933666084738226e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Mettmann' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-11-07 12:38:40, 2023-11-08 09:16:16]') AND eintersects(attime(f.trip, tstzspan '[2023-11-07 12:38:40, 2023-11-08 09:16:16]'), k.geom);
  params:
  - - '2023-11-07 12:38:40'
    - '2023-11-08 09:16:16'
  - Krs Mettmann
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Soest' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-09-20 06:54:29, 2023-09-21 19:56:38]') AND eintersects(attime(f.trip, tstzspan '[2023-09-20 06:54:29, 2023-09-21 19:56:38]'), k.geom);
  params:
  - - '2023-09-20 06:54:29'
    - '2023-09-21 19:56:38'
  - Krs Soest
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-27'::timestamp, DATE '2023-10-27' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Hamminkeln' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-10-27'
  - Gem Hamminkeln
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Coesfeld' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-08-03 19:05:39, 2023-08-03 19:24:21]') AND eintersects(attime(f.trip, tstzspan '[2023-08-03 19:05:39, 2023-08-03 19:24:21]'), k.geom);
  params:
  - - '2023-08-03 19:05:39'
    - '2023-08-03 19:24:21'
  - Krs Coesfeld
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Steinfurt' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-12-25 20:35:11, 2023-12-27 04:26:16]') AND eintersects(attime(f.trip, tstzspan '[2023-12-25 20:35:11, 2023-12-27 04:26:16]'), k.geom);
  params:
  - - '2023-12-25 20:35:11'
    - '2023-12-27 04:26:16'
  - Krs Steinfurt
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-04-09 16:11:16, 2023-04-14 07:20:43]'), c.geom, 7.459604001016752e-06) WHERE c.name = 'Straelen' AND f.trip && tstzspan '[2023-04-09 16:11:16, 2023-04-14 07:20:43]';
  params:
  - - '2023-04-09 16:11:16'
    - '2023-04-14 07:20:43'
  - Straelen
  - 7.459604001016752e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-01-10 22:39:30, 2023-01-19 15:20:35]'), c.geom, 1.0108598006006402e-05) WHERE c.name = 'Barntrup' AND f.trip && tstzspan '[2023-01-10 22:39:30, 2023-01-19 15:20:35]';
  params:
  - - '2023-01-10 22:39:30'
    - '2023-01-19 15:20:35'
  - Barntrup
  - 1.0108598006006402e-05
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-02-09 14:53:08]') AND eintersects(attime(f.trip, timestamptz '[2023-02-09 14:53:08]'), b.geom) GROUP BY b.name;
  params:
  - '2023-02-09 14:53:08'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-24'::timestamp, DATE '2023-10-24' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Bueren' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-10-24'
  - Gem Bueren
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-01 16:34:48, 2023-10-07 18:02:52]'), c.geom, 9.529379607576835e-06) WHERE c.name = 'Alsdorf' AND f.trip && tstzspan '[2023-10-01 16:34:48, 2023-10-07 18:02:52]';
  params:
  - - '2023-10-01 16:34:48'
    - '2023-10-07 18:02:52'
  - Alsdorf
  - 9.529379607576835e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-11-13 12:55:48, 2023-11-27 18:04:56]') #< 1400 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-11-13 12:55:48, 2023-11-27 18:04:56]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-11-13 12:55:48, 2023-11-27 18:04:56]') WHERE g.name = 'Gem Brilon' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-11-13 12:55:48, 2023-11-27 18:04:56]') #< 1400 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-11-13 12:55:48, 2023-11-27 18:04:56]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-11-13 12:55:48'
    - '2023-11-27 18:04:56'
  - Gem Brilon
  - 1400
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Hochsauerlandkreis' AND f.trip && stbox(k.geom, tstzspan '[2023-04-23 04:47:15, 2023-05-04 12:59:49]') AND eintersects(attime(f.trip, tstzspan '[2023-04-23 04:47:15, 2023-05-04 12:59:49]'), k.geom);
  params:
  - - '2023-04-23 04:47:15'
    - '2023-05-04 12:59:49'
  - Krs Hochsauerlandkreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-06-26 09:07:12, 2023-06-30 18:10:02]'), c.geom, 8.096417703672571e-06) WHERE c.name = 'Beckum' AND f.trip && tstzspan '[2023-06-26 09:07:12, 2023-06-30 18:10:02]';
  params:
  - - '2023-06-26 09:07:12'
    - '2023-06-30 18:10:02'
  - Beckum
  - 8.096417703672571e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-04-28 15:41:44]') AND eintersects(attime(f.trip, timestamptz '[2023-04-28 15:41:44]'), b.geom) GROUP BY b.name;
  params:
  - '2023-04-28 15:41:44'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-02-03 01:22:04, 2023-02-11 13:09:29]'), c.geom, 1.5064628741159607e-05) WHERE c.name = 'Wipperfuerth' AND f.trip && tstzspan '[2023-02-03 01:22:04, 2023-02-11 13:09:29]';
  params:
  - - '2023-02-03 01:22:04'
    - '2023-02-11 13:09:29'
  - Wipperfuerth
  - 1.5064628741159607e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-15 04:18:19, 2023-05-20 21:49:00]') #< 930 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-15 04:18:19, 2023-05-20 21:49:00]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-05-15 04:18:19, 2023-05-20 21:49:00]') WHERE g.name = 'Gem Wuppertal' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-15 04:18:19, 2023-05-20 21:49:00]') #< 930 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-15 04:18:19, 2023-05-20 21:49:00]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-05-15 04:18:19'
    - '2023-05-20 21:49:00'
  - Gem Wuppertal
  - 930
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-11 04:29:30, 2023-10-23 05:28:48]') #< 1440 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-11 04:29:30, 2023-10-23 05:28:48]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-10-11 04:29:30, 2023-10-23 05:28:48]') WHERE g.name = 'Gem Haltern am See' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-11 04:29:30, 2023-10-23 05:28:48]') #< 1440 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-11 04:29:30, 2023-10-23 05:28:48]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-10-11 04:29:30'
    - '2023-10-23 05:28:48'
  - Gem Haltern am See
  - 1440
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-12-25 22:00:12, 2023-12-31 23:59:59]') #< 750 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-12-25 22:00:12, 2023-12-31 23:59:59]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-12-25 22:00:12, 2023-12-31 23:59:59]') WHERE g.name = 'Gem Windeck' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-12-25 22:00:12, 2023-12-31 23:59:59]') #< 750 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-12-25 22:00:12, 2023-12-31 23:59:59]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-12-25 22:00:12'
    - '2023-12-31 23:59:59'
  - Gem Windeck
  - 750
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Bielefeld' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-04-04 21:25:49, 2023-04-05 01:32:08]') AND eintersects(attime(f.trip, tstzspan '[2023-04-04 21:25:49, 2023-04-05 01:32:08]'), k.geom);
  params:
  - - '2023-04-04 21:25:49'
    - '2023-04-05 01:32:08'
  - Krs Bielefeld
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-07-06 10:55:09, 2023-07-12 02:25:22]'), c.geom, 1.5488621946310142e-05) WHERE c.name = 'Rheine' AND f.trip && tstzspan '[2023-07-06 10:55:09, 2023-07-12 02:25:22]';
  params:
  - - '2023-07-06 10:55:09'
    - '2023-07-12 02:25:22'
  - Rheine
  - 1.5488621946310142e-05
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Hamm' AND f.trip && stbox(k.geom, tstzspan '[2023-11-23 07:05:17, 2023-12-06 19:52:56]') AND eintersects(attime(f.trip, tstzspan '[2023-11-23 07:05:17, 2023-12-06 19:52:56]'), k.geom);
  params:
  - - '2023-11-23 07:05:17'
    - '2023-12-06 19:52:56'
  - Krs Hamm
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-11-06 02:06:27]') AND eintersects(attime(f.trip, timestamptz '[2023-11-06 02:06:27]'), b.geom) GROUP BY b.name;
  params:
  - '2023-11-06 02:06:27'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-10 04:42:55, 2023-10-17 17:50:00]'), c.geom, 6.177085499751546e-06) WHERE c.name = 'Luedinghausen' AND f.trip && tstzspan '[2023-10-10 04:42:55, 2023-10-17 17:50:00]';
  params:
  - - '2023-10-10 04:42:55'
    - '2023-10-17 17:50:00'
  - Luedinghausen
  - 6.177085499751546e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-26 06:08:46, 2023-10-03 10:25:07]') #< 1330 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-26 06:08:46, 2023-10-03 10:25:07]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-09-26 06:08:46, 2023-10-03 10:25:07]') WHERE g.name = 'Gem Heinsberg' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-26 06:08:46, 2023-10-03 10:25:07]') #< 1330 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-26 06:08:46, 2023-10-03 10:25:07]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-09-26 06:08:46'
    - '2023-10-03 10:25:07'
  - Gem Heinsberg
  - 1330
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-06-30 04:06:52, 2023-07-07 18:58:16]'), c.geom, 1.0981225870027226e-05) WHERE c.name = 'Voerde' AND f.trip && tstzspan '[2023-06-30 04:06:52, 2023-07-07 18:58:16]';
  params:
  - - '2023-06-30 04:06:52'
    - '2023-07-07 18:58:16'
  - Voerde
  - 1.0981225870027226e-05
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-04-04 10:15:41]') AND eintersects(attime(f.trip, timestamptz '[2023-04-04 10:15:41]'), b.geom) GROUP BY b.name;
  params:
  - '2023-04-04 10:15:41'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-01 17:32:21, 2023-09-12 05:36:31]') #< 1220 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-01 17:32:21, 2023-09-12 05:36:31]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-09-01 17:32:21, 2023-09-12 05:36:31]') WHERE g.name = 'Gem Bad Oeynhausen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-01 17:32:21, 2023-09-12 05:36:31]') #< 1220 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-01 17:32:21, 2023-09-12 05:36:31]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-09-01 17:32:21'
    - '2023-09-12 05:36:31'
  - Gem Bad Oeynhausen
  - 1220
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-28'::timestamp, DATE '2023-09-28' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Blankenheim' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-09-28'
  - Gem Blankenheim
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-06'::timestamp, DATE '2023-08-06' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Lindlar' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-08-06'
  - Gem Lindlar
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-14'::timestamp, DATE '2023-11-14' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Iserlohn' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-11-14'
  - Gem Iserlohn
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Oberbergischer Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-07-28 08:00:17, 2023-07-28 13:31:24]') AND eintersects(attime(f.trip, tstzspan '[2023-07-28 08:00:17, 2023-07-28 13:31:24]'), k.geom);
  params:
  - - '2023-07-28 08:00:17'
    - '2023-07-28 13:31:24'
  - Krs Oberbergischer Kreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-12 03:47:28, 2023-10-16 11:24:46]'), c.geom, 1.2663348097436557e-05) WHERE c.name = 'Heiligenhaus' AND f.trip && tstzspan '[2023-10-12 03:47:28, 2023-10-16 11:24:46]';
  params:
  - - '2023-10-12 03:47:28'
    - '2023-10-16 11:24:46'
  - Heiligenhaus
  - 1.2663348097436557e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Maerkischer Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-04-08 17:34:26, 2023-04-09 10:33:05]') AND eintersects(attime(f.trip, tstzspan '[2023-04-08 17:34:26, 2023-04-09 10:33:05]'), k.geom);
  params:
  - - '2023-04-08 17:34:26'
    - '2023-04-09 10:33:05'
  - Krs Maerkischer Kreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Essen' AND f.trip && stbox(k.geom, tstzspan '[2023-06-15 18:12:31, 2023-06-22 16:13:06]') AND eintersects(attime(f.trip, tstzspan '[2023-06-15 18:12:31, 2023-06-22 16:13:06]'), k.geom);
  params:
  - - '2023-06-15 18:12:31'
    - '2023-06-22 16:13:06'
  - Krs Essen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Soest' AND f.trip && stbox(k.geom, tstzspan '[2023-12-07 06:55:50, 2023-12-19 21:46:02]') AND eintersects(attime(f.trip, tstzspan '[2023-12-07 06:55:50, 2023-12-19 21:46:02]'), k.geom);
  params:
  - - '2023-12-07 06:55:50'
    - '2023-12-19 21:46:02'
  - Krs Soest
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Hoexter' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-06-02 15:46:30, 2023-06-04 08:29:40]') AND eintersects(attime(f.trip, tstzspan '[2023-06-02 15:46:30, 2023-06-04 08:29:40]'), k.geom);
  params:
  - - '2023-06-02 15:46:30'
    - '2023-06-04 08:29:40'
  - Krs Hoexter
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-11-30 15:31:56, 2023-12-12 22:27:57]'), c.geom, 1.4790976706556723e-05) WHERE c.name = 'Sprockhoevel' AND f.trip && tstzspan '[2023-11-30 15:31:56, 2023-12-12 22:27:57]';
  params:
  - - '2023-11-30 15:31:56'
    - '2023-12-12 22:27:57'
  - Sprockhoevel
  - 1.4790976706556723e-05
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-11-13 07:45:21, 2023-11-23 07:26:25]'), c.geom, 1.5341896734986933e-05) WHERE c.name = 'Bueren' AND f.trip && tstzspan '[2023-11-13 07:45:21, 2023-11-23 07:26:25]';
  params:
  - - '2023-11-13 07:45:21'
    - '2023-11-23 07:26:25'
  - Bueren
  - 1.5341896734986933e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-11 07:03:48, 2023-01-19 05:37:19]') #< 1150 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-11 07:03:48, 2023-01-19 05:37:19]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-01-11 07:03:48, 2023-01-19 05:37:19]') WHERE g.name = 'Gem Petershagen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-11 07:03:48, 2023-01-19 05:37:19]') #< 1150 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-11 07:03:48, 2023-01-19 05:37:19]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-01-11 07:03:48'
    - '2023-01-19 05:37:19'
  - Gem Petershagen
  - 1150
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-11-02 22:59:48, 2023-11-14 21:37:01]') #< 980 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-11-02 22:59:48, 2023-11-14 21:37:01]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-11-02 22:59:48, 2023-11-14 21:37:01]') WHERE g.name = 'Gem Greven' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-11-02 22:59:48, 2023-11-14 21:37:01]') #< 980 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-11-02 22:59:48, 2023-11-14 21:37:01]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-11-02 22:59:48'
    - '2023-11-14 21:37:01'
  - Gem Greven
  - 980
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-12-20 23:44:26]') AND eintersects(attime(f.trip, timestamptz '[2023-12-20 23:44:26]'), b.geom) GROUP BY b.name;
  params:
  - '2023-12-20 23:44:26'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-07-10 11:36:40, 2023-07-19 08:57:03]'), c.geom, 1.448427211572745e-05) WHERE c.name = 'Linnich' AND f.trip && tstzspan '[2023-07-10 11:36:40, 2023-07-19 08:57:03]';
  params:
  - - '2023-07-10 11:36:40'
    - '2023-07-19 08:57:03'
  - Linnich
  - 1.448427211572745e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-17 04:27:39, 2023-07-19 20:37:50]') #< 760 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-17 04:27:39, 2023-07-19 20:37:50]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-07-17 04:27:39, 2023-07-19 20:37:50]') WHERE g.name = 'Gem Gevelsberg' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-17 04:27:39, 2023-07-19 20:37:50]') #< 760 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-17 04:27:39, 2023-07-19 20:37:50]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-07-17 04:27:39'
    - '2023-07-19 20:37:50'
  - Gem Gevelsberg
  - 760
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-03-04 21:25:22]') AND eintersects(attime(f.trip, timestamptz '[2023-03-04 21:25:22]'), b.geom) GROUP BY b.name;
  params:
  - '2023-03-04 21:25:22'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Hochsauerlandkreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-08-21 01:25:36, 2023-08-21 08:26:37]') AND eintersects(attime(f.trip, tstzspan '[2023-08-21 01:25:36, 2023-08-21 08:26:37]'), k.geom);
  params:
  - - '2023-08-21 01:25:36'
    - '2023-08-21 08:26:37'
  - Krs Hochsauerlandkreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-05-01 06:35:32, 2023-05-06 23:19:14]'), c.geom, 3.6720911151730696e-06) WHERE c.name = 'Wassenberg' AND f.trip && tstzspan '[2023-05-01 06:35:32, 2023-05-06 23:19:14]';
  params:
  - - '2023-05-01 06:35:32'
    - '2023-05-06 23:19:14'
  - Wassenberg
  - 3.6720911151730696e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-01 00:00:01, 2023-01-07 15:17:04]') #< 810 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-01 00:00:01, 2023-01-07 15:17:04]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-01-01 00:00:01, 2023-01-07 15:17:04]') WHERE g.name = 'Gem Stolberg (Rhld.)' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-01 00:00:01, 2023-01-07 15:17:04]') #< 810 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-01 00:00:01, 2023-01-07 15:17:04]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-01-01 00:00:01'
    - '2023-01-07 15:17:04'
  - Gem Stolberg (Rhld.)
  - 810
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-02-01'::timestamp, DATE '2023-02-01' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Havixbeck' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-02-01'
  - Gem Havixbeck
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Maerkischer Kreis' AND f.trip && stbox(k.geom, tstzspan '[2023-05-28 05:52:26, 2023-06-11 16:30:56]') AND eintersects(attime(f.trip, tstzspan '[2023-05-28 05:52:26, 2023-06-11 16:30:56]'), k.geom);
  params:
  - - '2023-05-28 05:52:26'
    - '2023-06-11 16:30:56'
  - Krs Maerkischer Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-01-13'::timestamp, DATE '2023-01-13' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Drolshagen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-01-13'
  - Gem Drolshagen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-27'::timestamp, DATE '2023-05-27' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Kreuzau' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-05-27'
  - Gem Kreuzau
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-28'::timestamp, DATE '2023-11-28' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Olpe' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-11-28'
  - Gem Olpe
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-01 03:31:16, 2023-10-05 09:56:15]') #< 1420 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-01 03:31:16, 2023-10-05 09:56:15]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-10-01 03:31:16, 2023-10-05 09:56:15]') WHERE g.name = 'Gem Leichlingen (Rhld.)' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-01 03:31:16, 2023-10-05 09:56:15]') #< 1420 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-01 03:31:16, 2023-10-05 09:56:15]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-10-01 03:31:16'
    - '2023-10-05 09:56:15'
  - Gem Leichlingen (Rhld.)
  - 1420
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-13 15:22:23, 2023-09-17 15:01:08]') #< 1160 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-13 15:22:23, 2023-09-17 15:01:08]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-09-13 15:22:23, 2023-09-17 15:01:08]') WHERE g.name = 'Gem Salzkotten' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-13 15:22:23, 2023-09-17 15:01:08]') #< 1160 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-13 15:22:23, 2023-09-17 15:01:08]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-09-13 15:22:23'
    - '2023-09-17 15:01:08'
  - Gem Salzkotten
  - 1160
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Rheinisch-Bergischer Kreis' AND f.trip && stbox(k.geom, tstzspan '[2023-11-12 17:49:41, 2023-11-22 14:24:36]') AND eintersects(attime(f.trip, tstzspan '[2023-11-12 17:49:41, 2023-11-22 14:24:36]'), k.geom);
  params:
  - - '2023-11-12 17:49:41'
    - '2023-11-22 14:24:36'
  - Krs Rheinisch-Bergischer Kreis
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Guetersloh' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-10-19 22:23:56, 2023-10-20 03:41:08]') AND eintersects(attime(f.trip, tstzspan '[2023-10-19 22:23:56, 2023-10-20 03:41:08]'), k.geom);
  params:
  - - '2023-10-19 22:23:56'
    - '2023-10-20 03:41:08'
  - Krs Guetersloh
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-17 22:34:51, 2023-03-24 10:35:31]') #< 1340 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-17 22:34:51, 2023-03-24 10:35:31]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-03-17 22:34:51, 2023-03-24 10:35:31]') WHERE g.name = 'Gem Bochum' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-17 22:34:51, 2023-03-24 10:35:31]') #< 1340 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-17 22:34:51, 2023-03-24 10:35:31]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-03-17 22:34:51'
    - '2023-03-24 10:35:31'
  - Gem Bochum
  - 1340
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Minden-Luebbecke' AND f.trip && stbox(k.geom, tstzspan '[2023-01-24 19:41:23, 2023-01-28 06:58:32]') AND eintersects(attime(f.trip, tstzspan '[2023-01-24 19:41:23, 2023-01-28 06:58:32]'), k.geom);
  params:
  - - '2023-01-24 19:41:23'
    - '2023-01-28 06:58:32'
  - Krs Minden-Luebbecke
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Soest' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-07-26 07:09:58, 2023-07-27 23:38:27]') AND eintersects(attime(f.trip, tstzspan '[2023-07-26 07:09:58, 2023-07-27 23:38:27]'), k.geom);
  params:
  - - '2023-07-26 07:09:58'
    - '2023-07-27 23:38:27'
  - Krs Soest
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-01-01 02:25:16, 2023-01-04 19:08:28]'), c.geom, 1.1220808414255579e-05) WHERE c.name = 'Willebadessen' AND f.trip && tstzspan '[2023-01-01 02:25:16, 2023-01-04 19:08:28]';
  params:
  - - '2023-01-01 02:25:16'
    - '2023-01-04 19:08:28'
  - Willebadessen
  - 1.1220808414255579e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Dueren' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-12-20 22:31:38, 2023-12-22 09:54:46]') AND eintersects(attime(f.trip, tstzspan '[2023-12-20 22:31:38, 2023-12-22 09:54:46]'), k.geom);
  params:
  - - '2023-12-20 22:31:38'
    - '2023-12-22 09:54:46'
  - Krs Dueren
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Maerkischer Kreis' AND f.trip && stbox(k.geom, tstzspan '[2023-09-04 19:01:24, 2023-09-17 17:34:02]') AND eintersects(attime(f.trip, tstzspan '[2023-09-04 19:01:24, 2023-09-17 17:34:02]'), k.geom);
  params:
  - - '2023-09-04 19:01:24'
    - '2023-09-17 17:34:02'
  - Krs Maerkischer Kreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-07-29 02:07:05, 2023-08-10 15:00:34]'), c.geom, 8.870799841558338e-06) WHERE c.name = 'Spenge' AND f.trip && tstzspan '[2023-07-29 02:07:05, 2023-08-10 15:00:34]';
  params:
  - - '2023-07-29 02:07:05'
    - '2023-08-10 15:00:34'
  - Spenge
  - 8.870799841558338e-06
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-04'::timestamp, DATE '2023-09-04' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Wadersloh' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-09-04'
  - Gem Wadersloh
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-06-14 21:29:29]') AND eintersects(attime(f.trip, timestamptz '[2023-06-14 21:29:29]'), b.geom) GROUP BY b.name;
  params:
  - '2023-06-14 21:29:29'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-01-26 20:45:04, 2023-01-29 20:00:46]'), c.geom, 1.4050655252836427e-05) WHERE c.name = 'Leverkusen' AND f.trip && tstzspan '[2023-01-26 20:45:04, 2023-01-29 20:00:46]';
  params:
  - - '2023-01-26 20:45:04'
    - '2023-01-29 20:00:46'
  - Leverkusen
  - 1.4050655252836427e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-06-24 00:48:09, 2023-07-08 22:20:13]') #< 1240 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-06-24 00:48:09, 2023-07-08 22:20:13]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-06-24 00:48:09, 2023-07-08 22:20:13]') WHERE g.name = 'Gem Attendorn' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-06-24 00:48:09, 2023-07-08 22:20:13]') #< 1240 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-06-24 00:48:09, 2023-07-08 22:20:13]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-06-24 00:48:09'
    - '2023-07-08 22:20:13'
  - Gem Attendorn
  - 1240
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-09-12 07:05:12, 2023-09-20 00:59:42]'), c.geom, 5.893913884029298e-06) WHERE c.name = 'Warburg' AND f.trip && tstzspan '[2023-09-12 07:05:12, 2023-09-20 00:59:42]';
  params:
  - - '2023-09-12 07:05:12'
    - '2023-09-20 00:59:42'
  - Warburg
  - 5.893913884029298e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-12-17 20:16:46, 2023-12-20 12:32:39]') #< 1090 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-12-17 20:16:46, 2023-12-20 12:32:39]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-12-17 20:16:46, 2023-12-20 12:32:39]') WHERE g.name = 'Gem Bielefeld' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-12-17 20:16:46, 2023-12-20 12:32:39]') #< 1090 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-12-17 20:16:46, 2023-12-20 12:32:39]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-12-17 20:16:46'
    - '2023-12-20 12:32:39'
  - Gem Bielefeld
  - 1090
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Herford' AND f.trip && stbox(k.geom, tstzspan '[2023-08-23 20:30:34, 2023-09-02 22:23:24]') AND eintersects(attime(f.trip, tstzspan '[2023-08-23 20:30:34, 2023-09-02 22:23:24]'), k.geom);
  params:
  - - '2023-08-23 20:30:34'
    - '2023-09-02 22:23:24'
  - Krs Herford
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-05-14 04:36:15]') AND eintersects(attime(f.trip, timestamptz '[2023-05-14 04:36:15]'), b.geom) GROUP BY b.name;
  params:
  - '2023-05-14 04:36:15'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-01-07 07:41:56]') AND eintersects(attime(f.trip, timestamptz '[2023-01-07 07:41:56]'), b.geom) GROUP BY b.name;
  params:
  - '2023-01-07 07:41:56'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-03-03 20:18:10]') AND eintersects(attime(f.trip, timestamptz '[2023-03-03 20:18:10]'), b.geom) GROUP BY b.name;
  params:
  - '2023-03-03 20:18:10'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Recklinghausen' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-03-31 14:11:02, 2023-04-02 00:06:54]') AND eintersects(attime(f.trip, tstzspan '[2023-03-31 14:11:02, 2023-04-02 00:06:54]'), k.geom);
  params:
  - - '2023-03-31 14:11:02'
    - '2023-04-02 00:06:54'
  - Krs Recklinghausen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-05 08:50:47, 2023-03-18 02:33:36]'), c.geom, 1.4540274450928619e-05) WHERE c.name = 'Duisburg' AND f.trip && tstzspan '[2023-03-05 08:50:47, 2023-03-18 02:33:36]';
  params:
  - - '2023-03-05 08:50:47'
    - '2023-03-18 02:33:36'
  - Duisburg
  - 1.4540274450928619e-05
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Rheinisch-Bergischer Kreis' AND f.trip && stbox(k.geom, tstzspan '[2023-02-06 01:56:13, 2023-02-10 17:43:49]') AND eintersects(attime(f.trip, tstzspan '[2023-02-06 01:56:13, 2023-02-10 17:43:49]'), k.geom);
  params:
  - - '2023-02-06 01:56:13'
    - '2023-02-10 17:43:49'
  - Krs Rheinisch-Bergischer Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-10'::timestamp, DATE '2023-06-10' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Stolberg (Rhld.)' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-06-10'
  - Gem Stolberg (Rhld.)
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-09'::timestamp, DATE '2023-04-09' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Rees' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-04-09'
  - Gem Rees
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Mettmann' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-03-19 02:48:27, 2023-03-20 14:46:17]') AND eintersects(attime(f.trip, tstzspan '[2023-03-19 02:48:27, 2023-03-20 14:46:17]'), k.geom);
  params:
  - - '2023-03-19 02:48:27'
    - '2023-03-20 14:46:17'
  - Krs Mettmann
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-29 22:35:34, 2023-02-13 01:45:07]') #< 680 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-29 22:35:34, 2023-02-13 01:45:07]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-01-29 22:35:34, 2023-02-13 01:45:07]') WHERE g.name = 'Gem Nettersheim' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-01-29 22:35:34, 2023-02-13 01:45:07]') #< 680 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-01-29 22:35:34, 2023-02-13 01:45:07]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-01-29 22:35:34'
    - '2023-02-13 01:45:07'
  - Gem Nettersheim
  - 680
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-04-10 22:39:54]') AND eintersects(attime(f.trip, timestamptz '[2023-04-10 22:39:54]'), b.geom) GROUP BY b.name;
  params:
  - '2023-04-10 22:39:54'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-09-27 22:13:18]') AND eintersects(attime(f.trip, timestamptz '[2023-09-27 22:13:18]'), b.geom) GROUP BY b.name;
  params:
  - '2023-09-27 22:13:18'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Wuppertal' AND f.trip && stbox(k.geom, tstzspan '[2023-02-21 06:37:15, 2023-03-03 06:41:50]') AND eintersects(attime(f.trip, tstzspan '[2023-02-21 06:37:15, 2023-03-03 06:41:50]'), k.geom);
  params:
  - - '2023-02-21 06:37:15'
    - '2023-03-03 06:41:50'
  - Krs Wuppertal
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-02-28 05:00:36, 2023-03-08 18:05:56]') #< 710 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-02-28 05:00:36, 2023-03-08 18:05:56]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-02-28 05:00:36, 2023-03-08 18:05:56]') WHERE g.name = 'Gem Hamminkeln' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-02-28 05:00:36, 2023-03-08 18:05:56]') #< 710 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-02-28 05:00:36, 2023-03-08 18:05:56]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-02-28 05:00:36'
    - '2023-03-08 18:05:56'
  - Gem Hamminkeln
  - 710
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Remscheid' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-06-30 19:27:02, 2023-07-02 00:50:49]') AND eintersects(attime(f.trip, tstzspan '[2023-06-30 19:27:02, 2023-07-02 00:50:49]'), k.geom);
  params:
  - - '2023-06-30 19:27:02'
    - '2023-07-02 00:50:49'
  - Krs Remscheid
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Oberbergischer Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-06-17 07:58:37, 2023-06-17 20:49:35]') AND eintersects(attime(f.trip, tstzspan '[2023-06-17 07:58:37, 2023-06-17 20:49:35]'), k.geom);
  params:
  - - '2023-06-17 07:58:37'
    - '2023-06-17 20:49:35'
  - Krs Oberbergischer Kreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-07-05 08:31:23, 2023-07-11 19:13:19]'), c.geom, 7.468741204014875e-06) WHERE c.name = 'Gummersbach' AND f.trip && tstzspan '[2023-07-05 08:31:23, 2023-07-11 19:13:19]';
  params:
  - - '2023-07-05 08:31:23'
    - '2023-07-11 19:13:19'
  - Gummersbach
  - 7.468741204014875e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-04-09 20:12:28, 2023-04-20 00:25:11]'), c.geom, 1.0194626849954635e-05) WHERE c.name = 'Rheda-Wiedenbrueck' AND f.trip && tstzspan '[2023-04-09 20:12:28, 2023-04-20 00:25:11]';
  params:
  - - '2023-04-09 20:12:28'
    - '2023-04-20 00:25:11'
  - Rheda-Wiedenbrueck
  - 1.0194626849954635e-05
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Hoexter' AND f.trip && stbox(k.geom, tstzspan '[2023-08-22 12:01:44, 2023-08-25 06:44:22]') AND eintersects(attime(f.trip, tstzspan '[2023-08-22 12:01:44, 2023-08-25 06:44:22]'), k.geom);
  params:
  - - '2023-08-22 12:01:44'
    - '2023-08-25 06:44:22'
  - Krs Hoexter
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-02-25'::timestamp, DATE '2023-02-25' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Lichtenau' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-02-25'
  - Gem Lichtenau
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-13 00:01:04, 2023-10-16 14:39:16]') #< 990 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-13 00:01:04, 2023-10-16 14:39:16]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-10-13 00:01:04, 2023-10-16 14:39:16]') WHERE g.name = 'Gem Frechen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-13 00:01:04, 2023-10-16 14:39:16]') #< 990 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-13 00:01:04, 2023-10-16 14:39:16]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-10-13 00:01:04'
    - '2023-10-16 14:39:16'
  - Gem Frechen
  - 990
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-13'::timestamp, DATE '2023-03-13' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Schieder-Schwalenberg' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-03-13'
  - Gem Schieder-Schwalenberg
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Minden-Luebbecke' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-06-13 05:30:52, 2023-06-13 10:35:05]') AND eintersects(attime(f.trip, tstzspan '[2023-06-13 05:30:52, 2023-06-13 10:35:05]'), k.geom);
  params:
  - - '2023-06-13 05:30:52'
    - '2023-06-13 10:35:05'
  - Krs Minden-Luebbecke
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-03 18:10:35, 2023-10-13 06:21:47]') #< 980 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-03 18:10:35, 2023-10-13 06:21:47]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-10-03 18:10:35, 2023-10-13 06:21:47]') WHERE g.name = 'Gem Borgholzhausen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-03 18:10:35, 2023-10-13 06:21:47]') #< 980 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-03 18:10:35, 2023-10-13 06:21:47]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-10-03 18:10:35'
    - '2023-10-13 06:21:47'
  - Gem Borgholzhausen
  - 980
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-15 21:00:24, 2023-03-24 16:43:32]'), c.geom, 7.390701549248237e-06) WHERE c.name = 'Marienmuenster' AND f.trip && tstzspan '[2023-03-15 21:00:24, 2023-03-24 16:43:32]';
  params:
  - - '2023-03-15 21:00:24'
    - '2023-03-24 16:43:32'
  - Marienmuenster
  - 7.390701549248237e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-17 01:43:35, 2023-09-28 19:55:55]') #< 1200 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-17 01:43:35, 2023-09-28 19:55:55]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-09-17 01:43:35, 2023-09-28 19:55:55]') WHERE g.name = 'Gem Uedem' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-17 01:43:35, 2023-09-28 19:55:55]') #< 1200 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-17 01:43:35, 2023-09-28 19:55:55]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-09-17 01:43:35'
    - '2023-09-28 19:55:55'
  - Gem Uedem
  - 1200
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Bottrop' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-12-26 18:53:33, 2023-12-27 22:05:37]') AND eintersects(attime(f.trip, tstzspan '[2023-12-26 18:53:33, 2023-12-27 22:05:37]'), k.geom);
  params:
  - - '2023-12-26 18:53:33'
    - '2023-12-27 22:05:37'
  - Krs Bottrop
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Viersen' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-03-24 13:43:16, 2023-03-25 08:20:32]') AND eintersects(attime(f.trip, tstzspan '[2023-03-24 13:43:16, 2023-03-25 08:20:32]'), k.geom);
  params:
  - - '2023-03-24 13:43:16'
    - '2023-03-25 08:20:32'
  - Krs Viersen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Siegen-Wittgenstein' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-04-24 23:24:35, 2023-04-25 16:09:53]') AND eintersects(attime(f.trip, tstzspan '[2023-04-24 23:24:35, 2023-04-25 16:09:53]'), k.geom);
  params:
  - - '2023-04-24 23:24:35'
    - '2023-04-25 16:09:53'
  - Krs Siegen-Wittgenstein
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-31'::timestamp, DATE '2023-03-31' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Blankenheim' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-03-31'
  - Gem Blankenheim
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Bochum' AND f.trip && stbox(k.geom, tstzspan '[2023-03-28 18:50:31, 2023-04-06 16:32:16]') AND eintersects(attime(f.trip, tstzspan '[2023-03-28 18:50:31, 2023-04-06 16:32:16]'), k.geom);
  params:
  - - '2023-03-28 18:50:31'
    - '2023-04-06 16:32:16'
  - Krs Bochum
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-12-17 01:18:19]') AND eintersects(attime(f.trip, timestamptz '[2023-12-17 01:18:19]'), b.geom) GROUP BY b.name;
  params:
  - '2023-12-17 01:18:19'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-11-20 20:59:35, 2023-11-27 08:45:02]'), c.geom, 1.3683503774503217e-05) WHERE c.name = 'Heimbach' AND f.trip && tstzspan '[2023-11-20 20:59:35, 2023-11-27 08:45:02]';
  params:
  - - '2023-11-20 20:59:35'
    - '2023-11-27 08:45:02'
  - Heimbach
  - 1.3683503774503217e-05
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-01-01'::timestamp, DATE '2023-01-01' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Drolshagen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-01-01'
  - Gem Drolshagen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Guetersloh' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-11-05 12:54:54, 2023-11-05 13:23:38]') AND eintersects(attime(f.trip, tstzspan '[2023-11-05 12:54:54, 2023-11-05 13:23:38]'), k.geom);
  params:
  - - '2023-11-05 12:54:54'
    - '2023-11-05 13:23:38'
  - Krs Guetersloh
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-11 07:08:34, 2023-10-24 18:14:48]'), c.geom, 6.1552717085757965e-06) WHERE c.name = 'Koenigswinter' AND f.trip && tstzspan '[2023-10-11 07:08:34, 2023-10-24 18:14:48]';
  params:
  - - '2023-10-11 07:08:34'
    - '2023-10-24 18:14:48'
  - Koenigswinter
  - 6.1552717085757965e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-22 15:04:42, 2023-03-24 23:31:09]'), c.geom, 1.046386839648585e-05) WHERE c.name = 'Voerde' AND f.trip && tstzspan '[2023-03-22 15:04:42, 2023-03-24 23:31:09]';
  params:
  - - '2023-03-22 15:04:42'
    - '2023-03-24 23:31:09'
  - Voerde
  - 1.046386839648585e-05
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-26'::timestamp, DATE '2023-03-26' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Extertal' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-03-26'
  - Gem Extertal
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Dortmund' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-02-23 01:38:06, 2023-02-23 19:14:58]') AND eintersects(attime(f.trip, tstzspan '[2023-02-23 01:38:06, 2023-02-23 19:14:58]'), k.geom);
  params:
  - - '2023-02-23 01:38:06'
    - '2023-02-23 19:14:58'
  - Krs Dortmund
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-11-03 19:41:26, 2023-11-08 13:05:45]'), c.geom, 1.1993729968482502e-05) WHERE c.name = 'Duisburg' AND f.trip && tstzspan '[2023-11-03 19:41:26, 2023-11-08 13:05:45]';
  params:
  - - '2023-11-03 19:41:26'
    - '2023-11-08 13:05:45'
  - Duisburg
  - 1.1993729968482502e-05
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-11-01 15:12:18]') AND eintersects(attime(f.trip, timestamptz '[2023-11-01 15:12:18]'), b.geom) GROUP BY b.name;
  params:
  - '2023-11-01 15:12:18'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-22 23:10:00, 2023-05-29 06:08:41]') #< 680 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-22 23:10:00, 2023-05-29 06:08:41]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-05-22 23:10:00, 2023-05-29 06:08:41]') WHERE g.name = 'Gem Goch' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-22 23:10:00, 2023-05-29 06:08:41]') #< 680 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-22 23:10:00, 2023-05-29 06:08:41]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-05-22 23:10:00'
    - '2023-05-29 06:08:41'
  - Gem Goch
  - 680
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-11-19 14:56:32]') AND eintersects(attime(f.trip, timestamptz '[2023-11-19 14:56:32]'), b.geom) GROUP BY b.name;
  params:
  - '2023-11-19 14:56:32'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Warendorf' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-12-24 05:07:26, 2023-12-24 23:00:16]') AND eintersects(attime(f.trip, tstzspan '[2023-12-24 05:07:26, 2023-12-24 23:00:16]'), k.geom);
  params:
  - - '2023-12-24 05:07:26'
    - '2023-12-24 23:00:16'
  - Krs Warendorf
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-11-11 10:32:57]') AND eintersects(attime(f.trip, timestamptz '[2023-11-11 10:32:57]'), b.geom) GROUP BY b.name;
  params:
  - '2023-11-11 10:32:57'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-11-29 11:50:45]') AND eintersects(attime(f.trip, timestamptz '[2023-11-29 11:50:45]'), b.geom) GROUP BY b.name;
  params:
  - '2023-11-29 11:50:45'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Unna' AND f.trip && stbox(k.geom, tstzspan '[2023-01-01 00:00:01, 2023-01-09 23:04:12]') AND eintersects(attime(f.trip, tstzspan '[2023-01-01 00:00:01, 2023-01-09 23:04:12]'), k.geom);
  params:
  - - '2023-01-01 00:00:01'
    - '2023-01-09 23:04:12'
  - Krs Unna
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Oberhausen' AND f.trip && stbox(k.geom, tstzspan '[2023-10-09 04:19:46, 2023-10-21 01:30:48]') AND eintersects(attime(f.trip, tstzspan '[2023-10-09 04:19:46, 2023-10-21 01:30:48]'), k.geom);
  params:
  - - '2023-10-09 04:19:46'
    - '2023-10-21 01:30:48'
  - Krs Oberhausen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-25 20:28:45, 2023-05-29 07:01:23]') #< 870 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-25 20:28:45, 2023-05-29 07:01:23]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-05-25 20:28:45, 2023-05-29 07:01:23]') WHERE g.name = 'Gem Everswinkel' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-25 20:28:45, 2023-05-29 07:01:23]') #< 870 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-25 20:28:45, 2023-05-29 07:01:23]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-05-25 20:28:45'
    - '2023-05-29 07:01:23'
  - Gem Everswinkel
  - 870
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-08-18 09:01:08, 2023-08-27 00:49:33]'), c.geom, 4.902807298104783e-06) WHERE c.name = 'Alsdorf' AND f.trip && tstzspan '[2023-08-18 09:01:08, 2023-08-27 00:49:33]';
  params:
  - - '2023-08-18 09:01:08'
    - '2023-08-27 00:49:33'
  - Alsdorf
  - 4.902807298104783e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-11-16 00:37:11]') AND eintersects(attime(f.trip, timestamptz '[2023-11-16 00:37:11]'), b.geom) GROUP BY b.name;
  params:
  - '2023-11-16 00:37:11'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-08-28 22:49:36, 2023-09-04 22:45:21]'), c.geom, 1.0854819180763365e-05) WHERE c.name = 'Alsdorf' AND f.trip && tstzspan '[2023-08-28 22:49:36, 2023-09-04 22:45:21]';
  params:
  - - '2023-08-28 22:49:36'
    - '2023-09-04 22:45:21'
  - Alsdorf
  - 1.0854819180763365e-05
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Duesseldorf' AND f.trip && stbox(k.geom, tstzspan '[2023-02-14 23:34:16, 2023-02-18 14:28:18]') AND eintersects(attime(f.trip, tstzspan '[2023-02-14 23:34:16, 2023-02-18 14:28:18]'), k.geom);
  params:
  - - '2023-02-14 23:34:16'
    - '2023-02-18 14:28:18'
  - Krs Duesseldorf
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-08-23 21:42:15]') AND eintersects(attime(f.trip, timestamptz '[2023-08-23 21:42:15]'), b.geom) GROUP BY b.name;
  params:
  - '2023-08-23 21:42:15'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-01-13 17:15:08]') AND eintersects(attime(f.trip, timestamptz '[2023-01-13 17:15:08]'), b.geom) GROUP BY b.name;
  params:
  - '2023-01-13 17:15:08'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Herne' AND f.trip && stbox(k.geom, tstzspan '[2023-04-27 03:53:55, 2023-05-07 09:39:46]') AND eintersects(attime(f.trip, tstzspan '[2023-04-27 03:53:55, 2023-05-07 09:39:46]'), k.geom);
  params:
  - - '2023-04-27 03:53:55'
    - '2023-05-07 09:39:46'
  - Krs Herne
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-09-26 02:17:52]') AND eintersects(attime(f.trip, timestamptz '[2023-09-26 02:17:52]'), b.geom) GROUP BY b.name;
  params:
  - '2023-09-26 02:17:52'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-02-13 12:43:04]') AND eintersects(attime(f.trip, timestamptz '[2023-02-13 12:43:04]'), b.geom) GROUP BY b.name;
  params:
  - '2023-02-13 12:43:04'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-29 19:21:33, 2023-04-08 17:17:47]') #< 680 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-29 19:21:33, 2023-04-08 17:17:47]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-03-29 19:21:33, 2023-04-08 17:17:47]') WHERE g.name = 'Gem Lennestadt' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-29 19:21:33, 2023-04-08 17:17:47]') #< 680 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-29 19:21:33, 2023-04-08 17:17:47]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-03-29 19:21:33'
    - '2023-04-08 17:17:47'
  - Gem Lennestadt
  - 680
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-04'::timestamp, DATE '2023-08-04' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Mettmann' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-08-04'
  - Gem Mettmann
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-03-30 13:31:31]') AND eintersects(attime(f.trip, timestamptz '[2023-03-30 13:31:31]'), b.geom) GROUP BY b.name;
  params:
  - '2023-03-30 13:31:31'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Solingen' AND f.trip && stbox(k.geom, tstzspan '[2023-09-03 08:47:39, 2023-09-06 23:35:34]') AND eintersects(attime(f.trip, tstzspan '[2023-09-03 08:47:39, 2023-09-06 23:35:34]'), k.geom);
  params:
  - - '2023-09-03 08:47:39'
    - '2023-09-06 23:35:34'
  - Krs Solingen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Euskirchen' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-08-04 03:51:52, 2023-08-04 20:53:05]') AND eintersects(attime(f.trip, tstzspan '[2023-08-04 03:51:52, 2023-08-04 20:53:05]'), k.geom);
  params:
  - - '2023-08-04 03:51:52'
    - '2023-08-04 20:53:05'
  - Krs Euskirchen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Bonn' AND f.trip && stbox(k.geom, tstzspan '[2023-02-28 01:31:10, 2023-03-09 10:53:44]') AND eintersects(attime(f.trip, tstzspan '[2023-02-28 01:31:10, 2023-03-09 10:53:44]'), k.geom);
  params:
  - - '2023-02-28 01:31:10'
    - '2023-03-09 10:53:44'
  - Krs Bonn
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-04-29 03:32:10]') AND eintersects(attime(f.trip, timestamptz '[2023-04-29 03:32:10]'), b.geom) GROUP BY b.name;
  params:
  - '2023-04-29 03:32:10'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-08-06 12:36:35]') AND eintersects(attime(f.trip, timestamptz '[2023-08-06 12:36:35]'), b.geom) GROUP BY b.name;
  params:
  - '2023-08-06 12:36:35'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-03-31 15:15:23]') AND eintersects(attime(f.trip, timestamptz '[2023-03-31 15:15:23]'), b.geom) GROUP BY b.name;
  params:
  - '2023-03-31 15:15:23'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-04-09 07:10:13]') AND eintersects(attime(f.trip, timestamptz '[2023-04-09 07:10:13]'), b.geom) GROUP BY b.name;
  params:
  - '2023-04-09 07:10:13'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-01-23 18:35:59]') AND eintersects(attime(f.trip, timestamptz '[2023-01-23 18:35:59]'), b.geom) GROUP BY b.name;
  params:
  - '2023-01-23 18:35:59'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Bielefeld' AND f.trip && stbox(k.geom, tstzspan '[2023-03-08 19:00:53, 2023-03-22 18:39:03]') AND eintersects(attime(f.trip, tstzspan '[2023-03-08 19:00:53, 2023-03-22 18:39:03]'), k.geom);
  params:
  - - '2023-03-08 19:00:53'
    - '2023-03-22 18:39:03'
  - Krs Bielefeld
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-26 14:46:47, 2023-08-02 16:47:27]') #< 790 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-26 14:46:47, 2023-08-02 16:47:27]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-07-26 14:46:47, 2023-08-02 16:47:27]') WHERE g.name = 'Gem Marienmuenster' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-26 14:46:47, 2023-08-02 16:47:27]') #< 790 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-26 14:46:47, 2023-08-02 16:47:27]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-07-26 14:46:47'
    - '2023-08-02 16:47:27'
  - Gem Marienmuenster
  - 790
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Hoexter' AND f.trip && stbox(k.geom, tstzspan '[2023-04-06 19:01:11, 2023-04-13 20:38:23]') AND eintersects(attime(f.trip, tstzspan '[2023-04-06 19:01:11, 2023-04-13 20:38:23]'), k.geom);
  params:
  - - '2023-04-06 19:01:11'
    - '2023-04-13 20:38:23'
  - Krs Hoexter
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-11-22 04:45:58]') AND eintersects(attime(f.trip, timestamptz '[2023-11-22 04:45:58]'), b.geom) GROUP BY b.name;
  params:
  - '2023-11-22 04:45:58'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-02 21:40:12, 2023-10-05 15:50:02]'), c.geom, 7.273101124950583e-06) WHERE c.name = 'Zuelpich' AND f.trip && tstzspan '[2023-10-02 21:40:12, 2023-10-05 15:50:02]';
  params:
  - - '2023-10-02 21:40:12'
    - '2023-10-05 15:50:02'
  - Zuelpich
  - 7.273101124950583e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-16 20:42:40, 2023-03-26 06:59:42]'), c.geom, 8.398356280620984e-06) WHERE c.name = 'Bad Wuennenberg' AND f.trip && tstzspan '[2023-03-16 20:42:40, 2023-03-26 06:59:42]';
  params:
  - - '2023-03-16 20:42:40'
    - '2023-03-26 06:59:42'
  - Bad Wuennenberg
  - 8.398356280620984e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-02-09 20:16:43, 2023-02-22 16:45:46]') #< 650 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-02-09 20:16:43, 2023-02-22 16:45:46]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-02-09 20:16:43, 2023-02-22 16:45:46]') WHERE g.name = 'Gem Neunkirchen-Seelscheid' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-02-09 20:16:43, 2023-02-22 16:45:46]') #< 650 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-02-09 20:16:43, 2023-02-22 16:45:46]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-02-09 20:16:43'
    - '2023-02-22 16:45:46'
  - Gem Neunkirchen-Seelscheid
  - 650
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-28 21:08:04, 2023-11-12 01:54:34]'), c.geom, 1.402039519867146e-05) WHERE c.name = 'Nettetal' AND f.trip && tstzspan '[2023-10-28 21:08:04, 2023-11-12 01:54:34]';
  params:
  - - '2023-10-28 21:08:04'
    - '2023-11-12 01:54:34'
  - Nettetal
  - 1.402039519867146e-05
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-02-22'::timestamp, DATE '2023-02-22' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Schmallenberg' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-02-22'
  - Gem Schmallenberg
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-12-01 23:49:44]') AND eintersects(attime(f.trip, timestamptz '[2023-12-01 23:49:44]'), b.geom) GROUP BY b.name;
  params:
  - '2023-12-01 23:49:44'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-19 01:50:15, 2023-10-25 02:18:04]') #< 790 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-19 01:50:15, 2023-10-25 02:18:04]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-10-19 01:50:15, 2023-10-25 02:18:04]') WHERE g.name = 'Gem Wuerselen' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-10-19 01:50:15, 2023-10-25 02:18:04]') #< 790 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-10-19 01:50:15, 2023-10-25 02:18:04]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-10-19 01:50:15'
    - '2023-10-25 02:18:04'
  - Gem Wuerselen
  - 790
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-02-17 19:04:15]') AND eintersects(attime(f.trip, timestamptz '[2023-02-17 19:04:15]'), b.geom) GROUP BY b.name;
  params:
  - '2023-02-17 19:04:15'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-06-30 06:34:57]') AND eintersects(attime(f.trip, timestamptz '[2023-06-30 06:34:57]'), b.geom) GROUP BY b.name;
  params:
  - '2023-06-30 06:34:57'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Remscheid' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-05-02 20:47:03, 2023-05-04 08:36:07]') AND eintersects(attime(f.trip, tstzspan '[2023-05-02 20:47:03, 2023-05-04 08:36:07]'), k.geom);
  params:
  - - '2023-05-02 20:47:03'
    - '2023-05-04 08:36:07'
  - Krs Remscheid
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-28'::timestamp, DATE '2023-08-28' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Ense' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-08-28'
  - Gem Ense
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-09 14:07:27, 2023-07-18 15:50:46]') #< 880 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-09 14:07:27, 2023-07-18 15:50:46]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-07-09 14:07:27, 2023-07-18 15:50:46]') WHERE g.name = 'Gem Dortmund' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-09 14:07:27, 2023-07-18 15:50:46]') #< 880 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-09 14:07:27, 2023-07-18 15:50:46]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-07-09 14:07:27'
    - '2023-07-18 15:50:46'
  - Gem Dortmund
  - 880
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-02-11 03:46:33, 2023-02-21 10:42:50]') #< 670 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-02-11 03:46:33, 2023-02-21 10:42:50]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-02-11 03:46:33, 2023-02-21 10:42:50]') WHERE g.name = 'Gem Muelheim an der Ruhr' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-02-11 03:46:33, 2023-02-21 10:42:50]') #< 670 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-02-11 03:46:33, 2023-02-21 10:42:50]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-02-11 03:46:33'
    - '2023-02-21 10:42:50'
  - Gem Muelheim an der Ruhr
  - 670
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-03 19:26:02, 2023-03-12 08:26:39]') #< 1260 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-03 19:26:02, 2023-03-12 08:26:39]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-03-03 19:26:02, 2023-03-12 08:26:39]') WHERE g.name = 'Gem Kreuztal' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-03 19:26:02, 2023-03-12 08:26:39]') #< 1260 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-03 19:26:02, 2023-03-12 08:26:39]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-03-03 19:26:02'
    - '2023-03-12 08:26:39'
  - Gem Kreuztal
  - 1260
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Muelheim a.d. Ruhr' AND f.trip && stbox(k.geom, tstzspan '[2023-01-01 00:00:01, 2023-01-11 04:46:30]') AND eintersects(attime(f.trip, tstzspan '[2023-01-01 00:00:01, 2023-01-11 04:46:30]'), k.geom);
  params:
  - - '2023-01-01 00:00:01'
    - '2023-01-11 04:46:30'
  - Krs Muelheim a.d. Ruhr
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Kleve' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-03-21 10:55:09, 2023-03-23 06:55:27]') AND eintersects(attime(f.trip, tstzspan '[2023-03-21 10:55:09, 2023-03-23 06:55:27]'), k.geom);
  params:
  - - '2023-03-21 10:55:09'
    - '2023-03-23 06:55:27'
  - Krs Kleve
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-10-18 17:35:11]') AND eintersects(attime(f.trip, timestamptz '[2023-10-18 17:35:11]'), b.geom) GROUP BY b.name;
  params:
  - '2023-10-18 17:35:11'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Bottrop' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-01-18 18:11:27, 2023-01-19 03:29:29]') AND eintersects(attime(f.trip, tstzspan '[2023-01-18 18:11:27, 2023-01-19 03:29:29]'), k.geom);
  params:
  - - '2023-01-18 18:11:27'
    - '2023-01-19 03:29:29'
  - Krs Bottrop
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-01-01 00:00:01, 2023-01-06 00:25:23]'), c.geom, 1.3408526058471033e-05) WHERE c.name = 'Nideggen' AND f.trip && tstzspan '[2023-01-01 00:00:01, 2023-01-06 00:25:23]';
  params:
  - - '2023-01-01 00:00:01'
    - '2023-01-06 00:25:23'
  - Nideggen
  - 1.3408526058471033e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-29 09:33:38, 2023-08-10 00:48:51]') #< 1110 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-29 09:33:38, 2023-08-10 00:48:51]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-07-29 09:33:38, 2023-08-10 00:48:51]') WHERE g.name = 'Gem Dinslaken' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-29 09:33:38, 2023-08-10 00:48:51]') #< 1110 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-29 09:33:38, 2023-08-10 00:48:51]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-07-29 09:33:38'
    - '2023-08-10 00:48:51'
  - Gem Dinslaken
  - 1110
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-08'::timestamp, DATE '2023-08-08' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Essen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-08-08'
  - Gem Essen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Soest' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-03-28 13:28:39, 2023-03-29 03:12:20]') AND eintersects(attime(f.trip, tstzspan '[2023-03-28 13:28:39, 2023-03-29 03:12:20]'), k.geom);
  params:
  - - '2023-03-28 13:28:39'
    - '2023-03-29 03:12:20'
  - Krs Soest
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-01'::timestamp, DATE '2023-10-01' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Vreden' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-10-01'
  - Gem Vreden
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-12-30 18:20:58, 2023-12-31 23:59:59]') #< 710 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-12-30 18:20:58, 2023-12-31 23:59:59]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-12-30 18:20:58, 2023-12-31 23:59:59]') WHERE g.name = 'Gem Nieheim' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-12-30 18:20:58, 2023-12-31 23:59:59]') #< 710 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-12-30 18:20:58, 2023-12-31 23:59:59]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-12-30 18:20:58'
    - '2023-12-31 23:59:59'
  - Gem Nieheim
  - 710
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-07-29 01:47:34]') AND eintersects(attime(f.trip, timestamptz '[2023-07-29 01:47:34]'), b.geom) GROUP BY b.name;
  params:
  - '2023-07-29 01:47:34'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Recklinghausen' AND f.trip && stbox(k.geom, tstzspan '[2023-06-29 10:26:57, 2023-07-04 21:29:22]') AND eintersects(attime(f.trip, tstzspan '[2023-06-29 10:26:57, 2023-07-04 21:29:22]'), k.geom);
  params:
  - - '2023-06-29 10:26:57'
    - '2023-07-04 21:29:22'
  - Krs Recklinghausen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Koeln' AND f.trip && stbox(k.geom, tstzspan '[2023-12-16 07:07:40, 2023-12-20 08:29:58]') AND eintersects(attime(f.trip, tstzspan '[2023-12-16 07:07:40, 2023-12-20 08:29:58]'), k.geom);
  params:
  - - '2023-12-16 07:07:40'
    - '2023-12-20 08:29:58'
  - Krs Koeln
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-11'::timestamp, DATE '2023-03-11' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Datteln' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-03-11'
  - Gem Datteln
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-09-12 12:42:18, 2023-09-24 11:14:43]'), c.geom, 1.1795885102403807e-05) WHERE c.name = 'Espelkamp' AND f.trip && tstzspan '[2023-09-12 12:42:18, 2023-09-24 11:14:43]';
  params:
  - - '2023-09-12 12:42:18'
    - '2023-09-24 11:14:43'
  - Espelkamp
  - 1.1795885102403807e-05
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-28'::timestamp, DATE '2023-04-28' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Drensteinfurt' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-04-28'
  - Gem Drensteinfurt
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-05 21:25:22, 2023-03-20 02:48:58]'), c.geom, 4.914770224936562e-06) WHERE c.name = 'Gescher' AND f.trip && tstzspan '[2023-03-05 21:25:22, 2023-03-20 02:48:58]';
  params:
  - - '2023-03-05 21:25:22'
    - '2023-03-20 02:48:58'
  - Gescher
  - 4.914770224936562e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Mettmann' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-10-31 07:25:33, 2023-10-31 10:35:10]') AND eintersects(attime(f.trip, tstzspan '[2023-10-31 07:25:33, 2023-10-31 10:35:10]'), k.geom);
  params:
  - - '2023-10-31 07:25:33'
    - '2023-10-31 10:35:10'
  - Krs Mettmann
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-28 15:58:18, 2023-04-02 22:13:39]') #< 1260 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-28 15:58:18, 2023-04-02 22:13:39]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-03-28 15:58:18, 2023-04-02 22:13:39]') WHERE g.name = 'Gem Detmold' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-28 15:58:18, 2023-04-02 22:13:39]') #< 1260 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-28 15:58:18, 2023-04-02 22:13:39]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-03-28 15:58:18'
    - '2023-04-02 22:13:39'
  - Gem Detmold
  - 1260
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Guetersloh' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-08-06 07:31:56, 2023-08-08 03:00:14]') AND eintersects(attime(f.trip, tstzspan '[2023-08-06 07:31:56, 2023-08-08 03:00:14]'), k.geom);
  params:
  - - '2023-08-06 07:31:56'
    - '2023-08-08 03:00:14'
  - Krs Guetersloh
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Soest' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-02-15 16:53:09, 2023-02-16 04:18:30]') AND eintersects(attime(f.trip, tstzspan '[2023-02-15 16:53:09, 2023-02-16 04:18:30]'), k.geom);
  params:
  - - '2023-02-15 16:53:09'
    - '2023-02-16 04:18:30'
  - Krs Soest
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-08-09 10:08:33]') AND eintersects(attime(f.trip, timestamptz '[2023-08-09 10:08:33]'), b.geom) GROUP BY b.name;
  params:
  - '2023-08-09 10:08:33'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-14'::timestamp, DATE '2023-04-14' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Rheurdt' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-04-14'
  - Gem Rheurdt
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-13 00:46:57, 2023-09-15 17:00:44]') #< 530 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-13 00:46:57, 2023-09-15 17:00:44]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-09-13 00:46:57, 2023-09-15 17:00:44]') WHERE g.name = 'Gem Bad Berleburg' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-13 00:46:57, 2023-09-15 17:00:44]') #< 530 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-13 00:46:57, 2023-09-15 17:00:44]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-09-13 00:46:57'
    - '2023-09-15 17:00:44'
  - Gem Bad Berleburg
  - 530
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-20'::timestamp, DATE '2023-11-20' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Pulheim' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-11-20'
  - Gem Pulheim
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Hoexter' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-08-28 04:45:10, 2023-08-29 05:39:01]') AND eintersects(attime(f.trip, tstzspan '[2023-08-28 04:45:10, 2023-08-29 05:39:01]'), k.geom);
  params:
  - - '2023-08-28 04:45:10'
    - '2023-08-29 05:39:01'
  - Krs Hoexter
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-02-27 04:34:29, 2023-03-10 06:42:51]'), c.geom, 6.4631324886749854e-06) WHERE c.name = 'Hoerstel' AND f.trip && tstzspan '[2023-02-27 04:34:29, 2023-03-10 06:42:51]';
  params:
  - - '2023-02-27 04:34:29'
    - '2023-03-10 06:42:51'
  - Hoerstel
  - 6.4631324886749854e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Leverkusen' AND f.trip && stbox(k.geom, tstzspan '[2023-06-11 22:16:22, 2023-06-21 10:50:49]') AND eintersects(attime(f.trip, tstzspan '[2023-06-11 22:16:22, 2023-06-21 10:50:49]'), k.geom);
  params:
  - - '2023-06-11 22:16:22'
    - '2023-06-21 10:50:49'
  - Krs Leverkusen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Remscheid' AND f.trip && stbox(k.geom, tstzspan '[2023-06-26 12:49:30, 2023-07-07 05:50:18]') AND eintersects(attime(f.trip, tstzspan '[2023-06-26 12:49:30, 2023-07-07 05:50:18]'), k.geom);
  params:
  - - '2023-06-26 12:49:30'
    - '2023-07-07 05:50:18'
  - Krs Remscheid
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-06-13 04:46:17]') AND eintersects(attime(f.trip, timestamptz '[2023-06-13 04:46:17]'), b.geom) GROUP BY b.name;
  params:
  - '2023-06-13 04:46:17'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-05-18 16:47:51]') AND eintersects(attime(f.trip, timestamptz '[2023-05-18 16:47:51]'), b.geom) GROUP BY b.name;
  params:
  - '2023-05-18 16:47:51'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-04 20:03:55, 2023-07-16 05:53:35]') #< 1150 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-04 20:03:55, 2023-07-16 05:53:35]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-07-04 20:03:55, 2023-07-16 05:53:35]') WHERE g.name = 'Gem Brilon' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-07-04 20:03:55, 2023-07-16 05:53:35]') #< 1150 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-07-04 20:03:55, 2023-07-16 05:53:35]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-07-04 20:03:55'
    - '2023-07-16 05:53:35'
  - Gem Brilon
  - 1150
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-04-26 04:18:20, 2023-05-10 13:11:09]') #< 1390 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-04-26 04:18:20, 2023-05-10 13:11:09]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-04-26 04:18:20, 2023-05-10 13:11:09]') WHERE g.name = 'Gem Menden (Sauerland)' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-04-26 04:18:20, 2023-05-10 13:11:09]') #< 1390 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-04-26 04:18:20, 2023-05-10 13:11:09]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-04-26 04:18:20'
    - '2023-05-10 13:11:09'
  - Gem Menden (Sauerland)
  - 1390
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-07-01 07:22:14, 2023-07-09 16:03:31]'), c.geom, 7.936568494671043e-06) WHERE c.name = 'Wuelfrath' AND f.trip && tstzspan '[2023-07-01 07:22:14, 2023-07-09 16:03:31]';
  params:
  - - '2023-07-01 07:22:14'
    - '2023-07-09 16:03:31'
  - Wuelfrath
  - 7.936568494671043e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Hochsauerlandkreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-10-13 06:19:56, 2023-10-13 18:03:22]') AND eintersects(attime(f.trip, tstzspan '[2023-10-13 06:19:56, 2023-10-13 18:03:22]'), k.geom);
  params:
  - - '2023-10-13 06:19:56'
    - '2023-10-13 18:03:22'
  - Krs Hochsauerlandkreis
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-06-09 23:53:43, 2023-06-24 18:03:34]') #< 1130 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-06-09 23:53:43, 2023-06-24 18:03:34]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-06-09 23:53:43, 2023-06-24 18:03:34]') WHERE g.name = 'Gem Meschede' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-06-09 23:53:43, 2023-06-24 18:03:34]') #< 1130 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-06-09 23:53:43, 2023-06-24 18:03:34]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-06-09 23:53:43'
    - '2023-06-24 18:03:34'
  - Gem Meschede
  - 1130
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-17 05:47:21, 2023-03-23 03:30:06]'), c.geom, 7.252245511333309e-06) WHERE c.name = 'Coesfeld' AND f.trip && tstzspan '[2023-03-17 05:47:21, 2023-03-23 03:30:06]';
  params:
  - - '2023-03-17 05:47:21'
    - '2023-03-23 03:30:06'
  - Coesfeld
  - 7.252245511333309e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-06-11 23:06:19]') AND eintersects(attime(f.trip, timestamptz '[2023-06-11 23:06:19]'), b.geom) GROUP BY b.name;
  params:
  - '2023-06-11 23:06:19'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Mettmann' AND f.trip && stbox(k.geom, tstzspan '[2023-03-12 23:07:00, 2023-03-25 07:32:25]') AND eintersects(attime(f.trip, tstzspan '[2023-03-12 23:07:00, 2023-03-25 07:32:25]'), k.geom);
  params:
  - - '2023-03-12 23:07:00'
    - '2023-03-25 07:32:25'
  - Krs Mettmann
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Minden-Luebbecke' AND f.trip && stbox(k.geom, tstzspan '[2023-01-08 09:46:04, 2023-01-17 05:51:30]') AND eintersects(attime(f.trip, tstzspan '[2023-01-08 09:46:04, 2023-01-17 05:51:30]'), k.geom);
  params:
  - - '2023-01-08 09:46:04'
    - '2023-01-17 05:51:30'
  - Krs Minden-Luebbecke
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-07'::timestamp, DATE '2023-06-07' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Ruethen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-06-07'
  - Gem Ruethen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-01-20 15:46:16, 2023-01-24 15:25:01]'), c.geom, 3.7997911490506665e-06) WHERE c.name = 'Bueren' AND f.trip && tstzspan '[2023-01-20 15:46:16, 2023-01-24 15:25:01]';
  params:
  - - '2023-01-20 15:46:16'
    - '2023-01-24 15:25:01'
  - Bueren
  - 3.7997911490506665e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-31 20:39:17, 2023-11-06 11:28:46]'), c.geom, 1.535709944781481e-05) WHERE c.name = 'Herdecke' AND f.trip && tstzspan '[2023-10-31 20:39:17, 2023-11-06 11:28:46]';
  params:
  - - '2023-10-31 20:39:17'
    - '2023-11-06 11:28:46'
  - Herdecke
  - 1.535709944781481e-05
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-02-01 10:45:50]') AND eintersects(attime(f.trip, timestamptz '[2023-02-01 10:45:50]'), b.geom) GROUP BY b.name;
  params:
  - '2023-02-01 10:45:50'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-12-27'::timestamp, DATE '2023-12-27' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Ennepetal' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-12-27'
  - Gem Ennepetal
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-15 11:13:37, 2023-03-28 15:49:26]') #< 1000 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-15 11:13:37, 2023-03-28 15:49:26]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-03-15 11:13:37, 2023-03-28 15:49:26]') WHERE g.name = 'Gem Erndtebrueck' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-15 11:13:37, 2023-03-28 15:49:26]') #< 1000 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-15 11:13:37, 2023-03-28 15:49:26]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-03-15 11:13:37'
    - '2023-03-28 15:49:26'
  - Gem Erndtebrueck
  - 1000
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-02-03'::timestamp, DATE '2023-02-03' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Lohmar' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-02-03'
  - Gem Lohmar
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-08-17 02:10:19]') AND eintersects(attime(f.trip, timestamptz '[2023-08-17 02:10:19]'), b.geom) GROUP BY b.name;
  params:
  - '2023-08-17 02:10:19'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Staedteregion Aachen' AND f.trip && stbox(k.geom, tstzspan '[2023-07-31 10:44:26, 2023-08-11 17:14:48]') AND eintersects(attime(f.trip, tstzspan '[2023-07-31 10:44:26, 2023-08-11 17:14:48]'), k.geom);
  params:
  - - '2023-07-31 10:44:26'
    - '2023-08-11 17:14:48'
  - Krs Staedteregion Aachen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Herford' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-11-04 08:17:28, 2023-11-05 23:46:13]') AND eintersects(attime(f.trip, tstzspan '[2023-11-04 08:17:28, 2023-11-05 23:46:13]'), k.geom);
  params:
  - - '2023-11-04 08:17:28'
    - '2023-11-05 23:46:13'
  - Krs Herford
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-29 01:43:12, 2023-11-11 09:15:57]'), c.geom, 1.4908803178679039e-05) WHERE c.name = 'Ruethen' AND f.trip && tstzspan '[2023-10-29 01:43:12, 2023-11-11 09:15:57]';
  params:
  - - '2023-10-29 01:43:12'
    - '2023-11-11 09:15:57'
  - Ruethen
  - 1.4908803178679039e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-16 14:04:13, 2023-05-28 08:59:39]') #< 1030 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-16 14:04:13, 2023-05-28 08:59:39]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-05-16 14:04:13, 2023-05-28 08:59:39]') WHERE g.name = 'Gem Preu?sch Oldendorf' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-16 14:04:13, 2023-05-28 08:59:39]') #< 1030 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-16 14:04:13, 2023-05-28 08:59:39]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-05-16 14:04:13'
    - '2023-05-28 08:59:39'
  - Gem Preu?sch Oldendorf
  - 1030
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-03-31 12:05:30, 2023-04-10 02:17:10]'), c.geom, 1.4502537261333928e-05) WHERE c.name = 'Lohmar' AND f.trip && tstzspan '[2023-03-31 12:05:30, 2023-04-10 02:17:10]';
  params:
  - - '2023-03-31 12:05:30'
    - '2023-04-10 02:17:10'
  - Lohmar
  - 1.4502537261333928e-05
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-09-16 07:23:16, 2023-09-22 10:31:02]'), c.geom, 4.818024108123425e-06) WHERE c.name = 'Herne city' AND f.trip && tstzspan '[2023-09-16 07:23:16, 2023-09-22 10:31:02]';
  params:
  - - '2023-09-16 07:23:16'
    - '2023-09-22 10:31:02'
  - Herne city
  - 4.818024108123425e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Dueren' AND f.trip && stbox(k.geom, tstzspan '[2023-01-26 07:23:10, 2023-02-09 15:11:39]') AND eintersects(attime(f.trip, tstzspan '[2023-01-26 07:23:10, 2023-02-09 15:11:39]'), k.geom);
  params:
  - - '2023-01-26 07:23:10'
    - '2023-02-09 15:11:39'
  - Krs Dueren
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-25 12:50:11, 2023-04-02 19:01:05]') #< 1440 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-25 12:50:11, 2023-04-02 19:01:05]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-03-25 12:50:11, 2023-04-02 19:01:05]') WHERE g.name = 'Gem Bielefeld' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-03-25 12:50:11, 2023-04-02 19:01:05]') #< 1440 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-03-25 12:50:11, 2023-04-02 19:01:05]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-03-25 12:50:11'
    - '2023-04-02 19:01:05'
  - Gem Bielefeld
  - 1440
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-05-15 06:24:33, 2023-05-25 05:07:33]'), c.geom, 9.173563475525345e-06) WHERE c.name = 'Luedinghausen' AND f.trip && tstzspan '[2023-05-15 06:24:33, 2023-05-25 05:07:33]';
  params:
  - - '2023-05-15 06:24:33'
    - '2023-05-25 05:07:33'
  - Luedinghausen
  - 9.173563475525345e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Rhein-Erft-Kreis' AND f.trip && stbox(k.geom, tstzspan '[2023-02-09 23:40:34, 2023-02-13 04:17:44]') AND eintersects(attime(f.trip, tstzspan '[2023-02-09 23:40:34, 2023-02-13 04:17:44]'), k.geom);
  params:
  - - '2023-02-09 23:40:34'
    - '2023-02-13 04:17:44'
  - Krs Rhein-Erft-Kreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flights AS f ON eDwithin(attime(f.trip, tstzspan '[2023-10-20 21:46:05, 2023-10-26 13:00:46]'), c.geom, 1.5512484510789613e-05) WHERE c.name = 'Ennigerloh' AND f.trip && tstzspan '[2023-10-20 21:46:05, 2023-10-26 13:00:46]';
  params:
  - - '2023-10-20 21:46:05'
    - '2023-10-26 13:00:46'
  - Ennigerloh
  - 1.5512484510789613e-05
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightid FROM flights f, counties k WHERE k.name = 'Krs Soest' AND f.trip && stbox(k.geom, tstzspan '[2023-11-20 18:24:46, 2023-11-29 00:11:11]') AND eintersects(attime(f.trip, tstzspan '[2023-11-20 18:24:46, 2023-11-29 00:11:11]'), k.geom);
  params:
  - - '2023-11-20 18:24:46'
    - '2023-11-29 00:11:11'
  - Krs Soest
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-01-03'::timestamp, DATE '2023-01-03' + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour') AS start_time) SELECT h.start_time, COUNT(f.flightid) AS active_flights FROM hours h JOIN municipalities g ON g.name = 'Gem Hattingen' LEFT JOIN flights f ON eintersects(attime(f.trip, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')), g.geom) WHERE f.trip && stbox(g.geom, span(h.start_time, h.start_time + INTERVAL '1 hour' - INTERVAL '1 second')) GROUP BY h.start_time ORDER BY h.start_time;
  params:
  - '2023-01-03'
  - Gem Hattingen
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-07-29 08:45:01]') AND eintersects(attime(f.trip, timestamptz '[2023-07-29 08:45:01]'), b.geom) GROUP BY b.name;
  params:
  - '2023-07-29 08:45:01'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |
    SELECT b.name, COUNT (*) FROM flights f, districts b WHERE f.trip && stbox(b.geom, timestamptz '[2023-02-04 12:30:38]') AND eintersects(attime(f.trip, timestamptz '[2023-02-04 12:30:38]'), b.geom) GROUP BY b.name;
  params:
  - '2023-02-04 12:30:38'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Dortmund' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-01-07 10:31:51, 2023-01-07 19:43:28]') AND eintersects(attime(f.trip, tstzspan '[2023-01-07 10:31:51, 2023-01-07 19:43:28]'), k.geom);
  params:
  - - '2023-01-07 10:31:51'
    - '2023-01-07 19:43:28'
  - Krs Dortmund
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-07 02:01:01, 2023-09-09 04:34:24]') #< 1090 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-07 02:01:01, 2023-09-09 04:34:24]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-09-07 02:01:01, 2023-09-09 04:34:24]') WHERE g.name = 'Gem Luebbecke' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-09-07 02:01:01, 2023-09-09 04:34:24]') #< 1090 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-09-07 02:01:01, 2023-09-09 04:34:24]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-09-07 02:01:01'
    - '2023-09-09 04:34:24'
  - Gem Luebbecke
  - 1090
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-22 12:17:59, 2023-06-04 09:49:21]') #< 1500 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-22 12:17:59, 2023-06-04 09:49:21]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-05-22 12:17:59, 2023-06-04 09:49:21]') WHERE g.name = 'Gem Erwitte' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-05-22 12:17:59, 2023-06-04 09:49:21]') #< 1500 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-05-22 12:17:59, 2023-06-04 09:49:21]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-05-22 12:17:59'
    - '2023-06-04 09:49:21'
  - Gem Erwitte
  - 1500
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, f.origin, f.destination, f.airplanetype, duration(whenTrue(attime(f.altitude, tstzspan '[2023-04-26 03:55:47, 2023-05-05 14:05:06]') #< 910 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-04-26 03:55:47, 2023-05-05 14:05:06]'), geometry(g.geom)))) AS totalTimeBelowAltitude FROM municipalities g JOIN flights f ON f.trip && stbox(g.geom, tstzspan '[2023-04-26 03:55:47, 2023-05-05 14:05:06]') WHERE g.name = 'Gem Hoevelhof' AND duration(whenTrue(attime(f.altitude, tstzspan '[2023-04-26 03:55:47, 2023-05-05 14:05:06]') #< 910 & tintersects(attime(tgeompoint(f.trip), tstzspan '[2023-04-26 03:55:47, 2023-05-05 14:05:06]'), geometry(g.geom)))) IS NOT NULL;
  params:
  - - '2023-04-26 03:55:47'
    - '2023-05-05 14:05:06'
  - Gem Hoevelhof
  - 910
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ) SELECT f.flightid, f.airplanetype, f.origin AS origin_airport, a1.City AS origin_city, f.destination AS destination_airport, a2.City AS destination_city FROM flights f JOIN counties k ON k.name = 'Krs Rheinisch-Bergischer Kreis' LEFT JOIN airports a1 ON f.origin = a1.icao LEFT JOIN airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports)) AND f.trip && stbox(k.geom, tstzspan '[2023-02-17 13:04:45, 2023-02-18 03:40:07]') AND eintersects(attime(f.trip, tstzspan '[2023-02-17 13:04:45, 2023-02-18 03:40:07]'), k.geom);
  params:
  - - '2023-02-17 13:04:45'
    - '2023-02-18 03:40:07'
  - Krs Rheinisch-Bergischer Kreis
