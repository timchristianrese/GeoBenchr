- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.4602841739739925e-05) WHERE c.name = 'Spenge' AND f.timestamp BETWEEN '2023-07-31 20:36:34' AND '2023-08-10 07:32:10';
  params:
  - - '2023-07-31 20:36:34'
    - '2023-08-10 07:32:10'
  - Spenge
  - 1.4602841739739925e-05
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 3.8070210022065595e-06) WHERE c.name = 'Oerlinghausen' AND f.timestamp BETWEEN '2023-11-11 13:02:41' AND '2023-11-18 23:21:06';
  params:
  - - '2023-11-11 13:02:41'
    - '2023-11-18 23:21:06'
  - Oerlinghausen
  - 3.8070210022065595e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-04-08 03:58:30' GROUP BY b.name;
  params:
  - '2023-04-08 03:58:30'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-02'::timestamp, DATE '2023-09-02'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Siegen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-09-02'
  - Gem Siegen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Moenchengladbach' WHERE f.timestamp BETWEEN '2023-07-14 19:48:38' AND '2023-07-16 15:39:56' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-07-14 19:48:38'
    - '2023-07-16 15:39:56'
  - Krs Moenchengladbach
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-06-04 21:50:24' GROUP BY b.name;
  params:
  - '2023-06-04 21:50:24'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Rheinisch-Bergischer Kreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-05-19 19:28:55' AND '2023-05-22 13:50:21';
  params:
  - - '2023-05-19 19:28:55'
    - '2023-05-22 13:50:21'
  - Krs Rheinisch-Bergischer Kreis
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Maerkischer Kreis' WHERE f.timestamp BETWEEN '2023-12-15 15:00:56' AND '2023-12-17 04:31:39' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-12-15 15:00:56'
    - '2023-12-17 04:31:39'
  - Krs Maerkischer Kreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 3.7883402605272536e-06) WHERE c.name = 'Hattingen' AND f.timestamp BETWEEN '2023-11-16 11:59:52' AND '2023-11-25 14:17:46';
  params:
  - - '2023-11-16 11:59:52'
    - '2023-11-25 14:17:46'
  - Hattingen
  - 3.7883402605272536e-06
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-12'::timestamp, DATE '2023-05-12'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Saerbeck' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-05-12'
  - Gem Saerbeck
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-12'::timestamp, DATE '2023-06-12'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Siegen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-06-12'
  - Gem Siegen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Huellhorst' AND f.timestamp BETWEEN '2023-01-22 09:11:52' AND '2023-01-29 00:28:37' AND f.altitude < 870 GROUP BY g.name, f.flightid;
  params:
  - - '2023-01-22 09:11:52'
    - '2023-01-29 00:28:37'
  - Gem Huellhorst
  - 870
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Ennepe-Ruhr-Kreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-11-24 03:45:30' AND '2023-12-01 03:10:33';
  params:
  - - '2023-11-24 03:45:30'
    - '2023-12-01 03:10:33'
  - Krs Ennepe-Ruhr-Kreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Steinfurt' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-11-23 03:33:49' AND '2023-11-29 05:24:12';
  params:
  - - '2023-11-23 03:33:49'
    - '2023-11-29 05:24:12'
  - Krs Steinfurt
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-29'::timestamp, DATE '2023-05-29'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Erndtebrueck' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-05-29'
  - Gem Erndtebrueck
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.5134892526543767e-05) WHERE c.name = 'Warburg' AND f.timestamp BETWEEN '2023-03-20 12:43:47' AND '2023-03-29 18:13:42';
  params:
  - - '2023-03-20 12:43:47'
    - '2023-03-29 18:13:42'
  - Warburg
  - 1.5134892526543767e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Datteln' AND f.timestamp BETWEEN '2023-04-29 17:40:48' AND '2023-05-05 01:50:19' AND f.altitude < 1460 GROUP BY g.name, f.flightid;
  params:
  - - '2023-04-29 17:40:48'
    - '2023-05-05 01:50:19'
  - Gem Datteln
  - 1460
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Schwerte' AND f.timestamp BETWEEN '2023-12-19 20:30:53' AND '2023-12-29 17:41:24' AND f.altitude < 1430 GROUP BY g.name, f.flightid;
  params:
  - - '2023-12-19 20:30:53'
    - '2023-12-29 17:41:24'
  - Gem Schwerte
  - 1430
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Straelen' AND f.timestamp BETWEEN '2023-07-21 01:18:45' AND '2023-08-02 21:36:18' AND f.altitude < 1470 GROUP BY g.name, f.flightid;
  params:
  - - '2023-07-21 01:18:45'
    - '2023-08-02 21:36:18'
  - Gem Straelen
  - 1470
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Viersen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-01-07 22:50:15' AND '2023-01-17 06:16:07';
  params:
  - - '2023-01-07 22:50:15'
    - '2023-01-17 06:16:07'
  - Krs Viersen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Rhein-Sieg-Kreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-08-12 07:39:49' AND '2023-08-19 11:51:32';
  params:
  - - '2023-08-12 07:39:49'
    - '2023-08-19 11:51:32'
  - Krs Rhein-Sieg-Kreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Leverkusen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-07-21 03:02:37' AND '2023-07-26 09:15:33';
  params:
  - - '2023-07-21 03:02:37'
    - '2023-07-26 09:15:33'
  - Krs Leverkusen
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-10-07 07:07:03' GROUP BY b.name;
  params:
  - '2023-10-07 07:07:03'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Moers' AND f.timestamp BETWEEN '2023-03-21 20:35:30' AND '2023-03-27 11:02:45' AND f.altitude < 630 GROUP BY g.name, f.flightid;
  params:
  - - '2023-03-21 20:35:30'
    - '2023-03-27 11:02:45'
  - Gem Moers
  - 630
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Guetersloh' AND f.timestamp BETWEEN '2023-11-27 13:34:21' AND '2023-11-29 19:55:53' AND f.altitude < 850 GROUP BY g.name, f.flightid;
  params:
  - - '2023-11-27 13:34:21'
    - '2023-11-29 19:55:53'
  - Gem Guetersloh
  - 850
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-12-29'::timestamp, DATE '2023-12-29'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Meschede' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-12-29'
  - Gem Meschede
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 7.137471732224336e-06) WHERE c.name = 'Lippstadt' AND f.timestamp BETWEEN '2023-09-02 12:51:00' AND '2023-09-16 22:42:50';
  params:
  - - '2023-09-02 12:51:00'
    - '2023-09-16 22:42:50'
  - Lippstadt
  - 7.137471732224336e-06
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-21'::timestamp, DATE '2023-04-21'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Overath' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-04-21'
  - Gem Overath
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-03-04 16:35:18' GROUP BY b.name;
  params:
  - '2023-03-04 16:35:18'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-10-17 02:59:47' GROUP BY b.name;
  params:
  - '2023-10-17 02:59:47'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Oberhausen' AND f.timestamp BETWEEN '2023-08-06 15:59:35' AND '2023-08-19 18:28:20' AND f.altitude < 760 GROUP BY g.name, f.flightid;
  params:
  - - '2023-08-06 15:59:35'
    - '2023-08-19 18:28:20'
  - Gem Oberhausen
  - 760
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Bad Oeynhausen' AND f.timestamp BETWEEN '2023-11-06 16:08:48' AND '2023-11-16 04:43:39' AND f.altitude < 1440 GROUP BY g.name, f.flightid;
  params:
  - - '2023-11-06 16:08:48'
    - '2023-11-16 04:43:39'
  - Gem Bad Oeynhausen
  - 1440
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-01-26 17:02:33' GROUP BY b.name;
  params:
  - '2023-01-26 17:02:33'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-21'::timestamp, DATE '2023-03-21'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Kamen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-03-21'
  - Gem Kamen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Bocholt' AND f.timestamp BETWEEN '2023-10-27 14:16:32' AND '2023-10-30 14:55:30' AND f.altitude < 620 GROUP BY g.name, f.flightid;
  params:
  - - '2023-10-27 14:16:32'
    - '2023-10-30 14:55:30'
  - Gem Bocholt
  - 620
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Hochsauerlandkreis' WHERE f.timestamp BETWEEN '2023-02-11 19:50:15' AND '2023-02-13 06:48:39' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-02-11 19:50:15'
    - '2023-02-13 06:48:39'
  - Krs Hochsauerlandkreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 6.4981525059034765e-06) WHERE c.name = 'Siegburg' AND f.timestamp BETWEEN '2023-09-09 20:24:34' AND '2023-09-19 13:43:45';
  params:
  - - '2023-09-09 20:24:34'
    - '2023-09-19 13:43:45'
  - Siegburg
  - 6.4981525059034765e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.1029232008579841e-05) WHERE c.name = 'Gronau' AND f.timestamp BETWEEN '2023-06-20 00:10:19' AND '2023-06-28 19:32:50';
  params:
  - - '2023-06-20 00:10:19'
    - '2023-06-28 19:32:50'
  - Gronau
  - 1.1029232008579841e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Recklinghausen' WHERE f.timestamp BETWEEN '2023-07-06 21:35:24' AND '2023-07-08 00:19:55' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-07-06 21:35:24'
    - '2023-07-08 00:19:55'
  - Krs Recklinghausen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Neuss' AND f.timestamp BETWEEN '2023-07-30 11:44:24' AND '2023-08-03 17:04:59' AND f.altitude < 500 GROUP BY g.name, f.flightid;
  params:
  - - '2023-07-30 11:44:24'
    - '2023-08-03 17:04:59'
  - Gem Neuss
  - 500
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Heiligenhaus' AND f.timestamp BETWEEN '2023-12-04 21:12:25' AND '2023-12-08 20:09:33' AND f.altitude < 630 GROUP BY g.name, f.flightid;
  params:
  - - '2023-12-04 21:12:25'
    - '2023-12-08 20:09:33'
  - Gem Heiligenhaus
  - 630
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Raesfeld' AND f.timestamp BETWEEN '2023-04-27 01:08:18' AND '2023-05-03 18:21:58' AND f.altitude < 1160 GROUP BY g.name, f.flightid;
  params:
  - - '2023-04-27 01:08:18'
    - '2023-05-03 18:21:58'
  - Gem Raesfeld
  - 1160
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Verl' AND f.timestamp BETWEEN '2023-01-15 05:26:07' AND '2023-01-17 20:08:13' AND f.altitude < 590 GROUP BY g.name, f.flightid;
  params:
  - - '2023-01-15 05:26:07'
    - '2023-01-17 20:08:13'
  - Gem Verl
  - 590
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Huertgenwald' AND f.timestamp BETWEEN '2023-05-17 22:22:02' AND '2023-06-01 02:13:02' AND f.altitude < 750 GROUP BY g.name, f.flightid;
  params:
  - - '2023-05-17 22:22:02'
    - '2023-06-01 02:13:02'
  - Gem Huertgenwald
  - 750
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-02-06'::timestamp, DATE '2023-02-06'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Langenberg' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-02-06'
  - Gem Langenberg
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Rheinisch-Bergischer Kreis' WHERE f.timestamp BETWEEN '2023-07-13 06:55:24' AND '2023-07-13 16:57:16' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-07-13 06:55:24'
    - '2023-07-13 16:57:16'
  - Krs Rheinisch-Bergischer Kreis
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Maerkischer Kreis' WHERE f.timestamp BETWEEN '2023-04-01 16:13:56' AND '2023-04-02 15:01:11' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-04-01 16:13:56'
    - '2023-04-02 15:01:11'
  - Krs Maerkischer Kreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.4836794086324043e-05) WHERE c.name = 'Kamp-Lintfort' AND f.timestamp BETWEEN '2023-05-11 00:20:03' AND '2023-05-19 14:08:00';
  params:
  - - '2023-05-11 00:20:03'
    - '2023-05-19 14:08:00'
  - Kamp-Lintfort
  - 1.4836794086324043e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Hagen' WHERE f.timestamp BETWEEN '2023-08-13 11:16:26' AND '2023-08-15 07:49:14' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-08-13 11:16:26'
    - '2023-08-15 07:49:14'
  - Krs Hagen
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-11-17 17:09:27' GROUP BY b.name;
  params:
  - '2023-11-17 17:09:27'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Gelsenkirchen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-06-29 18:27:38' AND '2023-07-07 12:39:45';
  params:
  - - '2023-06-29 18:27:38'
    - '2023-07-07 12:39:45'
  - Krs Gelsenkirchen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Gummersbach' AND f.timestamp BETWEEN '2023-07-12 06:48:52' AND '2023-07-15 12:55:38' AND f.altitude < 530 GROUP BY g.name, f.flightid;
  params:
  - - '2023-07-12 06:48:52'
    - '2023-07-15 12:55:38'
  - Gem Gummersbach
  - 530
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Anroechte' AND f.timestamp BETWEEN '2023-01-24 11:13:34' AND '2023-02-06 17:41:23' AND f.altitude < 1120 GROUP BY g.name, f.flightid;
  params:
  - - '2023-01-24 11:13:34'
    - '2023-02-06 17:41:23'
  - Gem Anroechte
  - 1120
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Bad Driburg' AND f.timestamp BETWEEN '2023-11-04 23:36:26' AND '2023-11-11 08:27:57' AND f.altitude < 1490 GROUP BY g.name, f.flightid;
  params:
  - - '2023-11-04 23:36:26'
    - '2023-11-11 08:27:57'
  - Gem Bad Driburg
  - 1490
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 5.26967801097463e-06) WHERE c.name = 'Ibbenbueren' AND f.timestamp BETWEEN '2023-12-13 09:51:46' AND '2023-12-16 12:51:13';
  params:
  - - '2023-12-13 09:51:46'
    - '2023-12-16 12:51:13'
  - Ibbenbueren
  - 5.26967801097463e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.2877865692652146e-05) WHERE c.name = 'Bad Berleburg' AND f.timestamp BETWEEN '2023-06-28 22:14:13' AND '2023-07-05 03:21:47';
  params:
  - - '2023-06-28 22:14:13'
    - '2023-07-05 03:21:47'
  - Bad Berleburg
  - 1.2877865692652146e-05
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Heinsberg' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-02-14 15:51:31' AND '2023-02-18 17:28:30';
  params:
  - - '2023-02-14 15:51:31'
    - '2023-02-18 17:28:30'
  - Krs Heinsberg
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-10-14 23:40:25' GROUP BY b.name;
  params:
  - '2023-10-14 23:40:25'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-04'::timestamp, DATE '2023-10-04'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Blomberg' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-10-04'
  - Gem Blomberg
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-02-01 03:28:35' GROUP BY b.name;
  params:
  - '2023-02-01 03:28:35'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Much' AND f.timestamp BETWEEN '2023-05-14 00:59:52' AND '2023-05-23 22:12:15' AND f.altitude < 500 GROUP BY g.name, f.flightid;
  params:
  - - '2023-05-14 00:59:52'
    - '2023-05-23 22:12:15'
  - Gem Much
  - 500
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Menden (Sauerland)' AND f.timestamp BETWEEN '2023-07-25 13:26:01' AND '2023-07-29 09:59:56' AND f.altitude < 1470 GROUP BY g.name, f.flightid;
  params:
  - - '2023-07-25 13:26:01'
    - '2023-07-29 09:59:56'
  - Gem Menden (Sauerland)
  - 1470
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-18'::timestamp, DATE '2023-11-18'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Olpe' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-11-18'
  - Gem Olpe
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Soest' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-01-01 00:00:01' AND '2023-01-07 20:30:08';
  params:
  - - '2023-01-01 00:00:01'
    - '2023-01-07 20:30:08'
  - Krs Soest
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Hagen' AND f.timestamp BETWEEN '2023-03-25 01:10:03' AND '2023-03-29 05:36:03' AND f.altitude < 930 GROUP BY g.name, f.flightid;
  params:
  - - '2023-03-25 01:10:03'
    - '2023-03-29 05:36:03'
  - Gem Hagen
  - 930
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.012126228604958e-05) WHERE c.name = 'Ochtrup' AND f.timestamp BETWEEN '2023-06-24 21:52:34' AND '2023-07-03 15:08:41';
  params:
  - - '2023-06-24 21:52:34'
    - '2023-07-03 15:08:41'
  - Ochtrup
  - 1.012126228604958e-05
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-15'::timestamp, DATE '2023-10-15'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Huenxe' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-10-15'
  - Gem Huenxe
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-28'::timestamp, DATE '2023-10-28'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Velbert' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-10-28'
  - Gem Velbert
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Mettmann' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-05-19 20:38:09' AND '2023-05-23 16:06:50';
  params:
  - - '2023-05-19 20:38:09'
    - '2023-05-23 16:06:50'
  - Krs Mettmann
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Wesel' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-02-18 06:25:06' AND '2023-02-27 05:50:18';
  params:
  - - '2023-02-18 06:25:06'
    - '2023-02-27 05:50:18'
  - Krs Wesel
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Dueren' WHERE f.timestamp BETWEEN '2023-07-03 15:39:49' AND '2023-07-04 20:20:16' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-07-03 15:39:49'
    - '2023-07-04 20:20:16'
  - Krs Dueren
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Unna' WHERE f.timestamp BETWEEN '2023-10-21 17:45:46' AND '2023-10-23 01:54:48' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-10-21 17:45:46'
    - '2023-10-23 01:54:48'
  - Krs Unna
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Hellenthal' AND f.timestamp BETWEEN '2023-06-15 06:01:54' AND '2023-06-21 04:59:54' AND f.altitude < 1440 GROUP BY g.name, f.flightid;
  params:
  - - '2023-06-15 06:01:54'
    - '2023-06-21 04:59:54'
  - Gem Hellenthal
  - 1440
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Duisburg' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-09-05 03:40:06' AND '2023-09-18 08:01:49';
  params:
  - - '2023-09-05 03:40:06'
    - '2023-09-18 08:01:49'
  - Krs Duisburg
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Leverkusen' WHERE f.timestamp BETWEEN '2023-05-18 12:40:41' AND '2023-05-20 02:21:02' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-05-18 12:40:41'
    - '2023-05-20 02:21:02'
  - Krs Leverkusen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 4.288077842216169e-06) WHERE c.name = 'Euskirchen' AND f.timestamp BETWEEN '2023-04-07 08:12:54' AND '2023-04-12 23:21:44';
  params:
  - - '2023-04-07 08:12:54'
    - '2023-04-12 23:21:44'
  - Euskirchen
  - 4.288077842216169e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.0990372255247306e-05) WHERE c.name = 'Wiehl' AND f.timestamp BETWEEN '2023-07-21 19:03:02' AND '2023-07-25 13:58:01';
  params:
  - - '2023-07-21 19:03:02'
    - '2023-07-25 13:58:01'
  - Wiehl
  - 1.0990372255247306e-05
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Mettmann' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-06-08 13:32:14' AND '2023-06-17 10:38:18';
  params:
  - - '2023-06-08 13:32:14'
    - '2023-06-17 10:38:18'
  - Krs Mettmann
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.143578947654011e-05) WHERE c.name = 'Baesweiler' AND f.timestamp BETWEEN '2023-10-10 10:05:43' AND '2023-10-14 07:47:04';
  params:
  - - '2023-10-10 10:05:43'
    - '2023-10-14 07:47:04'
  - Baesweiler
  - 1.143578947654011e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Ennigerloh' AND f.timestamp BETWEEN '2023-08-03 19:48:50' AND '2023-08-11 15:12:55' AND f.altitude < 850 GROUP BY g.name, f.flightid;
  params:
  - - '2023-08-03 19:48:50'
    - '2023-08-11 15:12:55'
  - Gem Ennigerloh
  - 850
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-12-12'::timestamp, DATE '2023-12-12'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Muenster' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-12-12'
  - Gem Muenster
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Guetersloh' AND f.timestamp BETWEEN '2023-11-10 23:54:42' AND '2023-11-14 06:46:24' AND f.altitude < 800 GROUP BY g.name, f.flightid;
  params:
  - - '2023-11-10 23:54:42'
    - '2023-11-14 06:46:24'
  - Gem Guetersloh
  - 800
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Duisburg' AND f.timestamp BETWEEN '2023-12-25 05:53:45' AND '2023-12-29 13:00:41' AND f.altitude < 1310 GROUP BY g.name, f.flightid;
  params:
  - - '2023-12-25 05:53:45'
    - '2023-12-29 13:00:41'
  - Gem Duisburg
  - 1310
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 7.074388699858303e-06) WHERE c.name = 'Olsberg' AND f.timestamp BETWEEN '2023-04-21 07:04:51' AND '2023-04-23 09:41:04';
  params:
  - - '2023-04-21 07:04:51'
    - '2023-04-23 09:41:04'
  - Olsberg
  - 7.074388699858303e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Dueren' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-07-03 13:52:09' AND '2023-07-05 22:50:20';
  params:
  - - '2023-07-03 13:52:09'
    - '2023-07-05 22:50:20'
  - Krs Dueren
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Borken' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-12-15 21:28:18' AND '2023-12-21 16:50:24';
  params:
  - - '2023-12-15 21:28:18'
    - '2023-12-21 16:50:24'
  - Krs Borken
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Oberhausen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-09-16 22:17:26' AND '2023-10-01 11:47:17';
  params:
  - - '2023-09-16 22:17:26'
    - '2023-10-01 11:47:17'
  - Krs Oberhausen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Essen' AND f.timestamp BETWEEN '2023-12-08 06:45:52' AND '2023-12-22 17:04:36' AND f.altitude < 640 GROUP BY g.name, f.flightid;
  params:
  - - '2023-12-08 06:45:52'
    - '2023-12-22 17:04:36'
  - Gem Essen
  - 640
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-09'::timestamp, DATE '2023-06-09'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Huenxe' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-06-09'
  - Gem Huenxe
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-09-16 21:33:32' GROUP BY b.name;
  params:
  - '2023-09-16 21:33:32'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Emmerich am Rhein' AND f.timestamp BETWEEN '2023-05-22 14:36:03' AND '2023-05-30 18:13:52' AND f.altitude < 820 GROUP BY g.name, f.flightid;
  params:
  - - '2023-05-22 14:36:03'
    - '2023-05-30 18:13:52'
  - Gem Emmerich am Rhein
  - 820
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Dueren' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-09-16 10:53:34' AND '2023-09-27 15:07:13';
  params:
  - - '2023-09-16 10:53:34'
    - '2023-09-27 15:07:13'
  - Krs Dueren
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 7.310406728407238e-06) WHERE c.name = 'Ennepetal' AND f.timestamp BETWEEN '2023-01-19 22:21:16' AND '2023-01-23 01:59:15';
  params:
  - - '2023-01-19 22:21:16'
    - '2023-01-23 01:59:15'
  - Ennepetal
  - 7.310406728407238e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Rees' AND f.timestamp BETWEEN '2023-04-29 13:53:24' AND '2023-05-11 11:00:49' AND f.altitude < 1330 GROUP BY g.name, f.flightid;
  params:
  - - '2023-04-29 13:53:24'
    - '2023-05-11 11:00:49'
  - Gem Rees
  - 1330
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Rhein-Sieg-Kreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-06-07 22:46:04' AND '2023-06-10 00:48:22';
  params:
  - - '2023-06-07 22:46:04'
    - '2023-06-10 00:48:22'
  - Krs Rhein-Sieg-Kreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 5.013517488046031e-06) WHERE c.name = 'Versmold' AND f.timestamp BETWEEN '2023-09-11 04:51:17' AND '2023-09-20 08:27:25';
  params:
  - - '2023-09-11 04:51:17'
    - '2023-09-20 08:27:25'
  - Versmold
  - 5.013517488046031e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Coesfeld' WHERE f.timestamp BETWEEN '2023-09-04 11:15:29' AND '2023-09-04 16:07:37' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-09-04 11:15:29'
    - '2023-09-04 16:07:37'
  - Krs Coesfeld
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-01-25 04:55:39' GROUP BY b.name;
  params:
  - '2023-01-25 04:55:39'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Borken' WHERE f.timestamp BETWEEN '2023-08-17 10:51:49' AND '2023-08-17 19:14:39' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-08-17 10:51:49'
    - '2023-08-17 19:14:39'
  - Krs Borken
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Dortmund' WHERE f.timestamp BETWEEN '2023-06-01 12:14:21' AND '2023-06-02 10:08:09' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-06-01 12:14:21'
    - '2023-06-02 10:08:09'
  - Krs Dortmund
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Staedteregion Aachen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-12-16 18:28:15' AND '2023-12-24 14:22:31';
  params:
  - - '2023-12-16 18:28:15'
    - '2023-12-24 14:22:31'
  - Krs Staedteregion Aachen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Remscheid' AND f.timestamp BETWEEN '2023-12-14 09:19:10' AND '2023-12-23 20:13:30' AND f.altitude < 1080 GROUP BY g.name, f.flightid;
  params:
  - - '2023-12-14 09:19:10'
    - '2023-12-23 20:13:30'
  - Gem Remscheid
  - 1080
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-04-06 23:16:11' GROUP BY b.name;
  params:
  - '2023-04-06 23:16:11'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-12-30'::timestamp, DATE '2023-12-30'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Selm' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-12-30'
  - Gem Selm
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Mettmann' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-08-21 16:09:29' AND '2023-08-29 10:27:20';
  params:
  - - '2023-08-21 16:09:29'
    - '2023-08-29 10:27:20'
  - Krs Mettmann
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Saerbeck' AND f.timestamp BETWEEN '2023-10-07 21:03:15' AND '2023-10-21 19:34:58' AND f.altitude < 800 GROUP BY g.name, f.flightid;
  params:
  - - '2023-10-07 21:03:15'
    - '2023-10-21 19:34:58'
  - Gem Saerbeck
  - 800
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-07'::timestamp, DATE '2023-06-07'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Korschenbroich' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-06-07'
  - Gem Korschenbroich
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.0334311199671157e-05) WHERE c.name = 'Luebbecke' AND f.timestamp BETWEEN '2023-09-01 17:14:39' AND '2023-09-15 02:09:42';
  params:
  - - '2023-09-01 17:14:39'
    - '2023-09-15 02:09:42'
  - Luebbecke
  - 1.0334311199671157e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Recklinghausen' WHERE f.timestamp BETWEEN '2023-09-25 09:26:44' AND '2023-09-26 03:20:04' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-09-25 09:26:44'
    - '2023-09-26 03:20:04'
  - Krs Recklinghausen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-01'::timestamp, DATE '2023-11-01'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Hamm' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-11-01'
  - Gem Hamm
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Hochsauerlandkreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-01-01 00:00:01' AND '2023-01-06 17:22:07';
  params:
  - - '2023-01-01 00:00:01'
    - '2023-01-06 17:22:07'
  - Krs Hochsauerlandkreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Dueren' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-06-17 18:01:56' AND '2023-07-01 11:46:30';
  params:
  - - '2023-06-17 18:01:56'
    - '2023-07-01 11:46:30'
  - Krs Dueren
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-01-15 05:04:55' GROUP BY b.name;
  params:
  - '2023-01-15 05:04:55'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Bonn' AND f.timestamp BETWEEN '2023-07-13 01:16:39' AND '2023-07-18 17:46:37' AND f.altitude < 1010 GROUP BY g.name, f.flightid;
  params:
  - - '2023-07-13 01:16:39'
    - '2023-07-18 17:46:37'
  - Gem Bonn
  - 1010
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-08'::timestamp, DATE '2023-10-08'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Wassenberg' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-10-08'
  - Gem Wassenberg
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-22'::timestamp, DATE '2023-03-22'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Kerpen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-03-22'
  - Gem Kerpen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Unna' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-03-12 01:26:09' AND '2023-03-18 02:18:05';
  params:
  - - '2023-03-12 01:26:09'
    - '2023-03-18 02:18:05'
  - Krs Unna
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.2287032279653103e-05) WHERE c.name = 'Waldbroel' AND f.timestamp BETWEEN '2023-02-09 23:16:30' AND '2023-02-21 02:04:01';
  params:
  - - '2023-02-09 23:16:30'
    - '2023-02-21 02:04:01'
  - Waldbroel
  - 1.2287032279653103e-05
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-12'::timestamp, DATE '2023-08-12'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Ascheberg' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-08-12'
  - Gem Ascheberg
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Guetersloh' WHERE f.timestamp BETWEEN '2023-11-10 06:05:04' AND '2023-11-11 05:16:23' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-11-10 06:05:04'
    - '2023-11-11 05:16:23'
  - Krs Guetersloh
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-30'::timestamp, DATE '2023-04-30'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Tecklenburg' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-04-30'
  - Gem Tecklenburg
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 4.005781739729026e-06) WHERE c.name = 'Koenigswinter' AND f.timestamp BETWEEN '2023-11-11 03:45:06' AND '2023-11-19 17:19:42';
  params:
  - - '2023-11-11 03:45:06'
    - '2023-11-19 17:19:42'
  - Koenigswinter
  - 4.005781739729026e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.548656802402776e-05) WHERE c.name = 'Hamm' AND f.timestamp BETWEEN '2023-08-13 15:32:01' AND '2023-08-20 02:49:08';
  params:
  - - '2023-08-13 15:32:01'
    - '2023-08-20 02:49:08'
  - Hamm
  - 1.548656802402776e-05
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-09'::timestamp, DATE '2023-06-09'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Bad Muenstereifel' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-06-09'
  - Gem Bad Muenstereifel
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-03-12 22:44:46' GROUP BY b.name;
  params:
  - '2023-03-12 22:44:46'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 3.999090348581573e-06) WHERE c.name = 'Koenigswinter' AND f.timestamp BETWEEN '2023-02-16 05:00:39' AND '2023-02-26 19:20:04';
  params:
  - - '2023-02-16 05:00:39'
    - '2023-02-26 19:20:04'
  - Koenigswinter
  - 3.999090348581573e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 5.358935813460582e-06) WHERE c.name = 'Hilchenbach' AND f.timestamp BETWEEN '2023-10-08 17:36:21' AND '2023-10-17 17:02:44';
  params:
  - - '2023-10-08 17:36:21'
    - '2023-10-17 17:02:44'
  - Hilchenbach
  - 5.358935813460582e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-05-31 23:22:43' GROUP BY b.name;
  params:
  - '2023-05-31 23:22:43'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Viersen' WHERE f.timestamp BETWEEN '2023-06-24 11:12:41' AND '2023-06-25 14:06:37' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-06-24 11:12:41'
    - '2023-06-25 14:06:37'
  - Krs Viersen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Hoexter' WHERE f.timestamp BETWEEN '2023-06-16 18:21:58' AND '2023-06-18 15:46:01' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-06-16 18:21:58'
    - '2023-06-18 15:46:01'
  - Krs Hoexter
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-06-09 05:59:08' GROUP BY b.name;
  params:
  - '2023-06-09 05:59:08'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Wesel' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-02-22 14:54:55' AND '2023-02-28 04:29:57';
  params:
  - - '2023-02-22 14:54:55'
    - '2023-02-28 04:29:57'
  - Krs Wesel
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Ennepe-Ruhr-Kreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-06-20 19:31:34' AND '2023-06-30 21:29:48';
  params:
  - - '2023-06-20 19:31:34'
    - '2023-06-30 21:29:48'
  - Krs Ennepe-Ruhr-Kreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Solingen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-10-27 16:20:02' AND '2023-11-07 13:21:14';
  params:
  - - '2023-10-27 16:20:02'
    - '2023-11-07 13:21:14'
  - Krs Solingen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Ennepe-Ruhr-Kreis' WHERE f.timestamp BETWEEN '2023-08-30 20:31:31' AND '2023-09-01 04:52:57' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-08-30 20:31:31'
    - '2023-09-01 04:52:57'
  - Krs Ennepe-Ruhr-Kreis
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-12-27 14:46:16' GROUP BY b.name;
  params:
  - '2023-12-27 14:46:16'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Moenchengladbach' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-07-28 20:27:21' AND '2023-08-03 02:03:46';
  params:
  - - '2023-07-28 20:27:21'
    - '2023-08-03 02:03:46'
  - Krs Moenchengladbach
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 7.830376446204644e-06) WHERE c.name = 'Willebadessen' AND f.timestamp BETWEEN '2023-01-16 12:25:45' AND '2023-01-24 17:24:00';
  params:
  - - '2023-01-16 12:25:45'
    - '2023-01-24 17:24:00'
  - Willebadessen
  - 7.830376446204644e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Staedteregion Aachen' WHERE f.timestamp BETWEEN '2023-05-12 09:03:48' AND '2023-05-13 18:29:21' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-05-12 09:03:48'
    - '2023-05-13 18:29:21'
  - Krs Staedteregion Aachen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Hagen' WHERE f.timestamp BETWEEN '2023-04-25 09:09:41' AND '2023-04-26 22:08:23' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-04-25 09:09:41'
    - '2023-04-26 22:08:23'
  - Krs Hagen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 6.091658599891557e-06) WHERE c.name = 'Salzkotten' AND f.timestamp BETWEEN '2023-02-09 13:58:32' AND '2023-02-18 03:14:28';
  params:
  - - '2023-02-09 13:58:32'
    - '2023-02-18 03:14:28'
  - Salzkotten
  - 6.091658599891557e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Herford' WHERE f.timestamp BETWEEN '2023-06-02 17:45:45' AND '2023-06-03 05:52:02' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-06-02 17:45:45'
    - '2023-06-03 05:52:02'
  - Krs Herford
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Oberbergischer Kreis' WHERE f.timestamp BETWEEN '2023-10-09 08:56:49' AND '2023-10-10 06:09:18' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-10-09 08:56:49'
    - '2023-10-10 06:09:18'
  - Krs Oberbergischer Kreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Gelsenkirchen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-04-14 09:26:33' AND '2023-04-22 13:19:02';
  params:
  - - '2023-04-14 09:26:33'
    - '2023-04-22 13:19:02'
  - Krs Gelsenkirchen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Soest' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-11-24 13:23:47' AND '2023-12-04 14:39:14';
  params:
  - - '2023-11-24 13:23:47'
    - '2023-12-04 14:39:14'
  - Krs Soest
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-02-25 01:22:39' GROUP BY b.name;
  params:
  - '2023-02-25 01:22:39'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Hamm' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-11-29 11:10:02' AND '2023-12-12 21:33:46';
  params:
  - - '2023-11-29 11:10:02'
    - '2023-12-12 21:33:46'
  - Krs Hamm
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Bottrop' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-01-31 00:33:19' AND '2023-02-14 12:40:23';
  params:
  - - '2023-01-31 00:33:19'
    - '2023-02-14 12:40:23'
  - Krs Bottrop
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-15'::timestamp, DATE '2023-06-15'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Nideggen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-06-15'
  - Gem Nideggen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Bottrop' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-11-03 05:34:05' AND '2023-11-12 17:36:35';
  params:
  - - '2023-11-03 05:34:05'
    - '2023-11-12 17:36:35'
  - Krs Bottrop
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-12-21'::timestamp, DATE '2023-12-21'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Hueckeswagen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-12-21'
  - Gem Hueckeswagen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Heinsberg' WHERE f.timestamp BETWEEN '2023-10-10 21:47:47' AND '2023-10-11 16:22:06' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-10-10 21:47:47'
    - '2023-10-11 16:22:06'
  - Krs Heinsberg
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Ruppichteroth' AND f.timestamp BETWEEN '2023-01-24 23:38:00' AND '2023-02-05 06:03:31' AND f.altitude < 750 GROUP BY g.name, f.flightid;
  params:
  - - '2023-01-24 23:38:00'
    - '2023-02-05 06:03:31'
  - Gem Ruppichteroth
  - 750
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Hueckeswagen' AND f.timestamp BETWEEN '2023-11-22 19:09:10' AND '2023-12-01 14:55:44' AND f.altitude < 700 GROUP BY g.name, f.flightid;
  params:
  - - '2023-11-22 19:09:10'
    - '2023-12-01 14:55:44'
  - Gem Hueckeswagen
  - 700
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 5.501293612227316e-06) WHERE c.name = 'Wipperfuerth' AND f.timestamp BETWEEN '2023-02-13 11:51:04' AND '2023-02-16 10:20:11';
  params:
  - - '2023-02-13 11:51:04'
    - '2023-02-16 10:20:11'
  - Wipperfuerth
  - 5.501293612227316e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-02-21 14:45:24' GROUP BY b.name;
  params:
  - '2023-02-21 14:45:24'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 6.200957164128519e-06) WHERE c.name = 'Lohmar' AND f.timestamp BETWEEN '2023-07-06 08:57:02' AND '2023-07-10 18:42:22';
  params:
  - - '2023-07-06 08:57:02'
    - '2023-07-10 18:42:22'
  - Lohmar
  - 6.200957164128519e-06
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-16'::timestamp, DATE '2023-11-16'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Castrop-Rauxel' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-11-16'
  - Gem Castrop-Rauxel
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-07-25'::timestamp, DATE '2023-07-25'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Werne' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-07-25'
  - Gem Werne
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-10-22 06:00:19' GROUP BY b.name;
  params:
  - '2023-10-22 06:00:19'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Rheinisch-Bergischer Kreis' WHERE f.timestamp BETWEEN '2023-07-12 20:22:54' AND '2023-07-13 03:37:57' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-07-12 20:22:54'
    - '2023-07-13 03:37:57'
  - Krs Rheinisch-Bergischer Kreis
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Langenfeld (Rhld.)' AND f.timestamp BETWEEN '2023-12-03 05:25:04' AND '2023-12-13 21:48:01' AND f.altitude < 1060 GROUP BY g.name, f.flightid;
  params:
  - - '2023-12-03 05:25:04'
    - '2023-12-13 21:48:01'
  - Gem Langenfeld (Rhld.)
  - 1060
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 9.560370182602459e-06) WHERE c.name = 'Eschweiler' AND f.timestamp BETWEEN '2023-12-28 21:48:37' AND '2023-12-31 23:59:59';
  params:
  - - '2023-12-28 21:48:37'
    - '2023-12-31 23:59:59'
  - Eschweiler
  - 9.560370182602459e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-09-11 16:08:53' GROUP BY b.name;
  params:
  - '2023-09-11 16:08:53'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Maerkischer Kreis' WHERE f.timestamp BETWEEN '2023-10-15 22:30:49' AND '2023-10-17 13:01:44' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-10-15 22:30:49'
    - '2023-10-17 13:01:44'
  - Krs Maerkischer Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-28'::timestamp, DATE '2023-10-28'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Wachtberg' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-10-28'
  - Gem Wachtberg
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 7.272349353430697e-06) WHERE c.name = 'Beverungen' AND f.timestamp BETWEEN '2023-10-17 12:48:49' AND '2023-10-30 20:46:58';
  params:
  - - '2023-10-17 12:48:49'
    - '2023-10-30 20:46:58'
  - Beverungen
  - 7.272349353430697e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Rheinisch-Bergischer Kreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-11-27 20:59:05' AND '2023-12-08 11:48:18';
  params:
  - - '2023-11-27 20:59:05'
    - '2023-12-08 11:48:18'
  - Krs Rheinisch-Bergischer Kreis
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Mettmann' WHERE f.timestamp BETWEEN '2023-04-13 02:10:03' AND '2023-04-13 05:25:15' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-04-13 02:10:03'
    - '2023-04-13 05:25:15'
  - Krs Mettmann
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Bottrop' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-02-10 18:57:03' AND '2023-02-17 11:54:04';
  params:
  - - '2023-02-10 18:57:03'
    - '2023-02-17 11:54:04'
  - Krs Bottrop
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Siegen-Wittgenstein' WHERE f.timestamp BETWEEN '2023-11-21 09:29:44' AND '2023-11-22 03:51:01' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-11-21 09:29:44'
    - '2023-11-22 03:51:01'
  - Krs Siegen-Wittgenstein
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.130835215566887e-05) WHERE c.name = 'Euskirchen' AND f.timestamp BETWEEN '2023-03-20 13:21:10' AND '2023-03-31 05:35:44';
  params:
  - - '2023-03-20 13:21:10'
    - '2023-03-31 05:35:44'
  - Euskirchen
  - 1.130835215566887e-05
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-26'::timestamp, DATE '2023-08-26'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Nottuln' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-08-26'
  - Gem Nottuln
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-02-11'::timestamp, DATE '2023-02-11'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Hattingen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-02-11'
  - Gem Hattingen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Meinerzhagen' AND f.timestamp BETWEEN '2023-02-27 12:00:51' AND '2023-03-09 19:39:57' AND f.altitude < 860 GROUP BY g.name, f.flightid;
  params:
  - - '2023-02-27 12:00:51'
    - '2023-03-09 19:39:57'
  - Gem Meinerzhagen
  - 860
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Paderborn' WHERE f.timestamp BETWEEN '2023-03-09 06:07:41' AND '2023-03-10 16:01:46' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-03-09 06:07:41'
    - '2023-03-10 16:01:46'
  - Krs Paderborn
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 4.316712835786264e-06) WHERE c.name = 'Meschede' AND f.timestamp BETWEEN '2023-05-19 04:33:53' AND '2023-06-02 03:20:33';
  params:
  - - '2023-05-19 04:33:53'
    - '2023-06-02 03:20:33'
  - Meschede
  - 4.316712835786264e-06
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-07-31'::timestamp, DATE '2023-07-31'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Nettersheim' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-07-31'
  - Gem Nettersheim
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Bottrop' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-07-25 12:46:19' AND '2023-08-01 06:01:22';
  params:
  - - '2023-07-25 12:46:19'
    - '2023-08-01 06:01:22'
  - Krs Bottrop
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Hamm' WHERE f.timestamp BETWEEN '2023-02-03 19:41:45' AND '2023-02-04 01:32:40' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-02-03 19:41:45'
    - '2023-02-04 01:32:40'
  - Krs Hamm
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Leverkusen' WHERE f.timestamp BETWEEN '2023-08-13 02:27:52' AND '2023-08-13 06:30:33' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-08-13 02:27:52'
    - '2023-08-13 06:30:33'
  - Krs Leverkusen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-19'::timestamp, DATE '2023-06-19'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Ruppichteroth' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-06-19'
  - Gem Ruppichteroth
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Bad Wuennenberg' AND f.timestamp BETWEEN '2023-07-19 08:29:33' AND '2023-07-28 18:33:19' AND f.altitude < 900 GROUP BY g.name, f.flightid;
  params:
  - - '2023-07-19 08:29:33'
    - '2023-07-28 18:33:19'
  - Gem Bad Wuennenberg
  - 900
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 3.6916692000489435e-06) WHERE c.name = 'Neukirchen-Vluyn' AND f.timestamp BETWEEN '2023-11-23 02:19:38' AND '2023-11-26 06:32:48';
  params:
  - - '2023-11-23 02:19:38'
    - '2023-11-26 06:32:48'
  - Neukirchen-Vluyn
  - 3.6916692000489435e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-08-15 06:03:24' GROUP BY b.name;
  params:
  - '2023-08-15 06:03:24'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Oberbergischer Kreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-02-11 22:48:05' AND '2023-02-17 02:35:14';
  params:
  - - '2023-02-11 22:48:05'
    - '2023-02-17 02:35:14'
  - Krs Oberbergischer Kreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 9.616976491421657e-06) WHERE c.name = 'Oerlinghausen' AND f.timestamp BETWEEN '2023-02-23 09:43:40' AND '2023-03-01 17:51:25';
  params:
  - - '2023-02-23 09:43:40'
    - '2023-03-01 17:51:25'
  - Oerlinghausen
  - 9.616976491421657e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.5244385627678053e-05) WHERE c.name = 'Luenen' AND f.timestamp BETWEEN '2023-05-04 18:11:31' AND '2023-05-10 03:39:58';
  params:
  - - '2023-05-04 18:11:31'
    - '2023-05-10 03:39:58'
  - Luenen
  - 1.5244385627678053e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Coesfeld' WHERE f.timestamp BETWEEN '2023-12-20 18:08:01' AND '2023-12-21 21:33:38' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-12-20 18:08:01'
    - '2023-12-21 21:33:38'
  - Krs Coesfeld
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 3.191898475048959e-06) WHERE c.name = 'Sendenhorst' AND f.timestamp BETWEEN '2023-07-06 06:16:31' AND '2023-07-13 23:15:12';
  params:
  - - '2023-07-06 06:16:31'
    - '2023-07-13 23:15:12'
  - Sendenhorst
  - 3.191898475048959e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Koeln' WHERE f.timestamp BETWEEN '2023-10-12 08:24:16' AND '2023-10-12 08:53:33' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-10-12 08:24:16'
    - '2023-10-12 08:53:33'
  - Krs Koeln
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-17'::timestamp, DATE '2023-09-17'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Engelskirchen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-09-17'
  - Gem Engelskirchen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.5665455717141978e-05) WHERE c.name = 'Marl' AND f.timestamp BETWEEN '2023-04-06 05:24:17' AND '2023-04-10 23:10:04';
  params:
  - - '2023-04-06 05:24:17'
    - '2023-04-10 23:10:04'
  - Marl
  - 1.5665455717141978e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Warendorf' WHERE f.timestamp BETWEEN '2023-05-14 23:36:15' AND '2023-05-16 19:54:43' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-05-14 23:36:15'
    - '2023-05-16 19:54:43'
  - Krs Warendorf
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-01-13'::timestamp, DATE '2023-01-13'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Nordwalde' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-01-13'
  - Gem Nordwalde
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Steinheim' AND f.timestamp BETWEEN '2023-01-29 14:08:58' AND '2023-02-03 12:07:50' AND f.altitude < 1220 GROUP BY g.name, f.flightid;
  params:
  - - '2023-01-29 14:08:58'
    - '2023-02-03 12:07:50'
  - Gem Steinheim
  - 1220
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Krefeld' AND f.timestamp BETWEEN '2023-10-14 11:38:05' AND '2023-10-16 20:35:52' AND f.altitude < 580 GROUP BY g.name, f.flightid;
  params:
  - - '2023-10-14 11:38:05'
    - '2023-10-16 20:35:52'
  - Gem Krefeld
  - 580
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Solingen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-08-21 03:04:50' AND '2023-08-27 09:23:07';
  params:
  - - '2023-08-21 03:04:50'
    - '2023-08-27 09:23:07'
  - Krs Solingen
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-01-11 07:53:57' GROUP BY b.name;
  params:
  - '2023-01-11 07:53:57'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Oberbergischer Kreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-01-23 01:12:42' AND '2023-01-26 22:25:24';
  params:
  - - '2023-01-23 01:12:42'
    - '2023-01-26 22:25:24'
  - Krs Oberbergischer Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-09'::timestamp, DATE '2023-03-09'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Wettringen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-03-09'
  - Gem Wettringen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-12-21'::timestamp, DATE '2023-12-21'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Freudenberg' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-12-21'
  - Gem Freudenberg
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Minden' AND f.timestamp BETWEEN '2023-09-05 23:09:38' AND '2023-09-16 11:58:27' AND f.altitude < 940 GROUP BY g.name, f.flightid;
  params:
  - - '2023-09-05 23:09:38'
    - '2023-09-16 11:58:27'
  - Gem Minden
  - 940
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-02-03 14:03:35' GROUP BY b.name;
  params:
  - '2023-02-03 14:03:35'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Coesfeld' WHERE f.timestamp BETWEEN '2023-09-13 14:05:39' AND '2023-09-14 09:43:45' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-09-13 14:05:39'
    - '2023-09-14 09:43:45'
  - Krs Coesfeld
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Rhein-Sieg-Kreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-12-27 13:21:47' AND '2023-12-31 23:59:59';
  params:
  - - '2023-12-27 13:21:47'
    - '2023-12-31 23:59:59'
  - Krs Rhein-Sieg-Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-03'::timestamp, DATE '2023-09-03'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Sendenhorst' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-09-03'
  - Gem Sendenhorst
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 9.909995975422843e-06) WHERE c.name = 'Halle' AND f.timestamp BETWEEN '2023-08-28 01:39:41' AND '2023-09-01 21:41:16';
  params:
  - - '2023-08-28 01:39:41'
    - '2023-09-01 21:41:16'
  - Halle
  - 9.909995975422843e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Hoexter' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-05-26 00:45:51' AND '2023-06-08 06:31:45';
  params:
  - - '2023-05-26 00:45:51'
    - '2023-06-08 06:31:45'
  - Krs Hoexter
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-07-28'::timestamp, DATE '2023-07-28'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Nieheim' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-07-28'
  - Gem Nieheim
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Soest' WHERE f.timestamp BETWEEN '2023-04-12 14:34:42' AND '2023-04-14 01:15:26' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-04-12 14:34:42'
    - '2023-04-14 01:15:26'
  - Krs Soest
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-25'::timestamp, DATE '2023-11-25'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Moers' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-11-25'
  - Gem Moers
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.5065781242187181e-05) WHERE c.name = 'Unna' AND f.timestamp BETWEEN '2023-01-01 05:19:27' AND '2023-01-05 10:45:05';
  params:
  - - '2023-01-01 05:19:27'
    - '2023-01-05 10:45:05'
  - Unna
  - 1.5065781242187181e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Wuppertal' WHERE f.timestamp BETWEEN '2023-09-13 12:36:08' AND '2023-09-14 03:59:03' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-09-13 12:36:08'
    - '2023-09-14 03:59:03'
  - Krs Wuppertal
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-12'::timestamp, DATE '2023-09-12'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Velbert' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-09-12'
  - Gem Velbert
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.5118826346628055e-05) WHERE c.name = 'Viersen' AND f.timestamp BETWEEN '2023-02-26 01:44:01' AND '2023-03-07 02:14:00';
  params:
  - - '2023-02-26 01:44:01'
    - '2023-03-07 02:14:00'
  - Viersen
  - 1.5118826346628055e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Wachtberg' AND f.timestamp BETWEEN '2023-08-10 19:57:45' AND '2023-08-16 07:30:44' AND f.altitude < 750 GROUP BY g.name, f.flightid;
  params:
  - - '2023-08-10 19:57:45'
    - '2023-08-16 07:30:44'
  - Gem Wachtberg
  - 750
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-03-17 11:24:47' GROUP BY b.name;
  params:
  - '2023-03-17 11:24:47'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Euskirchen' WHERE f.timestamp BETWEEN '2023-10-02 23:21:05' AND '2023-10-04 10:53:31' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-10-02 23:21:05'
    - '2023-10-04 10:53:31'
  - Krs Euskirchen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Kleve' WHERE f.timestamp BETWEEN '2023-09-23 17:42:14' AND '2023-09-25 14:24:00' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-09-23 17:42:14'
    - '2023-09-25 14:24:00'
  - Krs Kleve
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Maerkischer Kreis' WHERE f.timestamp BETWEEN '2023-10-22 14:15:17' AND '2023-10-23 00:02:12' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-10-22 14:15:17'
    - '2023-10-23 00:02:12'
  - Krs Maerkischer Kreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Bottrop' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-12-20 00:23:38' AND '2023-12-31 01:12:54';
  params:
  - - '2023-12-20 00:23:38'
    - '2023-12-31 01:12:54'
  - Krs Bottrop
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Siegen-Wittgenstein' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-08-05 09:01:23' AND '2023-08-07 17:06:46';
  params:
  - - '2023-08-05 09:01:23'
    - '2023-08-07 17:06:46'
  - Krs Siegen-Wittgenstein
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Soest' WHERE f.timestamp BETWEEN '2023-05-08 11:25:25' AND '2023-05-09 06:41:50' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-05-08 11:25:25'
    - '2023-05-09 06:41:50'
  - Krs Soest
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Hochsauerlandkreis' WHERE f.timestamp BETWEEN '2023-09-20 12:22:08' AND '2023-09-21 20:39:32' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-09-20 12:22:08'
    - '2023-09-21 20:39:32'
  - Krs Hochsauerlandkreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Muelheim a.d. Ruhr' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-02-16 21:15:08' AND '2023-02-26 15:53:21';
  params:
  - - '2023-02-16 21:15:08'
    - '2023-02-26 15:53:21'
  - Krs Muelheim a.d. Ruhr
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Hamminkeln' AND f.timestamp BETWEEN '2023-11-24 10:57:25' AND '2023-12-07 10:09:20' AND f.altitude < 1270 GROUP BY g.name, f.flightid;
  params:
  - - '2023-11-24 10:57:25'
    - '2023-12-07 10:09:20'
  - Gem Hamminkeln
  - 1270
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Kierspe' AND f.timestamp BETWEEN '2023-07-22 15:15:30' AND '2023-07-26 07:31:29' AND f.altitude < 780 GROUP BY g.name, f.flightid;
  params:
  - - '2023-07-22 15:15:30'
    - '2023-07-26 07:31:29'
  - Gem Kierspe
  - 780
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Viersen' WHERE f.timestamp BETWEEN '2023-11-30 00:15:41' AND '2023-11-30 17:31:05' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-11-30 00:15:41'
    - '2023-11-30 17:31:05'
  - Krs Viersen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.1648580064766053e-05) WHERE c.name = 'Borgholzhausen' AND f.timestamp BETWEEN '2023-09-02 07:26:42' AND '2023-09-08 16:39:04';
  params:
  - - '2023-09-02 07:26:42'
    - '2023-09-08 16:39:04'
  - Borgholzhausen
  - 1.1648580064766053e-05
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.3111441768658839e-05) WHERE c.name = 'Luenen' AND f.timestamp BETWEEN '2023-09-20 11:36:15' AND '2023-09-24 11:22:49';
  params:
  - - '2023-09-20 11:36:15'
    - '2023-09-24 11:22:49'
  - Luenen
  - 1.3111441768658839e-05
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-07-04 21:00:29' GROUP BY b.name;
  params:
  - '2023-07-04 21:00:29'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-07-21'::timestamp, DATE '2023-07-21'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Datteln' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-07-21'
  - Gem Datteln
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Lippe' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-06-23 03:50:39' AND '2023-07-02 10:52:31';
  params:
  - - '2023-06-23 03:50:39'
    - '2023-07-02 10:52:31'
  - Krs Lippe
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Duesseldorf' AND f.timestamp BETWEEN '2023-10-19 18:18:13' AND '2023-10-23 07:23:19' AND f.altitude < 1440 GROUP BY g.name, f.flightid;
  params:
  - - '2023-10-19 18:18:13'
    - '2023-10-23 07:23:19'
  - Gem Duesseldorf
  - 1440
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-05'::timestamp, DATE '2023-11-05'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Luedenscheid' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-11-05'
  - Gem Luedenscheid
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-07-02 21:44:15' GROUP BY b.name;
  params:
  - '2023-07-02 21:44:15'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-04'::timestamp, DATE '2023-08-04'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Mettmann' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-08-04'
  - Gem Mettmann
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-03-10 16:06:10' GROUP BY b.name;
  params:
  - '2023-03-10 16:06:10'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Lippe' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-10-31 15:31:07' AND '2023-11-03 10:49:36';
  params:
  - - '2023-10-31 15:31:07'
    - '2023-11-03 10:49:36'
  - Krs Lippe
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Overath' AND f.timestamp BETWEEN '2023-08-02 22:59:27' AND '2023-08-05 03:53:43' AND f.altitude < 740 GROUP BY g.name, f.flightid;
  params:
  - - '2023-08-02 22:59:27'
    - '2023-08-05 03:53:43'
  - Gem Overath
  - 740
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 9.688177364171131e-06) WHERE c.name = 'Dortmund' AND f.timestamp BETWEEN '2023-11-28 06:03:17' AND '2023-12-12 13:12:22';
  params:
  - - '2023-11-28 06:03:17'
    - '2023-12-12 13:12:22'
  - Dortmund
  - 9.688177364171131e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Brilon' AND f.timestamp BETWEEN '2023-09-05 13:09:06' AND '2023-09-10 01:02:08' AND f.altitude < 810 GROUP BY g.name, f.flightid;
  params:
  - - '2023-09-05 13:09:06'
    - '2023-09-10 01:02:08'
  - Gem Brilon
  - 810
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Staedteregion Aachen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-02-08 14:52:43' AND '2023-02-20 09:34:30';
  params:
  - - '2023-02-08 14:52:43'
    - '2023-02-20 09:34:30'
  - Krs Staedteregion Aachen
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-18'::timestamp, DATE '2023-09-18'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Nieheim' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-09-18'
  - Gem Nieheim
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-13'::timestamp, DATE '2023-08-13'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Saerbeck' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-08-13'
  - Gem Saerbeck
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.3028923471034825e-05) WHERE c.name = 'Dueren' AND f.timestamp BETWEEN '2023-06-02 01:55:36' AND '2023-06-06 19:05:25';
  params:
  - - '2023-06-02 01:55:36'
    - '2023-06-06 19:05:25'
  - Dueren
  - 1.3028923471034825e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Hochsauerlandkreis' WHERE f.timestamp BETWEEN '2023-06-03 06:38:48' AND '2023-06-04 09:16:25' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-06-03 06:38:48'
    - '2023-06-04 09:16:25'
  - Krs Hochsauerlandkreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.353061452924266e-05) WHERE c.name = 'Olsberg' AND f.timestamp BETWEEN '2023-02-25 23:21:59' AND '2023-03-08 07:01:16';
  params:
  - - '2023-02-25 23:21:59'
    - '2023-03-08 07:01:16'
  - Olsberg
  - 1.353061452924266e-05
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-05-21 23:39:01' GROUP BY b.name;
  params:
  - '2023-05-21 23:39:01'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Kreuztal' AND f.timestamp BETWEEN '2023-02-22 00:16:49' AND '2023-03-01 04:29:22' AND f.altitude < 780 GROUP BY g.name, f.flightid;
  params:
  - - '2023-02-22 00:16:49'
    - '2023-03-01 04:29:22'
  - Gem Kreuztal
  - 780
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.4621462403860334e-05) WHERE c.name = 'Muenster' AND f.timestamp BETWEEN '2023-02-06 22:07:34' AND '2023-02-10 17:35:35';
  params:
  - - '2023-02-06 22:07:34'
    - '2023-02-10 17:35:35'
  - Muenster
  - 1.4621462403860334e-05
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-23'::timestamp, DATE '2023-05-23'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Huellhorst' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-05-23'
  - Gem Huellhorst
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-04-03 02:13:52' GROUP BY b.name;
  params:
  - '2023-04-03 02:13:52'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Muenster' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-01-10 09:59:15' AND '2023-01-25 01:10:58';
  params:
  - - '2023-01-10 09:59:15'
    - '2023-01-25 01:10:58'
  - Krs Muenster
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Oerlinghausen' AND f.timestamp BETWEEN '2023-01-02 16:36:56' AND '2023-01-15 06:23:54' AND f.altitude < 650 GROUP BY g.name, f.flightid;
  params:
  - - '2023-01-02 16:36:56'
    - '2023-01-15 06:23:54'
  - Gem Oerlinghausen
  - 650
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-10'::timestamp, DATE '2023-10-10'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Vreden' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-10-10'
  - Gem Vreden
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-10-13 11:11:54' GROUP BY b.name;
  params:
  - '2023-10-13 11:11:54'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Soest' WHERE f.timestamp BETWEEN '2023-08-23 19:06:02' AND '2023-08-24 13:29:17' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-08-23 19:06:02'
    - '2023-08-24 13:29:17'
  - Krs Soest
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Siegen-Wittgenstein' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-11-18 15:55:40' AND '2023-11-28 01:45:22';
  params:
  - - '2023-11-18 15:55:40'
    - '2023-11-28 01:45:22'
  - Krs Siegen-Wittgenstein
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 4.162799139925617e-06) WHERE c.name = 'Bochum' AND f.timestamp BETWEEN '2023-01-28 02:50:08' AND '2023-02-08 04:52:52';
  params:
  - - '2023-01-28 02:50:08'
    - '2023-02-08 04:52:52'
  - Bochum
  - 4.162799139925617e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Stolberg (Rhld.)' AND f.timestamp BETWEEN '2023-07-10 12:47:32' AND '2023-07-15 20:17:30' AND f.altitude < 1420 GROUP BY g.name, f.flightid;
  params:
  - - '2023-07-10 12:47:32'
    - '2023-07-15 20:17:30'
  - Gem Stolberg (Rhld.)
  - 1420
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.2122126651333056e-05) WHERE c.name = 'Isselburg' AND f.timestamp BETWEEN '2023-07-06 21:33:09' AND '2023-07-10 20:29:52';
  params:
  - - '2023-07-06 21:33:09'
    - '2023-07-10 20:29:52'
  - Isselburg
  - 1.2122126651333056e-05
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-02-23 21:23:15' GROUP BY b.name;
  params:
  - '2023-02-23 21:23:15'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Hoexter' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-09-06 17:36:31' AND '2023-09-09 00:11:18';
  params:
  - - '2023-09-06 17:36:31'
    - '2023-09-09 00:11:18'
  - Krs Hoexter
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Euskirchen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-09-07 06:34:19' AND '2023-09-10 05:44:22';
  params:
  - - '2023-09-07 06:34:19'
    - '2023-09-10 05:44:22'
  - Krs Euskirchen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Herzebrock-Clarholz' AND f.timestamp BETWEEN '2023-06-04 11:25:42' AND '2023-06-18 23:50:54' AND f.altitude < 920 GROUP BY g.name, f.flightid;
  params:
  - - '2023-06-04 11:25:42'
    - '2023-06-18 23:50:54'
  - Gem Herzebrock-Clarholz
  - 920
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Remscheid' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-08-19 01:53:38' AND '2023-08-23 12:42:45';
  params:
  - - '2023-08-19 01:53:38'
    - '2023-08-23 12:42:45'
  - Krs Remscheid
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Siegen-Wittgenstein' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-03-26 08:02:43' AND '2023-04-05 23:08:44';
  params:
  - - '2023-03-26 08:02:43'
    - '2023-04-05 23:08:44'
  - Krs Siegen-Wittgenstein
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Wachtberg' AND f.timestamp BETWEEN '2023-09-23 19:10:19' AND '2023-09-25 23:43:26' AND f.altitude < 680 GROUP BY g.name, f.flightid;
  params:
  - - '2023-09-23 19:10:19'
    - '2023-09-25 23:43:26'
  - Gem Wachtberg
  - 680
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Hilchenbach' AND f.timestamp BETWEEN '2023-11-09 14:36:05' AND '2023-11-15 12:54:50' AND f.altitude < 1480 GROUP BY g.name, f.flightid;
  params:
  - - '2023-11-09 14:36:05'
    - '2023-11-15 12:54:50'
  - Gem Hilchenbach
  - 1480
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-07-03'::timestamp, DATE '2023-07-03'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Duelmen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-07-03'
  - Gem Duelmen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 8.837203803878335e-06) WHERE c.name = 'Bad Wuennenberg' AND f.timestamp BETWEEN '2023-02-03 09:53:22' AND '2023-02-16 11:02:50';
  params:
  - - '2023-02-03 09:53:22'
    - '2023-02-16 11:02:50'
  - Bad Wuennenberg
  - 8.837203803878335e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Neukirchen-Vluyn' AND f.timestamp BETWEEN '2023-05-08 12:25:44' AND '2023-05-12 15:59:04' AND f.altitude < 1070 GROUP BY g.name, f.flightid;
  params:
  - - '2023-05-08 12:25:44'
    - '2023-05-12 15:59:04'
  - Gem Neukirchen-Vluyn
  - 1070
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-04-28 23:09:06' GROUP BY b.name;
  params:
  - '2023-04-28 23:09:06'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-11-12 09:40:39' GROUP BY b.name;
  params:
  - '2023-11-12 09:40:39'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Hochsauerlandkreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-11-21 16:34:52' AND '2023-11-24 02:34:57';
  params:
  - - '2023-11-21 16:34:52'
    - '2023-11-24 02:34:57'
  - Krs Hochsauerlandkreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 7.557248326950844e-06) WHERE c.name = 'Isselburg' AND f.timestamp BETWEEN '2023-12-09 19:26:29' AND '2023-12-19 22:12:52';
  params:
  - - '2023-12-09 19:26:29'
    - '2023-12-19 22:12:52'
  - Isselburg
  - 7.557248326950844e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Olpe' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-06-14 11:14:10' AND '2023-06-20 11:48:26';
  params:
  - - '2023-06-14 11:14:10'
    - '2023-06-20 11:48:26'
  - Krs Olpe
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-11-05 13:14:02' GROUP BY b.name;
  params:
  - '2023-11-05 13:14:02'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-11-14 19:41:59' GROUP BY b.name;
  params:
  - '2023-11-14 19:41:59'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.1655988537727224e-05) WHERE c.name = 'Lengerich' AND f.timestamp BETWEEN '2023-02-13 11:22:46' AND '2023-02-19 20:19:19';
  params:
  - - '2023-02-13 11:22:46'
    - '2023-02-19 20:19:19'
  - Lengerich
  - 1.1655988537727224e-05
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-14'::timestamp, DATE '2023-04-14'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Winterberg' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-04-14'
  - Gem Winterberg
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-09-16 18:04:14' GROUP BY b.name;
  params:
  - '2023-09-16 18:04:14'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Dueren' WHERE f.timestamp BETWEEN '2023-12-15 11:44:40' AND '2023-12-17 11:14:13' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-12-15 11:44:40'
    - '2023-12-17 11:14:13'
  - Krs Dueren
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-14'::timestamp, DATE '2023-10-14'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Arnsberg' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-10-14'
  - Gem Arnsberg
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.3467594538296775e-05) WHERE c.name = 'Xanten' AND f.timestamp BETWEEN '2023-12-25 18:00:48' AND '2023-12-28 00:33:51';
  params:
  - - '2023-12-25 18:00:48'
    - '2023-12-28 00:33:51'
  - Xanten
  - 1.3467594538296775e-05
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-21'::timestamp, DATE '2023-11-21'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Hille' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-11-21'
  - Gem Hille
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Brakel' AND f.timestamp BETWEEN '2023-01-12 12:25:42' AND '2023-01-20 00:55:36' AND f.altitude < 1500 GROUP BY g.name, f.flightid;
  params:
  - - '2023-01-12 12:25:42'
    - '2023-01-20 00:55:36'
  - Gem Brakel
  - 1500
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 8.500744973693135e-06) WHERE c.name = 'Koenigswinter' AND f.timestamp BETWEEN '2023-07-23 11:29:37' AND '2023-07-28 11:42:25';
  params:
  - - '2023-07-23 11:29:37'
    - '2023-07-28 11:42:25'
  - Koenigswinter
  - 8.500744973693135e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-06-09 14:27:20' GROUP BY b.name;
  params:
  - '2023-06-09 14:27:20'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 4.454964340550543e-06) WHERE c.name = 'Muenster' AND f.timestamp BETWEEN '2023-01-01 00:00:01' AND '2023-01-07 07:07:12';
  params:
  - - '2023-01-01 00:00:01'
    - '2023-01-07 07:07:12'
  - Muenster
  - 4.454964340550543e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-05-04 00:10:03' GROUP BY b.name;
  params:
  - '2023-05-04 00:10:03'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-08-25 00:01:57' GROUP BY b.name;
  params:
  - '2023-08-25 00:01:57'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Langenfeld (Rhld.)' AND f.timestamp BETWEEN '2023-07-18 06:05:43' AND '2023-07-23 11:55:31' AND f.altitude < 970 GROUP BY g.name, f.flightid;
  params:
  - - '2023-07-18 06:05:43'
    - '2023-07-23 11:55:31'
  - Gem Langenfeld (Rhld.)
  - 970
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Maerkischer Kreis' WHERE f.timestamp BETWEEN '2023-10-01 04:21:28' AND '2023-10-02 11:09:35' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-10-01 04:21:28'
    - '2023-10-02 11:09:35'
  - Krs Maerkischer Kreis
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-05-24 17:41:00' GROUP BY b.name;
  params:
  - '2023-05-24 17:41:00'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-01-31'::timestamp, DATE '2023-01-31'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Engelskirchen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-01-31'
  - Gem Engelskirchen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.1081590927068553e-05) WHERE c.name = 'Frechen' AND f.timestamp BETWEEN '2023-09-26 20:19:24' AND '2023-10-03 21:23:51';
  params:
  - - '2023-09-26 20:19:24'
    - '2023-10-03 21:23:51'
  - Frechen
  - 1.1081590927068553e-05
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 4.892083417183236e-06) WHERE c.name = 'Hamm' AND f.timestamp BETWEEN '2023-04-03 05:11:37' AND '2023-04-15 10:33:22';
  params:
  - - '2023-04-03 05:11:37'
    - '2023-04-15 10:33:22'
  - Hamm
  - 4.892083417183236e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-09-01 01:03:39' GROUP BY b.name;
  params:
  - '2023-09-01 01:03:39'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-02-27'::timestamp, DATE '2023-02-27'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Geldern' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-02-27'
  - Gem Geldern
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Herne' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-07-02 21:37:27' AND '2023-07-06 20:57:41';
  params:
  - - '2023-07-02 21:37:27'
    - '2023-07-06 20:57:41'
  - Krs Herne
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.2833696831718078e-05) WHERE c.name = 'Willich' AND f.timestamp BETWEEN '2023-11-25 02:33:02' AND '2023-12-05 03:46:39';
  params:
  - - '2023-11-25 02:33:02'
    - '2023-12-05 03:46:39'
  - Willich
  - 1.2833696831718078e-05
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-08-20 15:07:16' GROUP BY b.name;
  params:
  - '2023-08-20 15:07:16'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-06-10 15:39:06' GROUP BY b.name;
  params:
  - '2023-06-10 15:39:06'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Rhein-Sieg-Kreis' WHERE f.timestamp BETWEEN '2023-08-09 19:44:00' AND '2023-08-10 04:03:35' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-08-09 19:44:00'
    - '2023-08-10 04:03:35'
  - Krs Rhein-Sieg-Kreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Lippe' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-07-02 19:54:52' AND '2023-07-07 18:09:28';
  params:
  - - '2023-07-02 19:54:52'
    - '2023-07-07 18:09:28'
  - Krs Lippe
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Gladbeck' AND f.timestamp BETWEEN '2023-12-18 00:23:12' AND '2023-12-24 12:13:51' AND f.altitude < 1040 GROUP BY g.name, f.flightid;
  params:
  - - '2023-12-18 00:23:12'
    - '2023-12-24 12:13:51'
  - Gem Gladbeck
  - 1040
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-07-14 09:16:23' GROUP BY b.name;
  params:
  - '2023-07-14 09:16:23'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-11-21 14:07:13' GROUP BY b.name;
  params:
  - '2023-11-21 14:07:13'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-22'::timestamp, DATE '2023-09-22'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Bad Laasphe' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-09-22'
  - Gem Bad Laasphe
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.1166982927750046e-05) WHERE c.name = 'Bornheim' AND f.timestamp BETWEEN '2023-07-08 18:31:41' AND '2023-07-13 00:41:21';
  params:
  - - '2023-07-08 18:31:41'
    - '2023-07-13 00:41:21'
  - Bornheim
  - 1.1166982927750046e-05
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Staedteregion Aachen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-03-10 04:23:03' AND '2023-03-24 15:49:44';
  params:
  - - '2023-03-10 04:23:03'
    - '2023-03-24 15:49:44'
  - Krs Staedteregion Aachen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.4648617790609132e-05) WHERE c.name = 'Arnsberg' AND f.timestamp BETWEEN '2023-06-16 03:59:18' AND '2023-06-19 12:19:59';
  params:
  - - '2023-06-16 03:59:18'
    - '2023-06-19 12:19:59'
  - Arnsberg
  - 1.4648617790609132e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Ennepe-Ruhr-Kreis' WHERE f.timestamp BETWEEN '2023-05-07 01:05:08' AND '2023-05-08 00:20:51' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-05-07 01:05:08'
    - '2023-05-08 00:20:51'
  - Krs Ennepe-Ruhr-Kreis
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-02-21 15:28:38' GROUP BY b.name;
  params:
  - '2023-02-21 15:28:38'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Augustdorf' AND f.timestamp BETWEEN '2023-01-28 22:32:29' AND '2023-02-01 23:13:16' AND f.altitude < 600 GROUP BY g.name, f.flightid;
  params:
  - - '2023-01-28 22:32:29'
    - '2023-02-01 23:13:16'
  - Gem Augustdorf
  - 600
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Maerkischer Kreis' WHERE f.timestamp BETWEEN '2023-03-30 07:31:16' AND '2023-03-30 11:02:33' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-03-30 07:31:16'
    - '2023-03-30 11:02:33'
  - Krs Maerkischer Kreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 6.938645813418671e-06) WHERE c.name = 'Stadtlohn' AND f.timestamp BETWEEN '2023-05-02 01:27:50' AND '2023-05-14 22:51:49';
  params:
  - - '2023-05-02 01:27:50'
    - '2023-05-14 22:51:49'
  - Stadtlohn
  - 6.938645813418671e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Maerkischer Kreis' WHERE f.timestamp BETWEEN '2023-06-29 04:29:06' AND '2023-06-30 01:33:22' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-06-29 04:29:06'
    - '2023-06-30 01:33:22'
  - Krs Maerkischer Kreis
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Borken' WHERE f.timestamp BETWEEN '2023-03-19 08:10:48' AND '2023-03-20 23:40:10' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-03-19 08:10:48'
    - '2023-03-20 23:40:10'
  - Krs Borken
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-03-28 12:15:26' GROUP BY b.name;
  params:
  - '2023-03-28 12:15:26'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-25'::timestamp, DATE '2023-08-25'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Blankenheim' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-08-25'
  - Gem Blankenheim
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Hoexter' WHERE f.timestamp BETWEEN '2023-01-30 20:29:57' AND '2023-01-30 20:50:10' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-01-30 20:29:57'
    - '2023-01-30 20:50:10'
  - Krs Hoexter
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Olpe' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-07-03 22:55:02' AND '2023-07-14 00:09:13';
  params:
  - - '2023-07-03 22:55:02'
    - '2023-07-14 00:09:13'
  - Krs Olpe
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Bad Muenstereifel' AND f.timestamp BETWEEN '2023-06-21 05:13:58' AND '2023-07-03 06:57:04' AND f.altitude < 770 GROUP BY g.name, f.flightid;
  params:
  - - '2023-06-21 05:13:58'
    - '2023-07-03 06:57:04'
  - Gem Bad Muenstereifel
  - 770
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Minden-Luebbecke' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-11-28 20:31:02' AND '2023-12-09 12:21:57';
  params:
  - - '2023-11-28 20:31:02'
    - '2023-12-09 12:21:57'
  - Krs Minden-Luebbecke
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Gelsenkirchen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-03-16 22:12:34' AND '2023-03-19 04:14:41';
  params:
  - - '2023-03-16 22:12:34'
    - '2023-03-19 04:14:41'
  - Krs Gelsenkirchen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 8.63033616086979e-06) WHERE c.name = 'Hoerstel' AND f.timestamp BETWEEN '2023-07-19 17:06:00' AND '2023-07-31 12:46:25';
  params:
  - - '2023-07-19 17:06:00'
    - '2023-07-31 12:46:25'
  - Hoerstel
  - 8.63033616086979e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-06-01 00:25:03' GROUP BY b.name;
  params:
  - '2023-06-01 00:25:03'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-02-07 01:51:15' GROUP BY b.name;
  params:
  - '2023-02-07 01:51:15'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Muenster' WHERE f.timestamp BETWEEN '2023-09-30 15:04:48' AND '2023-10-01 04:15:21' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-09-30 15:04:48'
    - '2023-10-01 04:15:21'
  - Krs Muenster
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 3.993253389954658e-06) WHERE c.name = 'Erkelenz' AND f.timestamp BETWEEN '2023-02-25 17:38:37' AND '2023-03-01 04:46:02';
  params:
  - - '2023-02-25 17:38:37'
    - '2023-03-01 04:46:02'
  - Erkelenz
  - 3.993253389954658e-06
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-23'::timestamp, DATE '2023-09-23'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Hoexter' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-09-23'
  - Gem Hoexter
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-02-16 23:56:59' GROUP BY b.name;
  params:
  - '2023-02-16 23:56:59'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-04-25 12:14:58' GROUP BY b.name;
  params:
  - '2023-04-25 12:14:58'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-02-04 09:04:11' GROUP BY b.name;
  params:
  - '2023-02-04 09:04:11'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Menden (Sauerland)' AND f.timestamp BETWEEN '2023-08-14 14:54:00' AND '2023-08-17 07:29:41' AND f.altitude < 1250 GROUP BY g.name, f.flightid;
  params:
  - - '2023-08-14 14:54:00'
    - '2023-08-17 07:29:41'
  - Gem Menden (Sauerland)
  - 1250
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Solingen' WHERE f.timestamp BETWEEN '2023-05-12 08:24:26' AND '2023-05-14 02:29:55' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-05-12 08:24:26'
    - '2023-05-14 02:29:55'
  - Krs Solingen
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-02-16 05:35:38' GROUP BY b.name;
  params:
  - '2023-02-16 05:35:38'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-11-14 17:46:27' GROUP BY b.name;
  params:
  - '2023-11-14 17:46:27'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Wesseling' AND f.timestamp BETWEEN '2023-11-14 16:10:18' AND '2023-11-24 23:29:13' AND f.altitude < 1110 GROUP BY g.name, f.flightid;
  params:
  - - '2023-11-14 16:10:18'
    - '2023-11-24 23:29:13'
  - Gem Wesseling
  - 1110
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-07-16 17:10:30' GROUP BY b.name;
  params:
  - '2023-07-16 17:10:30'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-12-21'::timestamp, DATE '2023-12-21'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Rietberg' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-12-21'
  - Gem Rietberg
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Muenster' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-12-19 07:39:00' AND '2023-12-29 20:28:05';
  params:
  - - '2023-12-19 07:39:00'
    - '2023-12-29 20:28:05'
  - Krs Muenster
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 7.366233885980971e-06) WHERE c.name = 'Steinfurt' AND f.timestamp BETWEEN '2023-11-11 02:31:28' AND '2023-11-16 03:33:13';
  params:
  - - '2023-11-11 02:31:28'
    - '2023-11-16 03:33:13'
  - Steinfurt
  - 7.366233885980971e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.4501270184531876e-05) WHERE c.name = 'Borgholzhausen' AND f.timestamp BETWEEN '2023-05-18 09:52:14' AND '2023-05-21 14:45:46';
  params:
  - - '2023-05-18 09:52:14'
    - '2023-05-21 14:45:46'
  - Borgholzhausen
  - 1.4501270184531876e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Heek' AND f.timestamp BETWEEN '2023-08-07 12:22:56' AND '2023-08-16 12:59:02' AND f.altitude < 570 GROUP BY g.name, f.flightid;
  params:
  - - '2023-08-07 12:22:56'
    - '2023-08-16 12:59:02'
  - Gem Heek
  - 570
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Oberbergischer Kreis' WHERE f.timestamp BETWEEN '2023-01-03 18:14:25' AND '2023-01-03 21:59:37' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-01-03 18:14:25'
    - '2023-01-03 21:59:37'
  - Krs Oberbergischer Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-24'::timestamp, DATE '2023-09-24'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Schwerte' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-09-24'
  - Gem Schwerte
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-16'::timestamp, DATE '2023-10-16'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Kempen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-10-16'
  - Gem Kempen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Staedteregion Aachen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-03-27 10:43:16' AND '2023-04-03 17:49:00';
  params:
  - - '2023-03-27 10:43:16'
    - '2023-04-03 17:49:00'
  - Krs Staedteregion Aachen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Remscheid' WHERE f.timestamp BETWEEN '2023-07-16 01:40:25' AND '2023-07-17 02:11:25' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-07-16 01:40:25'
    - '2023-07-17 02:11:25'
  - Krs Remscheid
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Warendorf' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-09-07 19:43:15' AND '2023-09-20 01:48:12';
  params:
  - - '2023-09-07 19:43:15'
    - '2023-09-20 01:48:12'
  - Krs Warendorf
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Kuerten' AND f.timestamp BETWEEN '2023-12-13 07:39:08' AND '2023-12-23 07:42:43' AND f.altitude < 580 GROUP BY g.name, f.flightid;
  params:
  - - '2023-12-13 07:39:08'
    - '2023-12-23 07:42:43'
  - Gem Kuerten
  - 580
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-05'::timestamp, DATE '2023-10-05'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Lage' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-10-05'
  - Gem Lage
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Eslohe (Sauerland)' AND f.timestamp BETWEEN '2023-03-31 14:17:54' AND '2023-04-10 20:51:28' AND f.altitude < 690 GROUP BY g.name, f.flightid;
  params:
  - - '2023-03-31 14:17:54'
    - '2023-04-10 20:51:28'
  - Gem Eslohe (Sauerland)
  - 690
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.4304744445535147e-05) WHERE c.name = 'Gladbeck' AND f.timestamp BETWEEN '2023-11-02 03:34:17' AND '2023-11-14 12:02:48';
  params:
  - - '2023-11-02 03:34:17'
    - '2023-11-14 12:02:48'
  - Gladbeck
  - 1.4304744445535147e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Hille' AND f.timestamp BETWEEN '2023-08-07 20:45:08' AND '2023-08-17 12:23:52' AND f.altitude < 1360 GROUP BY g.name, f.flightid;
  params:
  - - '2023-08-07 20:45:08'
    - '2023-08-17 12:23:52'
  - Gem Hille
  - 1360
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-08'::timestamp, DATE '2023-06-08'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Oberhausen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-06-08'
  - Gem Oberhausen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Dahlem' AND f.timestamp BETWEEN '2023-04-05 23:56:59' AND '2023-04-12 10:57:31' AND f.altitude < 1180 GROUP BY g.name, f.flightid;
  params:
  - - '2023-04-05 23:56:59'
    - '2023-04-12 10:57:31'
  - Gem Dahlem
  - 1180
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 5.693965555444058e-06) WHERE c.name = 'Bedburg' AND f.timestamp BETWEEN '2023-07-12 19:24:27' AND '2023-07-20 11:25:40';
  params:
  - - '2023-07-12 19:24:27'
    - '2023-07-20 11:25:40'
  - Bedburg
  - 5.693965555444058e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Kleve' WHERE f.timestamp BETWEEN '2023-04-26 13:04:29' AND '2023-04-27 02:12:13' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-04-26 13:04:29'
    - '2023-04-27 02:12:13'
  - Krs Kleve
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-11'::timestamp, DATE '2023-11-11'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Remscheid' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-11-11'
  - Gem Remscheid
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-04-29 13:53:06' GROUP BY b.name;
  params:
  - '2023-04-29 13:53:06'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Brilon' AND f.timestamp BETWEEN '2023-09-16 20:27:32' AND '2023-09-20 19:28:09' AND f.altitude < 780 GROUP BY g.name, f.flightid;
  params:
  - - '2023-09-16 20:27:32'
    - '2023-09-20 19:28:09'
  - Gem Brilon
  - 780
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-24'::timestamp, DATE '2023-05-24'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Netphen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-05-24'
  - Gem Netphen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Radevormwald' AND f.timestamp BETWEEN '2023-11-04 09:41:18' AND '2023-11-08 18:51:40' AND f.altitude < 580 GROUP BY g.name, f.flightid;
  params:
  - - '2023-11-04 09:41:18'
    - '2023-11-08 18:51:40'
  - Gem Radevormwald
  - 580
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 4.751970160266768e-06) WHERE c.name = 'Willebadessen' AND f.timestamp BETWEEN '2023-09-13 04:20:52' AND '2023-09-23 02:57:23';
  params:
  - - '2023-09-13 04:20:52'
    - '2023-09-23 02:57:23'
  - Willebadessen
  - 4.751970160266768e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-08-17 07:16:58' GROUP BY b.name;
  params:
  - '2023-08-17 07:16:58'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Paderborn' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-10-06 06:27:44' AND '2023-10-16 01:00:20';
  params:
  - - '2023-10-06 06:27:44'
    - '2023-10-16 01:00:20'
  - Krs Paderborn
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Wiehl' AND f.timestamp BETWEEN '2023-09-08 16:56:17' AND '2023-09-11 03:39:00' AND f.altitude < 970 GROUP BY g.name, f.flightid;
  params:
  - - '2023-09-08 16:56:17'
    - '2023-09-11 03:39:00'
  - Gem Wiehl
  - 970
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Recklinghausen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-04-21 05:30:39' AND '2023-04-23 16:28:27';
  params:
  - - '2023-04-21 05:30:39'
    - '2023-04-23 16:28:27'
  - Krs Recklinghausen
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-05-31 10:36:11' GROUP BY b.name;
  params:
  - '2023-05-31 10:36:11'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 5.738051437663674e-06) WHERE c.name = 'Geseke' AND f.timestamp BETWEEN '2023-09-09 22:53:44' AND '2023-09-15 09:36:37';
  params:
  - - '2023-09-09 22:53:44'
    - '2023-09-15 09:36:37'
  - Geseke
  - 5.738051437663674e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Duelmen' AND f.timestamp BETWEEN '2023-04-18 08:31:10' AND '2023-04-25 00:15:48' AND f.altitude < 850 GROUP BY g.name, f.flightid;
  params:
  - - '2023-04-18 08:31:10'
    - '2023-04-25 00:15:48'
  - Gem Duelmen
  - 850
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Oberbergischer Kreis' WHERE f.timestamp BETWEEN '2023-02-16 12:18:37' AND '2023-02-17 22:47:20' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-02-16 12:18:37'
    - '2023-02-17 22:47:20'
  - Krs Oberbergischer Kreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Hochsauerlandkreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-06-06 07:16:54' AND '2023-06-19 11:09:04';
  params:
  - - '2023-06-06 07:16:54'
    - '2023-06-19 11:09:04'
  - Krs Hochsauerlandkreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-07-16'::timestamp, DATE '2023-07-16'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Krefeld' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-07-16'
  - Gem Krefeld
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-01-21 06:09:27' GROUP BY b.name;
  params:
  - '2023-01-21 06:09:27'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Waldbroel' AND f.timestamp BETWEEN '2023-07-28 15:07:06' AND '2023-07-30 18:57:55' AND f.altitude < 1090 GROUP BY g.name, f.flightid;
  params:
  - - '2023-07-28 15:07:06'
    - '2023-07-30 18:57:55'
  - Gem Waldbroel
  - 1090
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-08'::timestamp, DATE '2023-05-08'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Werne' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-05-08'
  - Gem Werne
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-12'::timestamp, DATE '2023-08-12'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Burscheid' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-08-12'
  - Gem Burscheid
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Blomberg' AND f.timestamp BETWEEN '2023-05-19 22:09:11' AND '2023-06-01 04:13:15' AND f.altitude < 980 GROUP BY g.name, f.flightid;
  params:
  - - '2023-05-19 22:09:11'
    - '2023-06-01 04:13:15'
  - Gem Blomberg
  - 980
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 6.3636901568394774e-06) WHERE c.name = 'Detmold' AND f.timestamp BETWEEN '2023-09-24 07:28:58' AND '2023-10-07 08:45:03';
  params:
  - - '2023-09-24 07:28:58'
    - '2023-10-07 08:45:03'
  - Detmold
  - 6.3636901568394774e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-04-21 02:39:53' GROUP BY b.name;
  params:
  - '2023-04-21 02:39:53'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.4441788368032206e-05) WHERE c.name = 'Stadtlohn' AND f.timestamp BETWEEN '2023-09-20 22:42:30' AND '2023-09-23 17:27:35';
  params:
  - - '2023-09-20 22:42:30'
    - '2023-09-23 17:27:35'
  - Stadtlohn
  - 1.4441788368032206e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Koeln' WHERE f.timestamp BETWEEN '2023-06-30 05:21:54' AND '2023-06-30 18:02:07' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-06-30 05:21:54'
    - '2023-06-30 18:02:07'
  - Krs Koeln
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Soest' WHERE f.timestamp BETWEEN '2023-04-26 08:12:27' AND '2023-04-26 18:00:41' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-04-26 08:12:27'
    - '2023-04-26 18:00:41'
  - Krs Soest
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Rhein-Sieg-Kreis' WHERE f.timestamp BETWEEN '2023-11-20 19:28:24' AND '2023-11-21 09:06:10' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-11-20 19:28:24'
    - '2023-11-21 09:06:10'
  - Krs Rhein-Sieg-Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-08'::timestamp, DATE '2023-03-08'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Wuppertal' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-03-08'
  - Gem Wuppertal
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Euskirchen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-02-17 16:20:02' AND '2023-03-02 19:49:26';
  params:
  - - '2023-02-17 16:20:02'
    - '2023-03-02 19:49:26'
  - Krs Euskirchen
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-08-12 02:12:00' GROUP BY b.name;
  params:
  - '2023-08-12 02:12:00'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-30'::timestamp, DATE '2023-11-30'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Gummersbach' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-11-30'
  - Gem Gummersbach
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-11'::timestamp, DATE '2023-03-11'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Bestwig' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-03-11'
  - Gem Bestwig
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-17'::timestamp, DATE '2023-05-17'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Loehne' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-05-17'
  - Gem Loehne
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 9.10052686468742e-06) WHERE c.name = 'Balve' AND f.timestamp BETWEEN '2023-11-30 11:03:21' AND '2023-12-05 21:13:06';
  params:
  - - '2023-11-30 11:03:21'
    - '2023-12-05 21:13:06'
  - Balve
  - 9.10052686468742e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-09-04 19:39:23' GROUP BY b.name;
  params:
  - '2023-09-04 19:39:23'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-05-15 08:07:07' GROUP BY b.name;
  params:
  - '2023-05-15 08:07:07'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-09-20 17:16:09' GROUP BY b.name;
  params:
  - '2023-09-20 17:16:09'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Schlangen' AND f.timestamp BETWEEN '2023-08-25 06:09:56' AND '2023-09-05 17:46:24' AND f.altitude < 570 GROUP BY g.name, f.flightid;
  params:
  - - '2023-08-25 06:09:56'
    - '2023-09-05 17:46:24'
  - Gem Schlangen
  - 570
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 5.719379209573473e-06) WHERE c.name = 'Billerbeck' AND f.timestamp BETWEEN '2023-03-09 18:14:28' AND '2023-03-13 06:14:31';
  params:
  - - '2023-03-09 18:14:28'
    - '2023-03-13 06:14:31'
  - Billerbeck
  - 5.719379209573473e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Marienheide' AND f.timestamp BETWEEN '2023-01-20 00:56:14' AND '2023-02-02 10:23:55' AND f.altitude < 1120 GROUP BY g.name, f.flightid;
  params:
  - - '2023-01-20 00:56:14'
    - '2023-02-02 10:23:55'
  - Gem Marienheide
  - 1120
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-07-02 08:42:38' GROUP BY b.name;
  params:
  - '2023-07-02 08:42:38'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Sonsbeck' AND f.timestamp BETWEEN '2023-09-04 19:56:48' AND '2023-09-08 21:47:53' AND f.altitude < 680 GROUP BY g.name, f.flightid;
  params:
  - - '2023-09-04 19:56:48'
    - '2023-09-08 21:47:53'
  - Gem Sonsbeck
  - 680
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Hoexter' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-10-13 07:19:11' AND '2023-10-23 12:03:13';
  params:
  - - '2023-10-13 07:19:11'
    - '2023-10-23 12:03:13'
  - Krs Hoexter
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Borken' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-07-23 06:29:32' AND '2023-08-06 00:06:52';
  params:
  - - '2023-07-23 06:29:32'
    - '2023-08-06 00:06:52'
  - Krs Borken
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Viersen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-07-10 00:36:59' AND '2023-07-15 01:16:25';
  params:
  - - '2023-07-10 00:36:59'
    - '2023-07-15 01:16:25'
  - Krs Viersen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Herford' WHERE f.timestamp BETWEEN '2023-04-30 19:18:38' AND '2023-04-30 21:15:47' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-04-30 19:18:38'
    - '2023-04-30 21:15:47'
  - Krs Herford
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 6.944526640914574e-06) WHERE c.name = 'Preußisch Oldendorf' AND f.timestamp BETWEEN '2023-03-15 19:30:28' AND '2023-03-22 08:02:10';
  params:
  - - '2023-03-15 19:30:28'
    - '2023-03-22 08:02:10'
  - Preußisch Oldendorf
  - 6.944526640914574e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 8.837403497821176e-06) WHERE c.name = 'Kamen' AND f.timestamp BETWEEN '2023-09-04 12:32:02' AND '2023-09-16 15:35:49';
  params:
  - - '2023-09-04 12:32:02'
    - '2023-09-16 15:35:49'
  - Kamen
  - 8.837403497821176e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Lippe' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-12-31 06:03:07' AND '2023-12-31 23:59:59';
  params:
  - - '2023-12-31 06:03:07'
    - '2023-12-31 23:59:59'
  - Krs Lippe
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-11'::timestamp, DATE '2023-04-11'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Netphen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-04-11'
  - Gem Netphen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Mettmann' WHERE f.timestamp BETWEEN '2023-08-13 05:14:51' AND '2023-08-15 02:25:37' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-08-13 05:14:51'
    - '2023-08-15 02:25:37'
  - Krs Mettmann
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-04-15 19:07:28' GROUP BY b.name;
  params:
  - '2023-04-15 19:07:28'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-27'::timestamp, DATE '2023-10-27'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Wipperfuerth' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-10-27'
  - Gem Wipperfuerth
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-01-06 03:41:26' GROUP BY b.name;
  params:
  - '2023-01-06 03:41:26'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Hoexter' WHERE f.timestamp BETWEEN '2023-05-08 02:10:27' AND '2023-05-09 23:46:10' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-05-08 02:10:27'
    - '2023-05-09 23:46:10'
  - Krs Hoexter
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Eslohe (Sauerland)' AND f.timestamp BETWEEN '2023-12-15 22:12:00' AND '2023-12-28 22:05:51' AND f.altitude < 630 GROUP BY g.name, f.flightid;
  params:
  - - '2023-12-15 22:12:00'
    - '2023-12-28 22:05:51'
  - Gem Eslohe (Sauerland)
  - 630
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-14'::timestamp, DATE '2023-08-14'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Plettenberg' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-08-14'
  - Gem Plettenberg
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Recklinghausen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-03-08 05:34:30' AND '2023-03-13 07:08:44';
  params:
  - - '2023-03-08 05:34:30'
    - '2023-03-13 07:08:44'
  - Krs Recklinghausen
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-06-22 04:46:15' GROUP BY b.name;
  params:
  - '2023-06-22 04:46:15'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-12-14'::timestamp, DATE '2023-12-14'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Duisburg' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-12-14'
  - Gem Duisburg
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.5065187190719926e-05) WHERE c.name = 'Heiligenhaus' AND f.timestamp BETWEEN '2023-05-27 00:16:35' AND '2023-06-09 00:46:44';
  params:
  - - '2023-05-27 00:16:35'
    - '2023-06-09 00:46:44'
  - Heiligenhaus
  - 1.5065187190719926e-05
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-08-20 16:08:25' GROUP BY b.name;
  params:
  - '2023-08-20 16:08:25'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Hamm' AND f.timestamp BETWEEN '2023-01-25 10:22:46' AND '2023-02-04 06:04:11' AND f.altitude < 610 GROUP BY g.name, f.flightid;
  params:
  - - '2023-01-25 10:22:46'
    - '2023-02-04 06:04:11'
  - Gem Hamm
  - 610
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-09-19 23:59:14' GROUP BY b.name;
  params:
  - '2023-09-19 23:59:14'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Hoexter' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-07-23 19:51:08' AND '2023-08-02 13:43:12';
  params:
  - - '2023-07-23 19:51:08'
    - '2023-08-02 13:43:12'
  - Krs Hoexter
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Steinfurt' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-08-08 11:05:41' AND '2023-08-20 06:10:27';
  params:
  - - '2023-08-08 11:05:41'
    - '2023-08-20 06:10:27'
  - Krs Steinfurt
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Swisttal' AND f.timestamp BETWEEN '2023-12-25 01:42:50' AND '2023-12-28 07:10:41' AND f.altitude < 1240 GROUP BY g.name, f.flightid;
  params:
  - - '2023-12-25 01:42:50'
    - '2023-12-28 07:10:41'
  - Gem Swisttal
  - 1240
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 9.651650134637463e-06) WHERE c.name = 'Duisburg' AND f.timestamp BETWEEN '2023-02-20 18:21:14' AND '2023-02-23 23:58:55';
  params:
  - - '2023-02-20 18:21:14'
    - '2023-02-23 23:58:55'
  - Duisburg
  - 9.651650134637463e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Steinfurt' WHERE f.timestamp BETWEEN '2023-10-19 17:38:25' AND '2023-10-20 10:05:12' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-10-19 17:38:25'
    - '2023-10-20 10:05:12'
  - Krs Steinfurt
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Rhein-Sieg-Kreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-07-18 12:10:05' AND '2023-07-30 19:29:10';
  params:
  - - '2023-07-18 12:10:05'
    - '2023-07-30 19:29:10'
  - Krs Rhein-Sieg-Kreis
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Maerkischer Kreis' WHERE f.timestamp BETWEEN '2023-04-13 21:49:51' AND '2023-04-14 11:39:46' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-04-13 21:49:51'
    - '2023-04-14 11:39:46'
  - Krs Maerkischer Kreis
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-03-15 17:48:16' GROUP BY b.name;
  params:
  - '2023-03-15 17:48:16'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Oberhausen' WHERE f.timestamp BETWEEN '2023-05-07 09:04:47' AND '2023-05-09 07:32:43' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-05-07 09:04:47'
    - '2023-05-09 07:32:43'
  - Krs Oberhausen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Bad Muenstereifel' AND f.timestamp BETWEEN '2023-04-21 03:37:29' AND '2023-04-26 08:44:53' AND f.altitude < 920 GROUP BY g.name, f.flightid;
  params:
  - - '2023-04-21 03:37:29'
    - '2023-04-26 08:44:53'
  - Gem Bad Muenstereifel
  - 920
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Rhein-Sieg-Kreis' WHERE f.timestamp BETWEEN '2023-03-09 00:33:52' AND '2023-03-10 16:06:15' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-03-09 00:33:52'
    - '2023-03-10 16:06:15'
  - Krs Rhein-Sieg-Kreis
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Lippe' WHERE f.timestamp BETWEEN '2023-05-04 13:34:52' AND '2023-05-05 10:58:54' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-05-04 13:34:52'
    - '2023-05-05 10:58:54'
  - Krs Lippe
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.5514036604579964e-05) WHERE c.name = 'Borken' AND f.timestamp BETWEEN '2023-10-22 10:22:16' AND '2023-10-24 17:47:23';
  params:
  - - '2023-10-22 10:22:16'
    - '2023-10-24 17:47:23'
  - Borken
  - 1.5514036604579964e-05
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 4.192269584239521e-06) WHERE c.name = 'Warstein' AND f.timestamp BETWEEN '2023-09-16 20:35:58' AND '2023-09-22 03:33:45';
  params:
  - - '2023-09-16 20:35:58'
    - '2023-09-22 03:33:45'
  - Warstein
  - 4.192269584239521e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Wegberg' AND f.timestamp BETWEEN '2023-12-18 02:38:34' AND '2023-12-31 23:59:59' AND f.altitude < 1060 GROUP BY g.name, f.flightid;
  params:
  - - '2023-12-18 02:38:34'
    - '2023-12-31 23:59:59'
  - Gem Wegberg
  - 1060
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Erwitte' AND f.timestamp BETWEEN '2023-05-11 10:15:23' AND '2023-05-17 05:42:51' AND f.altitude < 1360 GROUP BY g.name, f.flightid;
  params:
  - - '2023-05-11 10:15:23'
    - '2023-05-17 05:42:51'
  - Gem Erwitte
  - 1360
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Mettmann' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-12-13 07:49:13' AND '2023-12-18 04:51:20';
  params:
  - - '2023-12-13 07:49:13'
    - '2023-12-18 04:51:20'
  - Krs Mettmann
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.4074979886201051e-05) WHERE c.name = 'Sprockhoevel' AND f.timestamp BETWEEN '2023-12-03 09:06:28' AND '2023-12-13 15:30:39';
  params:
  - - '2023-12-03 09:06:28'
    - '2023-12-13 15:30:39'
  - Sprockhoevel
  - 1.4074979886201051e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Hochsauerlandkreis' WHERE f.timestamp BETWEEN '2023-05-09 05:26:57' AND '2023-05-10 13:34:25' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-05-09 05:26:57'
    - '2023-05-10 13:34:25'
  - Krs Hochsauerlandkreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 7.328876649382462e-06) WHERE c.name = 'Luedinghausen' AND f.timestamp BETWEEN '2023-03-23 06:45:32' AND '2023-03-29 08:39:56';
  params:
  - - '2023-03-23 06:45:32'
    - '2023-03-29 08:39:56'
  - Luedinghausen
  - 7.328876649382462e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Rhein-Sieg-Kreis' WHERE f.timestamp BETWEEN '2023-02-18 17:35:28' AND '2023-02-20 00:20:05' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-02-18 17:35:28'
    - '2023-02-20 00:20:05'
  - Krs Rhein-Sieg-Kreis
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-02-21 07:12:11' GROUP BY b.name;
  params:
  - '2023-02-21 07:12:11'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Hamm' WHERE f.timestamp BETWEEN '2023-10-27 16:01:34' AND '2023-10-29 01:06:09' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-10-27 16:01:34'
    - '2023-10-29 01:06:09'
  - Krs Hamm
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-11-01 20:14:28' GROUP BY b.name;
  params:
  - '2023-11-01 20:14:28'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Bielefeld' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-06-26 07:14:14' AND '2023-07-04 03:03:57';
  params:
  - - '2023-06-26 07:14:14'
    - '2023-07-04 03:03:57'
  - Krs Bielefeld
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 4.412866480119156e-06) WHERE c.name = 'Waldbroel' AND f.timestamp BETWEEN '2023-08-26 19:19:41' AND '2023-08-30 17:50:50';
  params:
  - - '2023-08-26 19:19:41'
    - '2023-08-30 17:50:50'
  - Waldbroel
  - 4.412866480119156e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 5.151208624067285e-06) WHERE c.name = 'Solingen' AND f.timestamp BETWEEN '2023-10-06 10:19:47' AND '2023-10-14 09:24:44';
  params:
  - - '2023-10-06 10:19:47'
    - '2023-10-14 09:24:44'
  - Solingen
  - 5.151208624067285e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Euskirchen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-02-06 10:37:37' AND '2023-02-17 04:37:23';
  params:
  - - '2023-02-06 10:37:37'
    - '2023-02-17 04:37:23'
  - Krs Euskirchen
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 8.075396800315131e-06) WHERE c.name = 'Wiehl' AND f.timestamp BETWEEN '2023-05-01 00:16:12' AND '2023-05-06 13:48:52';
  params:
  - - '2023-05-01 00:16:12'
    - '2023-05-06 13:48:52'
  - Wiehl
  - 8.075396800315131e-06
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-10'::timestamp, DATE '2023-09-10'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Koenigswinter' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-09-10'
  - Gem Koenigswinter
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Euskirchen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-11-05 16:04:21' AND '2023-11-09 13:01:58';
  params:
  - - '2023-11-05 16:04:21'
    - '2023-11-09 13:01:58'
  - Krs Euskirchen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Mettmann' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-03-18 23:18:42' AND '2023-03-24 22:48:40';
  params:
  - - '2023-03-18 23:18:42'
    - '2023-03-24 22:48:40'
  - Krs Mettmann
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Staedteregion Aachen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-05-09 05:49:46' AND '2023-05-11 10:28:48';
  params:
  - - '2023-05-09 05:49:46'
    - '2023-05-11 10:28:48'
  - Krs Staedteregion Aachen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Roedinghausen' AND f.timestamp BETWEEN '2023-09-14 08:35:47' AND '2023-09-28 15:53:15' AND f.altitude < 1340 GROUP BY g.name, f.flightid;
  params:
  - - '2023-09-14 08:35:47'
    - '2023-09-28 15:53:15'
  - Gem Roedinghausen
  - 1340
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-24'::timestamp, DATE '2023-05-24'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Rosendahl' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-05-24'
  - Gem Rosendahl
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Unna' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-10-18 10:13:06' AND '2023-10-28 11:08:02';
  params:
  - - '2023-10-18 10:13:06'
    - '2023-10-28 11:08:02'
  - Krs Unna
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-08-19 08:46:07' GROUP BY b.name;
  params:
  - '2023-08-19 08:46:07'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Hoexter' WHERE f.timestamp BETWEEN '2023-02-27 01:29:15' AND '2023-02-27 01:59:15' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-02-27 01:29:15'
    - '2023-02-27 01:59:15'
  - Krs Hoexter
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Wegberg' AND f.timestamp BETWEEN '2023-10-17 15:36:52' AND '2023-10-20 08:40:29' AND f.altitude < 750 GROUP BY g.name, f.flightid;
  params:
  - - '2023-10-17 15:36:52'
    - '2023-10-20 08:40:29'
  - Gem Wegberg
  - 750
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-03'::timestamp, DATE '2023-11-03'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Detmold' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-11-03'
  - Gem Detmold
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Rheinisch-Bergischer Kreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-09-20 13:22:12' AND '2023-09-28 03:33:24';
  params:
  - - '2023-09-20 13:22:12'
    - '2023-09-28 03:33:24'
  - Krs Rheinisch-Bergischer Kreis
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.4329619684905408e-05) WHERE c.name = 'Zuelpich' AND f.timestamp BETWEEN '2023-12-07 03:49:55' AND '2023-12-12 05:35:34';
  params:
  - - '2023-12-07 03:49:55'
    - '2023-12-12 05:35:34'
  - Zuelpich
  - 1.4329619684905408e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Rhein-Kreis Neuss' WHERE f.timestamp BETWEEN '2023-07-29 11:05:52' AND '2023-07-29 18:49:05' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-07-29 11:05:52'
    - '2023-07-29 18:49:05'
  - Krs Rhein-Kreis Neuss
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Krefeld' WHERE f.timestamp BETWEEN '2023-06-15 11:54:29' AND '2023-06-17 08:41:22' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-06-15 11:54:29'
    - '2023-06-17 08:41:22'
  - Krs Krefeld
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-06-26 20:58:51' GROUP BY b.name;
  params:
  - '2023-06-26 20:58:51'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Recklinghausen' WHERE f.timestamp BETWEEN '2023-10-22 23:53:05' AND '2023-10-23 03:37:27' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-10-22 23:53:05'
    - '2023-10-23 03:37:27'
  - Krs Recklinghausen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Borgentreich' AND f.timestamp BETWEEN '2023-01-15 08:32:52' AND '2023-01-25 06:25:40' AND f.altitude < 900 GROUP BY g.name, f.flightid;
  params:
  - - '2023-01-15 08:32:52'
    - '2023-01-25 06:25:40'
  - Gem Borgentreich
  - 900
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-04-15 17:25:34' GROUP BY b.name;
  params:
  - '2023-04-15 17:25:34'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Neunkirchen-Seelscheid' AND f.timestamp BETWEEN '2023-08-05 05:13:50' AND '2023-08-19 19:46:45' AND f.altitude < 1180 GROUP BY g.name, f.flightid;
  params:
  - - '2023-08-05 05:13:50'
    - '2023-08-19 19:46:45'
  - Gem Neunkirchen-Seelscheid
  - 1180
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Mettmann' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-04-11 21:07:38' AND '2023-04-15 02:37:51';
  params:
  - - '2023-04-11 21:07:38'
    - '2023-04-15 02:37:51'
  - Krs Mettmann
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-04-17 13:05:07' GROUP BY b.name;
  params:
  - '2023-04-17 13:05:07'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Minden-Luebbecke' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-07-19 22:04:14' AND '2023-07-27 21:44:05';
  params:
  - - '2023-07-19 22:04:14'
    - '2023-07-27 21:44:05'
  - Krs Minden-Luebbecke
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Herford' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-11-03 21:45:17' AND '2023-11-07 03:41:14';
  params:
  - - '2023-11-03 21:45:17'
    - '2023-11-07 03:41:14'
  - Krs Herford
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-15'::timestamp, DATE '2023-03-15'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Rheine' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-03-15'
  - Gem Rheine
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Heinsberg' WHERE f.timestamp BETWEEN '2023-12-09 11:51:53' AND '2023-12-09 17:58:24' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-12-09 11:51:53'
    - '2023-12-09 17:58:24'
  - Krs Heinsberg
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 9.399336798369808e-06) WHERE c.name = 'Wermelskirchen' AND f.timestamp BETWEEN '2023-11-12 01:40:49' AND '2023-11-17 04:58:29';
  params:
  - - '2023-11-12 01:40:49'
    - '2023-11-17 04:58:29'
  - Wermelskirchen
  - 9.399336798369808e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-07-15 19:16:39' GROUP BY b.name;
  params:
  - '2023-07-15 19:16:39'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Lippe' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-02-11 02:58:05' AND '2023-02-16 03:43:31';
  params:
  - - '2023-02-11 02:58:05'
    - '2023-02-16 03:43:31'
  - Krs Lippe
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Hochsauerlandkreis' WHERE f.timestamp BETWEEN '2023-05-19 02:08:13' AND '2023-05-20 07:13:02' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-05-19 02:08:13'
    - '2023-05-20 07:13:02'
  - Krs Hochsauerlandkreis
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-12-13 12:07:25' GROUP BY b.name;
  params:
  - '2023-12-13 12:07:25'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-23'::timestamp, DATE '2023-04-23'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Marienmuenster' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-04-23'
  - Gem Marienmuenster
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-26'::timestamp, DATE '2023-11-26'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Korschenbroich' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-11-26'
  - Gem Korschenbroich
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-10-03'::timestamp, DATE '2023-10-03'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Radevormwald' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-10-03'
  - Gem Radevormwald
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-04-13 00:13:39' GROUP BY b.name;
  params:
  - '2023-04-13 00:13:39'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-27'::timestamp, DATE '2023-11-27'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Welver' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-11-27'
  - Gem Welver
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.431775701112532e-05) WHERE c.name = 'Bocholt' AND f.timestamp BETWEEN '2023-09-18 21:22:16' AND '2023-09-24 01:32:29';
  params:
  - - '2023-09-18 21:22:16'
    - '2023-09-24 01:32:29'
  - Bocholt
  - 1.431775701112532e-05
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-27'::timestamp, DATE '2023-03-27'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Ruppichteroth' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-03-27'
  - Gem Ruppichteroth
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-22'::timestamp, DATE '2023-08-22'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Hueckeswagen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-08-22'
  - Gem Hueckeswagen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Kleve' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-12-28 05:02:05' AND '2023-12-31 23:59:59';
  params:
  - - '2023-12-28 05:02:05'
    - '2023-12-31 23:59:59'
  - Krs Kleve
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Hattingen' AND f.timestamp BETWEEN '2023-02-17 08:55:27' AND '2023-02-25 11:44:32' AND f.altitude < 1310 GROUP BY g.name, f.flightid;
  params:
  - - '2023-02-17 08:55:27'
    - '2023-02-25 11:44:32'
  - Gem Hattingen
  - 1310
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Isselburg' AND f.timestamp BETWEEN '2023-06-07 06:30:55' AND '2023-06-17 22:58:13' AND f.altitude < 1440 GROUP BY g.name, f.flightid;
  params:
  - - '2023-06-07 06:30:55'
    - '2023-06-17 22:58:13'
  - Gem Isselburg
  - 1440
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-09-10 14:54:24' GROUP BY b.name;
  params:
  - '2023-09-10 14:54:24'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Dueren' WHERE f.timestamp BETWEEN '2023-02-24 15:43:22' AND '2023-02-26 01:46:56' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-02-24 15:43:22'
    - '2023-02-26 01:46:56'
  - Krs Dueren
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Bielefeld' WHERE f.timestamp BETWEEN '2023-02-28 07:27:18' AND '2023-03-01 19:45:40' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-02-28 07:27:18'
    - '2023-03-01 19:45:40'
  - Krs Bielefeld
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Bielefeld' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-02-19 01:23:05' AND '2023-02-27 02:51:37';
  params:
  - - '2023-02-19 01:23:05'
    - '2023-02-27 02:51:37'
  - Krs Bielefeld
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-01-13'::timestamp, DATE '2023-01-13'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Kleve' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-01-13'
  - Gem Kleve
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 7.694074910097557e-06) WHERE c.name = 'Schmallenberg' AND f.timestamp BETWEEN '2023-12-20 22:30:25' AND '2023-12-31 23:59:59';
  params:
  - - '2023-12-20 22:30:25'
    - '2023-12-31 23:59:59'
  - Schmallenberg
  - 7.694074910097557e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.4593061516354586e-05) WHERE c.name = 'Cologne' AND f.timestamp BETWEEN '2023-01-26 12:12:27' AND '2023-02-05 18:30:20';
  params:
  - - '2023-01-26 12:12:27'
    - '2023-02-05 18:30:20'
  - Cologne
  - 1.4593061516354586e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Wuppertal' AND f.timestamp BETWEEN '2023-09-01 22:50:54' AND '2023-09-15 11:16:11' AND f.altitude < 880 GROUP BY g.name, f.flightid;
  params:
  - - '2023-09-01 22:50:54'
    - '2023-09-15 11:16:11'
  - Gem Wuppertal
  - 880
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-09-01'::timestamp, DATE '2023-09-01'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Huertgenwald' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-09-01'
  - Gem Huertgenwald
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Soest' WHERE f.timestamp BETWEEN '2023-06-05 16:55:49' AND '2023-06-06 15:19:22' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-06-05 16:55:49'
    - '2023-06-06 15:19:22'
  - Krs Soest
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-12-22 05:19:05' GROUP BY b.name;
  params:
  - '2023-12-22 05:19:05'
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 6.593307348287645e-06) WHERE c.name = 'Freudenberg' AND f.timestamp BETWEEN '2023-04-16 21:35:43' AND '2023-04-22 16:43:42';
  params:
  - - '2023-04-16 21:35:43'
    - '2023-04-22 16:43:42'
  - Freudenberg
  - 6.593307348287645e-06
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Steinfurt' WHERE f.timestamp BETWEEN '2023-03-10 01:41:37' AND '2023-03-11 15:15:01' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-03-10 01:41:37'
    - '2023-03-11 15:15:01'
  - Krs Steinfurt
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Rhein-Sieg-Kreis' WHERE f.timestamp BETWEEN '2023-03-29 10:33:42' AND '2023-03-31 01:38:23' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-03-29 10:33:42'
    - '2023-03-31 01:38:23'
  - Krs Rhein-Sieg-Kreis
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Straelen' AND f.timestamp BETWEEN '2023-12-01 03:32:07' AND '2023-12-06 12:31:14' AND f.altitude < 1120 GROUP BY g.name, f.flightid;
  params:
  - - '2023-12-01 03:32:07'
    - '2023-12-06 12:31:14'
  - Gem Straelen
  - 1120
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Wuppertal' WHERE f.timestamp BETWEEN '2023-01-22 04:05:05' AND '2023-01-22 09:14:44' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-01-22 04:05:05'
    - '2023-01-22 09:14:44'
  - Krs Wuppertal
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Rheinisch-Bergischer Kreis' WHERE f.timestamp BETWEEN '2023-12-31 08:16:02' AND '2023-12-31 18:14:43' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-12-31 08:16:02'
    - '2023-12-31 18:14:43'
  - Krs Rheinisch-Bergischer Kreis
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-10-29 06:24:21' GROUP BY b.name;
  params:
  - '2023-10-29 06:24:21'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Mettmann' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-03-07 12:23:03' AND '2023-03-21 21:31:20';
  params:
  - - '2023-03-07 12:23:03'
    - '2023-03-21 21:31:20'
  - Krs Mettmann
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 3.185221822276534e-06) WHERE c.name = 'Schwelm' AND f.timestamp BETWEEN '2023-11-01 00:32:55' AND '2023-11-10 10:55:01';
  params:
  - - '2023-11-01 00:32:55'
    - '2023-11-10 10:55:01'
  - Schwelm
  - 3.185221822276534e-06
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Hoexter' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-02-12 02:47:27' AND '2023-02-27 01:25:46';
  params:
  - - '2023-02-12 02:47:27'
    - '2023-02-27 01:25:46'
  - Krs Hoexter
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-08-12 23:37:44' GROUP BY b.name;
  params:
  - '2023-08-12 23:37:44'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-10-02 18:55:31' GROUP BY b.name;
  params:
  - '2023-10-02 18:55:31'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-17'::timestamp, DATE '2023-08-17'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Koenigswinter' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-08-17'
  - Gem Koenigswinter
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 8.326843380029269e-06) WHERE c.name = 'Radevormwald' AND f.timestamp BETWEEN '2023-05-07 13:08:34' AND '2023-05-19 06:41:42';
  params:
  - - '2023-05-07 13:08:34'
    - '2023-05-19 06:41:42'
  - Radevormwald
  - 8.326843380029269e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-04-03 17:46:55' GROUP BY b.name;
  params:
  - '2023-04-03 17:46:55'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-09'::timestamp, DATE '2023-03-09'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Altena' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-03-09'
  - Gem Altena
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.4988886122351473e-05) WHERE c.name = 'Telgte' AND f.timestamp BETWEEN '2023-06-10 22:19:38' AND '2023-06-20 21:03:13';
  params:
  - - '2023-06-10 22:19:38'
    - '2023-06-20 21:03:13'
  - Telgte
  - 1.4988886122351473e-05
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Solingen' WHERE f.timestamp BETWEEN '2023-08-28 02:52:25' AND '2023-08-30 02:00:22' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-08-28 02:52:25'
    - '2023-08-30 02:00:22'
  - Krs Solingen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Ennepe-Ruhr-Kreis' WHERE f.timestamp BETWEEN '2023-02-04 03:00:29' AND '2023-02-05 21:25:31' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-02-04 03:00:29'
    - '2023-02-05 21:25:31'
  - Krs Ennepe-Ruhr-Kreis
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Pulheim' AND f.timestamp BETWEEN '2023-09-04 14:52:22' AND '2023-09-08 04:46:33' AND f.altitude < 1060 GROUP BY g.name, f.flightid;
  params:
  - - '2023-09-04 14:52:22'
    - '2023-09-08 04:46:33'
  - Gem Pulheim
  - 1060
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Kleve' WHERE f.timestamp BETWEEN '2023-07-08 06:47:59' AND '2023-07-08 08:22:20' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-07-08 06:47:59'
    - '2023-07-08 08:22:20'
  - Krs Kleve
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Petershagen' AND f.timestamp BETWEEN '2023-03-19 10:31:51' AND '2023-03-29 14:31:52' AND f.altitude < 870 GROUP BY g.name, f.flightid;
  params:
  - - '2023-03-19 10:31:51'
    - '2023-03-29 14:31:52'
  - Gem Petershagen
  - 870
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Wesel' WHERE f.timestamp BETWEEN '2023-03-09 11:11:30' AND '2023-03-10 02:20:14' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-03-09 11:11:30'
    - '2023-03-10 02:20:14'
  - Krs Wesel
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Oberbergischer Kreis' WHERE f.timestamp BETWEEN '2023-12-27 16:17:30' AND '2023-12-29 00:06:28' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-12-27 16:17:30'
    - '2023-12-29 00:06:28'
  - Krs Oberbergischer Kreis
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Recklinghausen' WHERE f.timestamp BETWEEN '2023-08-02 13:17:29' AND '2023-08-03 17:09:42' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-08-02 13:17:29'
    - '2023-08-03 17:09:42'
  - Krs Recklinghausen
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Dueren' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-10-17 16:35:27' AND '2023-10-31 20:23:24';
  params:
  - - '2023-10-17 16:35:27'
    - '2023-10-31 20:23:24'
  - Krs Dueren
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 5.0708213357220005e-06) WHERE c.name = 'Soest' AND f.timestamp BETWEEN '2023-01-19 12:30:19' AND '2023-01-24 14:37:21';
  params:
  - - '2023-01-19 12:30:19'
    - '2023-01-24 14:37:21'
  - Soest
  - 5.0708213357220005e-06
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.5217579217534159e-05) WHERE c.name = 'Korschenbroich' AND f.timestamp BETWEEN '2023-12-01 03:44:39' AND '2023-12-15 21:10:55';
  params:
  - - '2023-12-01 03:44:39'
    - '2023-12-15 21:10:55'
  - Korschenbroich
  - 1.5217579217534159e-05
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 6.064758850783791e-06) WHERE c.name = 'Bergkamen' AND f.timestamp BETWEEN '2023-09-02 21:02:38' AND '2023-09-10 10:48:21';
  params:
  - - '2023-09-02 21:02:38'
    - '2023-09-10 10:48:21'
  - Bergkamen
  - 6.064758850783791e-06
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-02-28 12:11:38' GROUP BY b.name;
  params:
  - '2023-02-28 12:11:38'
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Rhein-Sieg-Kreis' WHERE f.timestamp BETWEEN '2023-07-14 11:24:54' AND '2023-07-16 00:13:38' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-07-14 11:24:54'
    - '2023-07-16 00:13:38'
  - Krs Rhein-Sieg-Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-26'::timestamp, DATE '2023-11-26'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Altenbeken' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-11-26'
  - Gem Altenbeken
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Rhein-Sieg-Kreis' WHERE f.timestamp BETWEEN '2023-01-23 16:42:51' AND '2023-01-25 09:00:55' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-01-23 16:42:51'
    - '2023-01-25 09:00:55'
  - Krs Rhein-Sieg-Kreis
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-03-23 17:50:41' GROUP BY b.name;
  params:
  - '2023-03-23 17:50:41'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-04-25'::timestamp, DATE '2023-04-25'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Gangelt' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-04-25'
  - Gem Gangelt
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Grefrath' AND f.timestamp BETWEEN '2023-06-01 19:34:52' AND '2023-06-13 13:40:54' AND f.altitude < 910 GROUP BY g.name, f.flightid;
  params:
  - - '2023-06-01 19:34:52'
    - '2023-06-13 13:40:54'
  - Gem Grefrath
  - 910
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-02-23'::timestamp, DATE '2023-02-23'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Krefeld' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-02-23'
  - Gem Krefeld
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-11-13 15:27:07' GROUP BY b.name;
  params:
  - '2023-11-13 15:27:07'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Heinsberg' AND f.timestamp BETWEEN '2023-02-02 10:58:26' AND '2023-02-13 05:50:27' AND f.altitude < 1490 GROUP BY g.name, f.flightid;
  params:
  - - '2023-02-02 10:58:26'
    - '2023-02-13 05:50:27'
  - Gem Heinsberg
  - 1490
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Wuppertal' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-09-03 00:15:43' AND '2023-09-08 09:39:06';
  params:
  - - '2023-09-03 00:15:43'
    - '2023-09-08 09:39:06'
  - Krs Wuppertal
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-03-24'::timestamp, DATE '2023-03-24'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Schleiden' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-03-24'
  - Gem Schleiden
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Hoexter' AND f.timestamp BETWEEN '2023-08-15 23:21:47' AND '2023-08-23 04:43:39' AND f.altitude < 680 GROUP BY g.name, f.flightid;
  params:
  - - '2023-08-15 23:21:47'
    - '2023-08-23 04:43:39'
  - Gem Hoexter
  - 680
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Kleve' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-07-21 18:13:53' AND '2023-08-02 05:02:50';
  params:
  - - '2023-07-21 18:13:53'
    - '2023-08-02 05:02:50'
  - Krs Kleve
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 8.274430496280197e-06) WHERE c.name = 'Petershagen' AND f.timestamp BETWEEN '2023-10-27 09:09:44' AND '2023-11-10 20:23:56';
  params:
  - - '2023-10-27 09:09:44'
    - '2023-11-10 20:23:56'
  - Petershagen
  - 8.274430496280197e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Dahlem' AND f.timestamp BETWEEN '2023-06-03 18:48:24' AND '2023-06-10 10:04:04' AND f.altitude < 950 GROUP BY g.name, f.flightid;
  params:
  - - '2023-06-03 18:48:24'
    - '2023-06-10 10:04:04'
  - Gem Dahlem
  - 950
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.4311055687304578e-05) WHERE c.name = 'Hoerstel' AND f.timestamp BETWEEN '2023-02-26 13:00:59' AND '2023-03-02 18:39:47';
  params:
  - - '2023-02-26 13:00:59'
    - '2023-03-02 18:39:47'
  - Hoerstel
  - 1.4311055687304578e-05
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-03-07 19:30:18' GROUP BY b.name;
  params:
  - '2023-03-07 19:30:18'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-06-23 22:24:50' GROUP BY b.name;
  params:
  - '2023-06-23 22:24:50'
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Rhein-Erft-Kreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-12-31 17:51:16' AND '2023-12-31 23:59:59';
  params:
  - - '2023-12-31 17:51:16'
    - '2023-12-31 23:59:59'
  - Krs Rhein-Erft-Kreis
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-13'::timestamp, DATE '2023-08-13'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Koenigswinter' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-08-13'
  - Gem Koenigswinter
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-01-27'::timestamp, DATE '2023-01-27'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Krefeld' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-01-27'
  - Gem Krefeld
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Coesfeld' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-10-05 08:39:04' AND '2023-10-11 05:58:17';
  params:
  - - '2023-10-05 08:39:04'
    - '2023-10-11 05:58:17'
  - Krs Coesfeld
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-07-12 11:32:46' GROUP BY b.name;
  params:
  - '2023-07-12 11:32:46'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Rahden' AND f.timestamp BETWEEN '2023-03-23 21:57:37' AND '2023-03-29 03:28:00' AND f.altitude < 1110 GROUP BY g.name, f.flightid;
  params:
  - - '2023-03-23 21:57:37'
    - '2023-03-29 03:28:00'
  - Gem Rahden
  - 1110
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Vlotho' AND f.timestamp BETWEEN '2023-01-14 18:40:49' AND '2023-01-17 20:57:24' AND f.altitude < 1420 GROUP BY g.name, f.flightid;
  params:
  - - '2023-01-14 18:40:49'
    - '2023-01-17 20:57:24'
  - Gem Vlotho
  - 1420
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-01-12'::timestamp, DATE '2023-01-12'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Kirchhundem' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-01-12'
  - Gem Kirchhundem
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 8.345535913060735e-06) WHERE c.name = 'Monheim am Rhein' AND f.timestamp BETWEEN '2023-01-15 03:56:03' AND '2023-01-26 13:44:28';
  params:
  - - '2023-01-15 03:56:03'
    - '2023-01-26 13:44:28'
  - Monheim am Rhein
  - 8.345535913060735e-06
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Lindlar' AND f.timestamp BETWEEN '2023-07-14 07:09:26' AND '2023-07-27 10:56:44' AND f.altitude < 1130 GROUP BY g.name, f.flightid;
  params:
  - - '2023-07-14 07:09:26'
    - '2023-07-27 10:56:44'
  - Gem Lindlar
  - 1130
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Unna' AND f.timestamp BETWEEN '2023-09-07 10:01:06' AND '2023-09-17 14:28:29' AND f.altitude < 550 GROUP BY g.name, f.flightid;
  params:
  - - '2023-09-07 10:01:06'
    - '2023-09-17 14:28:29'
  - Gem Unna
  - 550
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Rhein-Erft-Kreis' WHERE f.timestamp BETWEEN '2023-12-14 07:52:02' AND '2023-12-14 10:53:13' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-12-14 07:52:02'
    - '2023-12-14 10:53:13'
  - Krs Rhein-Erft-Kreis
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-09-09 16:52:21' GROUP BY b.name;
  params:
  - '2023-09-09 16:52:21'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-15'::timestamp, DATE '2023-11-15'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Voerde (Niederrhein)' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-11-15'
  - Gem Voerde (Niederrhein)
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 9.475772045780415e-06) WHERE c.name = 'Herten' AND f.timestamp BETWEEN '2023-12-16 23:04:21' AND '2023-12-23 12:31:31';
  params:
  - - '2023-12-16 23:04:21'
    - '2023-12-23 12:31:31'
  - Herten
  - 9.475772045780415e-06
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-20'::timestamp, DATE '2023-11-20'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Halver' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-11-20'
  - Gem Halver
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-08-23 21:08:05' GROUP BY b.name;
  params:
  - '2023-08-23 21:08:05'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-11-28 00:42:22' GROUP BY b.name;
  params:
  - '2023-11-28 00:42:22'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-06-11'::timestamp, DATE '2023-06-11'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Recklinghausen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-06-11'
  - Gem Recklinghausen
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Merzenich' AND f.timestamp BETWEEN '2023-10-29 20:07:04' AND '2023-11-04 10:44:20' AND f.altitude < 1110 GROUP BY g.name, f.flightid;
  params:
  - - '2023-10-29 20:07:04'
    - '2023-11-04 10:44:20'
  - Gem Merzenich
  - 1110
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Maerkischer Kreis' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-11-21 16:47:21' AND '2023-12-03 10:24:47';
  params:
  - - '2023-11-21 16:47:21'
    - '2023-12-03 10:24:47'
  - Krs Maerkischer Kreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Essen' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-10-28 08:00:46' AND '2023-11-06 16:52:51';
  params:
  - - '2023-10-28 08:00:46'
    - '2023-11-06 16:52:51'
  - Krs Essen
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-12-25 01:44:09' GROUP BY b.name;
  params:
  - '2023-12-25 01:44:09'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-09-09 05:36:26' GROUP BY b.name;
  params:
  - '2023-09-09 05:36:26'
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-04-15 20:20:41' GROUP BY b.name;
  params:
  - '2023-04-15 20:20:41'
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Kamp-Lintfort' AND f.timestamp BETWEEN '2023-07-02 19:36:48' AND '2023-07-11 06:10:14' AND f.altitude < 1030 GROUP BY g.name, f.flightid;
  params:
  - - '2023-07-02 19:36:48'
    - '2023-07-11 06:10:14'
  - Gem Kamp-Lintfort
  - 1030
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Hochsauerlandkreis' WHERE f.timestamp BETWEEN '2023-01-05 09:58:19' AND '2023-01-06 00:23:12' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-01-05 09:58:19'
    - '2023-01-06 00:23:12'
  - Krs Hochsauerlandkreis
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Siegen-Wittgenstein' WHERE f.timestamp BETWEEN '2023-02-27 18:09:54' AND '2023-02-28 10:10:57' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-02-27 18:09:54'
    - '2023-02-28 10:10:57'
  - Krs Siegen-Wittgenstein
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Tecklenburg' AND f.timestamp BETWEEN '2023-10-30 20:50:31' AND '2023-11-11 00:35:47' AND f.altitude < 740 GROUP BY g.name, f.flightid;
  params:
  - - '2023-10-30 20:50:31'
    - '2023-11-11 00:35:47'
  - Gem Tecklenburg
  - 740
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Coesfeld' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-06-22 17:47:14' AND '2023-07-04 23:36:53';
  params:
  - - '2023-06-22 17:47:14'
    - '2023-07-04 23:36:53'
  - Krs Coesfeld
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Rhein-Sieg-Kreis' WHERE f.timestamp BETWEEN '2023-08-17 08:16:00' AND '2023-08-19 00:30:16' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-08-17 08:16:00'
    - '2023-08-19 00:30:16'
  - Krs Rhein-Sieg-Kreis
- name: flightsInCountyInPeriod
  type: spatiotemporal
  sql: |
    SELECT DISTINCT f.flightid FROM flight_points f, counties k WHERE k.name = 'Krs Steinfurt' AND f.geom && k.geom AND f.timestamp BETWEEN '2023-12-02 05:49:27' AND '2023-12-14 15:40:16';
  params:
  - - '2023-12-02 05:49:27'
    - '2023-12-14 15:40:16'
  - Krs Steinfurt
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-11-20'::timestamp, DATE '2023-11-20'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Drolshagen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-11-20'
  - Gem Drolshagen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Olpe' WHERE f.timestamp BETWEEN '2023-03-24 03:49:53' AND '2023-03-24 06:38:15' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-03-24 03:49:53'
    - '2023-03-24 06:38:15'
  - Krs Olpe
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-08-06'::timestamp, DATE '2023-08-06'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Netphen' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-08-06'
  - Gem Netphen
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Herford' WHERE f.timestamp BETWEEN '2023-06-15 20:30:23' AND '2023-06-17 02:17:40' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-06-15 20:30:23'
    - '2023-06-17 02:17:40'
  - Krs Herford
- name: countFlightsAtInstantInDistricts
  type: spatiotemporal
  sql: |-
    SELECT b.name, COUNT(DISTINCT f.flightid) FROM flight_points f, districts b WHERE f.geom && b.geom AND f.timestamp = '2023-03-06 21:49:38' GROUP BY b.name;
  params:
  - '2023-03-06 21:49:38'
- name: averageHourlyFlightsDuringDayInMunicipality
  type: spatiotemporal
  sql: |
    WITH hours AS ( SELECT generate_series( DATE '2023-05-05'::timestamp, DATE '2023-05-05'::timestamp + INTERVAL '1 day' - INTERVAL '1 second', INTERVAL '1 hour' ) AS start_time ) SELECT  h.start_time, COUNT(DISTINCT f.flightid) AS active_flights FROM  hours h JOIN  municipalities g ON g.name = 'Gem Wassenberg' LEFT JOIN  flight_points fp ON  fp.timestamp >= h.start_time AND fp.timestamp < h.start_time + INTERVAL '1 hour' AND ST_Intersects(fp.geom, g.geom) LEFT JOIN flight_points f ON f.flightid = fp.flightid GROUP BY  h.start_time ORDER BY  h.start_time;
  params:
  - '2023-05-05'
  - Gem Wassenberg
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.1823295510497545e-05) WHERE c.name = 'Ibbenbueren' AND f.timestamp BETWEEN '2023-05-15 14:28:36' AND '2023-05-26 20:45:53';
  params:
  - - '2023-05-15 14:28:36'
    - '2023-05-26 20:45:53'
  - Ibbenbueren
  - 1.1823295510497545e-05
- name: flightDurationInMunicipalityLowAltitudeInPeriod
  type: spatiotemporal
  sql: |
    SELECT g.name, f.flightid, MIN(f.timestamp) AS entry_time, MAX(f.timestamp) AS exit_time, COUNT(*) * INTERVAL '1 second' AS total_time_below_altitude FROM municipalities g JOIN flight_points f ON ST_Intersects(f.geom, g.geom) WHERE g.name = 'Gem Herzogenrath' AND f.timestamp BETWEEN '2023-09-15 20:03:52' AND '2023-09-19 11:38:55' AND f.altitude < 1090 GROUP BY g.name, f.flightid;
  params:
  - - '2023-09-15 20:03:52'
    - '2023-09-19 11:38:55'
  - Gem Herzogenrath
  - 1090
- name: flightsWithLocalOriginDestinationInPeriodInCounty
  type: spatiotemporal
  sql: |
    WITH relevant_airports AS ( SELECT a.icao as icao FROM airports a JOIN cities c ON a.city = c.name ), qualifying_flight_points AS ( SELECT DISTINCT f.flightid FROM flight_points f JOIN counties k ON  ST_Intersects(f.geom, k.geom) AND k.name = 'Krs Bochum' WHERE f.timestamp BETWEEN '2023-09-21 02:55:58' AND '2023-09-21 17:54:45' ) SELECT  f.flightid,  f.airplanetype,  f.origin AS origin_airport,  a1.city AS origin_city,  f.destination AS destination_airport, a2.city AS destination_city FROM  flight_points f JOIN  qualifying_flight_points qf ON f.flightid = qf.flightid LEFT JOIN  airports a1 ON f.origin = a1.icao LEFT JOIN  airports a2 ON f.destination = a2.icao WHERE (f.origin IN (SELECT icao FROM relevant_airports) OR f.destination IN (SELECT icao FROM relevant_airports));
  params:
  - - '2023-09-21 02:55:58'
    - '2023-09-21 17:54:45'
  - Krs Bochum
- name: inCityRadiusInPeriod
  type: spatiotemporal
  sql: |
    SELECT f.flightId, f.airplanetype, f.origin, f.destination FROM cities AS c JOIN flight_points AS f ON ST_DWithin(f.geom, c.geom, 1.2525728622370691e-05) WHERE c.name = 'Bad Muenstereifel' AND f.timestamp BETWEEN '2023-06-07 06:47:56' AND '2023-06-13 06:56:21';
  params:
  - - '2023-06-07 06:47:56'
    - '2023-06-13 06:56:21'
  - Bad Muenstereifel
  - 1.2525728622370691e-05
